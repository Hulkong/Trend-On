<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.openmate.onmap.mber.dao.MberDao">

    <select id="getUsno" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT USER_NO
          FROM TBCOM_USER
         WHERE USER_ID = #{userId}
    </select>
    
    <select id="getPublicId" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT PUBLIC_ID
          FROM TBCOM_PUBLIC
         WHERE AUTH_KEY = #{authKey}
    </select>
    
    <select id="getPublicInfo" parameterType="java.lang.String" resultType="java.util.Map">
		SELECT PUBLIC_NM
		     , AUTH_KEY
		     , FULL_NAME
		     , TO_CHAR(TO_DATE(USE_STR_DATE, 'YYYYMMDD'), 'YYYY-MM-DD') USE_STR_DATE
	     	 , TO_CHAR(TO_DATE(USE_EXP_DATE, 'YYYYMMDD'), 'YYYY-MM-DD') USE_EXP_DATE
	         , MAX_USER_CNT
		  FROM TBCOM_PUBLIC TP
		  LEFT OUTER JOIN TBCOM_AGRE_INFO TAI
		    ON TP.PUBLIC_ID = TAI.PUBLIC_ID 
		  LEFT OUTER JOIN (
					SELECT ID, FULL_NAME
					FROM TBREGION
					WHERE RGN_CLSS = 'H3' 
				  ) T 
		    ON TAI.CTY_CD = T.ID
		 WHERE TAI.PUBLIC_ID = #{publicId}
		   AND TAI.PUBLIC_SEQ = #{publicSeq}
    </select>

    <!-- 인증키 조회 -->
    <select id="getPublic" parameterType="java.util.HashMap" resultType="java.lang.Integer">
 		SELECT CASE WHEN COUNT(TP.*) = 0 THEN 0
                    WHEN MIN(USER_CNT) = MIN(MAX_USER_CNT) THEN 1
                    ELSE 2
                END
          FROM (
                SELECT TP.public_id, auth_key, MAX_USER_CNT
                  FROM TBCOM_AGRE_INFO TAI
                     , TBCOM_PUBLIC TP
                 WHERE TAI.PUBLIC_ID = TP.PUBLIC_ID
		   AND auth_key = #{authKey}
                 ORDER BY TAI.PUBLIC_SEQ DESC
                 LIMIT 1
               ) TP
          LEFT OUTER JOIN (
                           SELECT PUBLIC_ID ,COUNT(PUBLIC_ID) USER_CNT
                             FROM TBCOM_AGRE_USER
                            GROUP BY PUBLIC_ID
                          ) TUD
            ON TP.PUBLIC_ID = TUD.PUBLIC_ID
    </select>

    <!-- 중복id 체크 / 비밀번호 확인 -->
    <select id="getUsid" parameterType="java.util.HashMap" resultType="java.lang.Integer">
    <![CDATA[
        SELECT COUNT(*)
          FROM TBCOM_USER
         WHERE 1=1
    ]]>
    <if test='userId != null and userId != ""'>
           AND USER_ID = #{userId}
    </if>
    <if test='password != null and password != ""'>
           AND PASSWORD = #{password}
    </if>
    </select>

    <!-- email 인증 조회 -->
    <select id="getAuthEmail" parameterType="java.util.HashMap" resultType="java.lang.Integer">
        SELECT CASE WHEN EMAIL_ID = #{emailId} THEN 1
                    ELSE 0
                END AS CNT
          FROM TBCOM_AUTH_EMAIL
         WHERE USER_NO = ${userNo}
         ORDER BY SEND_TIME DESC
         LIMIT 1
    </select>

    <!-- 사용자 아이디, 비밀번호 찾기 -->
    <select id="getMberInfo"  parameterType="java.util.HashMap" resultType="java.lang.String">
         SELECT T.USER_ID 
           FROM ( SELECT PUBLIC_ID
                    FROM TBCOM_PUBLIC
                   WHERE AUTH_KEY = #{authKey}
                ) TP 
              , ( SELECT USER_ID, PUBLIC_ID
	                FROM TBCOM_USER TU
	                   , TBCOM_USER_DETAIL TUD 
                   WHERE TUD.USER_NO = TU.USER_NO
                     AND TU.USER_NM = #{userNm}
                )T 
          WHERE T.PUBLIC_ID = TP.PUBLIC_ID 
    </select>

    <!-- 메일 발송 저장 -->
    <insert id="setSandMail">
        INSERT INTO TBCOM_AUTH_EMAIL
            ( EMAIL_ID, USER_NO, SEND_TIME, EMAIL_TYPE )
        VALUES
            ( #{emailId}, #{userNo}, NOW(), #{typeMsg} )
    </insert>

    <!-- 사용자 저장 -->
    <insert id="setUserRegist">
        INSERT INTO TBCOM_USER
            ( USER_ID, USER_NM, PASSWORD)
        VALUES
            ( #{userId}, #{userNm}, #{password})
    </insert>

    <!-- 사용자 상세 정보 저장 -->
    <insert id="setUserRegistDetail">
        INSERT INTO TBCOM_USER_DETAIL
            ( USER_NO, PUBLIC_ID, SUV_STAUS_CD, REG_DATE, LAST_UPT_DATE, USER_DIV, EMAIL_SEND_TIME, MEGA_CD, MEGA_NM, CTY_CD, CTY_NM)
        VALUES
            ( #{userNo}, #{publicId}, 'R', TO_CHAR(now(), 'yyyymmdd'), TO_CHAR(now(), 'yyyymmdd'), 'U', NOW(), #{megaCd}, #{megaNm}, #{ctyCd}, #{ctyNm})
    </insert>

    <!-- 사용자 권한 저장 -->
    <insert id="setUserRegistAuthor">
        INSERT INTO TBCOM_AUTHORITY
            (USER_NO, AUTHORITY)
        VALUES
            (#{userNo}, 'ROLE_USER')
    </insert>
    
    <!-- 사용자 기관에따른 계약 연결 -->
    <insert id="setUserConnectPublic">
        INSERT INTO TBCOM_AGRE_USER
            (USER_NO, public_id, public_seq)
        VALUES
            ( #{userNo}
            , #{publicId}
            , (SELECT PUBLIC_SEQ 
                FROM TBCOM_AGRE_INFO
               WHERE PUBLIC_ID = #{publicId}
               ORDER BY PUBLIC_SEQ DESC
               LIMIT 1)
            )
    </insert>

    <!-- 사용자 탈퇴 정보 저장 -->
    <insert id="insertUserSec">
        INSERT INTO TBCOM_USER_SEC
            (
                USER_NO, USER_ID, USER_NM, SEC_TIME, REASON_CD, REASON
            )
        VALUES
            (
                ${userNo}, #{userId}, #{userNm}, NOW(), #{reasonCd}, #{reason}
            )
    </insert>

    <!-- 사용자 상태 업데이트 -->
    <update id="updateUserRegistDetail">
        UPDATE TBCOM_USER_DETAIL
           SET SUV_STAUS_CD = 'U'
             , EMAIL_ADMIT_TIME = NOW()
         WHERE USER_NO = #{userNo}
    </update>

    <!-- 사용자 임시 비밀번호 저장 -->
    <update id="setUserPassword">
        UPDATE TBCOM_USER
           SET PASSWORD = #{password}
        <if test='type != "cpwd"'>
             , TMP_PWD = #{password}
        </if>
         WHERE USER_ID = #{userId}
    </update>

    <!-- 이메일 인증 삭제 -->
    <delete id="deleteUserAuthEmail">
        DELETE
          FROM TBCOM_AUTH_EMAIL
         WHERE 1=1
        <if test='userId != null and userId != ""'>
           AND EMAIL_ID = #{userId}
        </if>
        <if test='publicId != null and publicId != ""'>
           AND USER_NO IN (
                            SELECT USER_NO
                              FROM TBCOM_USER_DETAIL TUD
                             WHERE PUBLIC_ID = ${publicId}
                          )
        </if>
    </delete>

    <!-- 사용자 권한 삭제 -->
    <delete id="deleteUserAuthorities">
        DELETE
          FROM TBCOM_AUTHORITY
         WHERE 1=1
        <if test='userNo != null and userNo != ""'>
           AND USER_NO = ${userNo}
        </if>
        <if test='publicId != null and publicId != ""'>
           AND USER_NO IN (
                            SELECT USER_NO
                              FROM TBCOM_USER_DETAIL TUD
                             WHERE PUBLIC_ID = ${publicId}
                          )
        </if>
    </delete>

    <!-- 사용자 상세 정보 삭제 -->
    <delete id="deleteUserDetail">
        DELETE
          FROM TBCOM_USER_DETAIL
         WHERE 1=1
        <if test='userNo != null and userNo != ""'>
           AND USER_NO = ${userNo}
        </if>
        <if test='publicId != null and publicId != ""'>
           AND PUBLIC_ID = ${publicId}
        </if>
    </delete>

    <!-- 사용자 정보 삭제 -->
    <delete id="deleteUser">
        DELETE
          FROM TBCOM_USER
         WHERE 1=1
        <if test='userId != null and userId != ""'>
           AND USER_ID = #{userId}
        </if>
        <if test='publicId != null and publicId != ""'>
           AND USER_NO IN (
                            SELECT USER_NO
                              FROM TBCOM_USER_DETAIL TUD
                             WHERE TUD.PUBLIC_ID = ${publicId}
                          )
        </if>
    </delete>
    
    <!-- 사용자 계약 정보 삭제 -->
    <delete id="deleteAgreUser">
        DELETE
          FROM TBCOM_AGRE_USER
         WHERE 1=1
           AND USER_NO = #{userNo}
    </delete>

    <!-- 사용자ID로 상세 조회 -->
    <select id="getUserInfo" parameterType="java.lang.String" resultType="com.openmate.frmwrk.user.UserInfo">
        SELECT TU.USER_NO AS userNo
             , TU.USER_ID as userId
             , TU.USER_NM as userName
             , TU.PASSWORD AS password
             , TU.TMP_PWD AS tmpPwd
             , TAI.USE_TYPE_CD AS useTypeCd
          FROM TBCOM_USER TU, TBCOM_AGRE_USER TAU, TBCOM_AGRE_INFO TAI
         WHERE TU.USER_ID = #{userId}
           AND TU.USER_NO = TAU.USER_NO
           AND TAU.PUBLIC_ID = TAI.PUBLIC_ID
         ORDER BY TAI.PUBLIC_SEQ DESC
         LIMIT 1
    </select>

    <!-- 로그인 사용자 조회 -->
    <select id="getLoginId" parameterType="com.openmate.frmwrk.user.UserIdPwInput" resultType="com.openmate.frmwrk.user.UserInfo">
    <![CDATA[
        SELECT USER_NO as userNo
             , USER_ID as userId
             , USER_NM as userName
          FROM TBCOM_USER TU
         WHERE TU.USER_ID = #{userId}
           AND TU.PASSWORD = #{password}
    ]]>
    </select>

    <!-- 로그인 사용자 권한 조회 -->
    <select id="getLoginAuth" parameterType="com.openmate.frmwrk.user.UserInfo" resultType="hashmap">
    <![CDATA[
        SELECT AUTHORITY AS authority
          FROM TBCOM_AUTHORITY TA
         WHERE TA.USER_NO = ${userNo}
    ]]>
    </select>

	<!-- 사용자 정보 조회 -->
	<select id="getUserInfoMap" parameterType="java.lang.String" resultType="java.util.Map">
		   SELECT TU.USER_NO, USER_ID, USER_NM, PASSWORD
				, TMP_PWD , SUV_STAUS_CD, TUD.REG_DATE, TUD.LAST_UPT_DATE
				, USER_DIV, EMAIL_SEND_TIME, EMAIL_ADMIT_TIME , TP.MEGA_CD
				, TP.CTY_CD, T.FULL_NAME
				, SPLIT_PART(T.FULL_NAME, ' ', 1) MEGA_NM , SPLIT_PART(T.FULL_NAME, ' ', 2) CTY_NM 
				, TP.PUBLIC_SEQ, TP.USE_EXP_DATE, TP.USE_TYPE_CD, ND.NOW_DATE, REGION_TXT
			 FROM TBCOM_USER_DETAIL TUD 
			    , (SELECT * FROM TBCOM_USER WHERE USER_ID = #{userId} )TU
			 LEFT OUTER JOIN ( SELECT TAI.* , TAU.USER_NO , TBP.REGION_TXT
							     FROM TBCOM_AGRE_INFO TAI , TBCOM_AGRE_USER TAU, TBCOM_PUBLIC TBP 
							    WHERE TAI.PUBLIC_ID = TAU.PUBLIC_ID 
							      AND TAI.PUBLIC_SEQ = TAU.PUBLIC_SEQ 
							      AND TBP.PUBLIC_ID = TAU.PUBLIC_ID 
							    ORDER BY PUBLIC_SEQ DESC
							  )TP 
			   ON TU.USER_NO = TP.USER_NO 
			 LEFT OUTER JOIN( SELECT ID, FULL_NAME, PARENT_ID 
			                    FROM TBREGION 
			                   WHERE RGN_CLSS = 'H3' 
			                 ) T 
			   ON TP.CTY_CD = T.ID 
			    , (SELECT TO_CHAR(NOW(), 'YYYYMMDD') NOW_DATE) ND
			WHERE TU.USER_NO = TUD.USER_NO
			ORDER BY PUBLIC_SEQ DESC
			LIMIT 1
	</select>

	<!-- 사용신청서 등록 -->
	<insert id="useApplyRegist" parameterType="java.lang.String" >
		<selectKey resultType="Integer" keyProperty="no" keyColumn="no" order="BEFORE">
            SELECT COALESCE(MAX(NO)+1, 0) FROM TBCOM_APPLY 
        </selectKey>
        
		INSERT INTO TBCOM_APPLY (
							  NO	
		               		, NAME
		               		, PUBLIC_NM
		               		, DEPT
		               		, POSITION
		               		, MOBILE
		               		, EMAIL
		               		, NEWSLETTERYN
		               		, REG_DATE
		               		, MEMO
		               		, STATE
		               ) VALUES (
		                      ${no}
		                    , #{name}
		                    , #{publicNm}
		                    , #{dept}
		                    , #{position}
		                    , #{mobile}
		                    , #{email}
		                    , #{newsletterYn}
		                    , now()
		                    , #{memo}
		                    , '1'
		               )
	</insert>
</mapper>
