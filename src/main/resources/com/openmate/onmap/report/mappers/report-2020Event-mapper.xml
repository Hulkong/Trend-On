<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.openmate.onmap.report.service.newEventReportDao">

  <!-- 이벤트효과 보고서 시작 -->
  <!-- 전페이지. 전 페이지중 필요한 페이지 전체에서 사용 - 기본 텍스트 -->
  <select id="rpt-new-evntEff-000-001" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT SPLIT_PART(FULL_NAME, ' ', 1) MEGA_NM 
			 , SPLIT_PART(FULL_NAME, ' ', 2) CTY_NM 
			 , SPLIT_PART(FULL_NAME, ' ', 3) ADMI_NM 
			 , SUBSTR(#{lastStartDate},1,4)||'년 '||SUBSTR(#{lastStartDate},5,2)||'월 ' as compare_start
			 , SUBSTR(#{lastEndDate},1,4)||'년 '||SUBSTR(#{lastEndDate},5,2)||'월 ' as compare_end
			 , SUBSTR(#{lastStartDate},1,4)||'년 '||SUBSTR(#{lastStartDate},5,2)||'월 '||SUBSTR(#{lastStartDate},7,2)||'일 '||'~ '||SUBSTR(#{lastEndDate},1,4)||'년 '||SUBSTR(#{lastEndDate},5,2)||'월 '||SUBSTR(#{lastEndDate},7,2)||'일' AS compare_period
			 , TO_DATE(#{lastEndDate},'YYYYMMDD') - TO_DATE(#{lastStartDate},'YYYYMMDD') +1 as compare_days
			 , SUBSTR(#{startDate},1,4)||'년 '||SUBSTR(#{startDate},5,2)||'월 ' as event_start
			 , SUBSTR(#{endDate},1,4)||'년 '||SUBSTR(#{endDate},5,2)||'월 ' as event_end
			 , SUBSTR(#{startDate},1,4)||'년 '||SUBSTR(#{startDate},5,2)||'월 '||SUBSTR(#{startDate},7,2)||'일 '||'~ '||SUBSTR(#{endDate},1,4)||'년 '||SUBSTR(#{endDate},5,2)||'월 '||SUBSTR(#{endDate},7,2)||'일' AS event_period
			 , TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1 as event_days
		FROM TBREGION
		WHERE 1=1
		AND ID = #{admiCd}
		AND RGN_CLSS = 'H4'
		LIMIT 1
  ]]>
  </select>
  
  <!-- 전페이지. 근접행정동 리스트 -->
  <select id="rpt-new-evntEff-000-002" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT B.ID
		FROM TBREGION A
			, TBREGION B 
		WHERE 1=1 
		AND A.ID =  #{admiCd} 
		AND B.ID !=  #{admiCd}
		AND B.RGN_CLSS ='H4'  
		AND B.ID like #{ctyCd}||'%'
		AND ST_Distance(A.SHAPE,B.SHAPE) <500
  ]]>
  </select>
  
    <!-- 7페이지. 2장 1절 이벤트기간 전후 유동인구 변화 1문단 - 총 유동인구, 일평균 유동인구 -->
  <select id="rpt-new-evntEff-007-001" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		select sum(total_cnt) as tot_cnt
			 , round(sum(total_cnt)/(TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1),1)as rate
		from TBADMI_FLOAT_ALL_CNT A
		WHERE 1=1
		AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') ,'YYYYMMDD') 
		AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') ,'YYYYMMDD')
		AND ADMI_CD = #{admiCd}
  ]]>
  </select>
  
  <!-- 7페이지. 2장 1절 이벤트기간 전후 유동인구 변화 2문단 - 표 & 그래프 (평상시기간 일평균 유동인구 , 평상시 대비 이벤트기간 과의 비율) -->
  <select id="rpt-new-evntEff-007-002" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT ROUND(LW5,1) AS LW3    
		     , ROUND(LW4,1) AS LW2         
		     , ROUND(LW3,1) AS LW1    
		     , ROUND(TERM,1) AS TERM    
		     , ROUND(LW2,1) AS AW1    
		     , ROUND(LW1,1) AS AW2 
		     , ROUND(LW5/1000,1) AS LW3_txt    
		     , ROUND(LW4/1000,1) AS LW2_txt         
		     , ROUND(LW3/1000,1) AS LW1_txt    
		     , ROUND(TERM/1000,1) AS TERM_txt    
		     , ROUND(LW2/1000,1) AS AW1_txt    
		     , ROUND(LW1/1000,1) AS AW2_txt    
		     , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13
		             THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4,1)
		             WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7
		             THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3,1)     
		             WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
		             THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0) )/5,1)        
		             ELSE 0 END ) AS DAYS_RATE
		     , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13
		             THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4000,1)
		             WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7
		             THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3000,1)     
		             WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
		             THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0) )/5000,1)        
		             ELSE 0 END ) AS DAYS_RATE_txt
		     , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13 and ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0)) != 0
		             THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) )/4) * 100,1)
		             WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7  and  ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0)) != 0
		             THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0))/3) * 100,1)
		             WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14  AND ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) !=0
		             THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) * 100,1)
		             ELSE 0 
		        END  ) AS RATE  
		  FROM
		      (
		        SELECT SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN TOTAL_CNT END)/7 AS LW5  
		             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN TOTAL_CNT END)/7 AS LW4  
		             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN TOTAL_CNT END)/7 AS LW3 
		             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
		                        AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
		                        THEN TOTAL_CNT / 7
		               			ELSE NULL 
		               	   END) AS LW2 
		             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
		                        AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
		                        THEN TOTAL_CNT/ 7
		                		ELSE NULL 
		               	   END) AS LW1
		             , COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  #{startDate} AND #{endDate} THEN TOTAL_CNT END)/ (TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1),0) AS TERM  
		         FROM TBADMI_FLOAT_ALL_CNT A
		        WHERE 1=1
		          AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') 
		          AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
		          AND ADMI_CD = #{admiCd}
			      AND TOTAL_CNT > 0	      
		      ) T
		 WHERE 1=1
		   AND (COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) > 0
  ]]>
  </select>
  
  <!-- 7페이지. 2장 1절 이벤트기간 전후 경제효과 3문단 - 비교기간동안 일평균 거래금액 과 이벤트기간과의 비교 -->
  <select id="rpt-new-evntEff-007-003" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT T2.AVG_CNT as compare_rate
		, ROUND((T1.AVG_CNT - T2.AVG_CNT) / T2.AVG_CNT *100,1) AS RATE
		from (
			SELECT (SUM(TOTAL_CNT) / (#{endDate}::date - #{startDate}::date + 1)) AS AVG_CNT
			FROM TBADMI_FLOAT_ALL_CNT A
			WHERE 1=1
			AND A.STDR_DATE BETWEEN #{startDate} AND #{endDate}
			AND ADMI_CD = #{admiCd}
			AND TOTAL_CNT > 0                 
		 ) T1
		,(
			SELECT (SUM(TOTAL_CNT) / (#{lastEndDate}::date - #{lastStartDate}::date + 1)) AS AVG_CNT
			FROM TBADMI_FLOAT_ALL_CNT A
			WHERE 1=1
			AND A.STDR_DATE BETWEEN #{lastStartDate} AND #{lastEndDate}
			AND ADMI_CD = #{admiCd}
			AND TOTAL_CNT > 0                
		 ) T2
  ]]>
  </select>
  
  <!-- 7페이지. 2장 1절 비교기간 전후 경제효과  - 비교기간 [그림5],[표4] -->
  <select id="rpt-new-evntEff-007-004" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT ROUND(LW5,1) AS LW3    
		     , ROUND(LW4,1) AS LW2         
		     , ROUND(LW3,1) AS LW1    
		     , ROUND(TERM,1) AS TERM    
		     , ROUND(LW2,1) AS AW1    
		     , ROUND(LW1,1) AS AW2  
		     , ROUND(LW5/1000,1) AS LW3_txt    
		     , ROUND(LW4/1000,1) AS LW2_txt         
		     , ROUND(LW3/1000,1) AS LW1_txt    
		     , ROUND(TERM/1000,1) AS TERM_txt    
		     , ROUND(LW2/1000,1) AS AW1_txt    
		     , ROUND(LW1/1000,1) AS AW2_txt    
		     , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{lastEndDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13
		             THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4,1)
		             WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{lastEndDate},'YYYYMMDD') from tbcom_stdr) < 7
		             THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3,1)     
		             WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{lastEndDate},'YYYYMMDD') from tbcom_stdr) >= 14
		             THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0) )/5, 1)        
		             ELSE 0 END ) AS DAYS_RATE
		     , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{lastEndDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13
		             THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4000,1)
		             WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{lastEndDate},'YYYYMMDD') from tbcom_stdr) < 7
		             THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3000,1)     
		             WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{lastEndDate},'YYYYMMDD') from tbcom_stdr) >= 14
		             THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0) )/5000,1)        
		             ELSE 0 END ) AS DAYS_RATE_txt
		     , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{lastEndDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13 and ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0)) != 0
		             THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) )/4) * 100,1)
		             WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{lastEndDate},'YYYYMMDD') from tbcom_stdr) < 7  and  ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0)) != 0
		             THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0))/3) * 100,1)
		             WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{lastEndDate},'YYYYMMDD') from tbcom_stdr) >= 14  AND ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) !=0
		             THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) * 100,1)
		             ELSE 0 
		        END  ) AS RATE  
		  FROM
		      (
		        SELECT SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{lastStartDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{lastStartDate},'YYYYMMDD') -15,'YYYYMMDD') THEN TOTAL_CNT END)/7 AS LW5  
		             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{lastStartDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{lastStartDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN TOTAL_CNT END)/7 AS LW4  
		             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{lastStartDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{lastStartDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN TOTAL_CNT END)/7 AS LW3 
		             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{lastEndDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{lastEndDate},'YYYYMMDD') + 7,'YYYYMMDD')
		                        AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{lastEndDate},'YYYYMMDD') from tbcom_stdr) >= 7
		                        THEN TOTAL_CNT / 7
		               			ELSE NULL 
		               	   END) AS LW2 
		             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{lastEndDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{lastEndDate},'YYYYMMDD') +14,'YYYYMMDD')
		                        AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{lastEndDate},'YYYYMMDD') from tbcom_stdr) >= 14
		                        THEN TOTAL_CNT/ 7
		                		ELSE NULL 
		               	   END) AS LW1
		             , COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  #{lastStartDate} AND #{lastEndDate} THEN TOTAL_CNT END)/ (TO_DATE(#{lastEndDate},'YYYYMMDD') - TO_DATE(#{lastStartDate},'YYYYMMDD') +1),0) AS TERM  
		         FROM TBADMI_FLOAT_ALL_CNT A
		        WHERE 1=1
		          AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{lastStartDate},'YYYYMMDD') -21,'YYYYMMDD') 
		          AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{lastEndDate},'YYYYMMDD') +14,'YYYYMMDD')
		          AND ADMI_CD = #{admiCd}
			      AND TOTAL_CNT > 0	      
		      ) T
		 WHERE 1=1
		   AND (COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) > 0  
  ]]>
  </select>
  
  <!-- 8페이지. 2장 1절 이벤트기간 전후 경제효과 1문단 - 총 거래금액, 일평균 거래금액, 총 거래량, 일평균 거래량 -->
  <select id="rpt-new-evntEff-008-001" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT SUM(SALE_CNT) AS TOT_SALE_CNT 
			 , SUM(SALE_AMT) AS TOT_SALE_AMT 
			 , ROUND(SUM(SALE_CNT)/(TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1)) AS AVG_CNT
			 , ROUND(SUM(SALE_AMT)/(TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1)) AS AVG_AMT
		FROM TBADMI_UPJONG_INFO_D A
		WHERE 1=1
		AND ADMI_CD = #{admiCd}
		AND SALE_AMT > 0
		AND SALE_CNT > 0
		AND A.STDR_DATE between #{startDate} AND  #{endDate}
  ]]>
  </select>
  
  <!-- 8페이지. 2장 1절 이벤트기간 전후 경제효과 2문단 - 평상시 일평균 거래금액, 평상시 대비 이벤트 기간 일평균 거래금액 비율  -->
  <select id="rpt-new-evntEff-008-002" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT  ROUND(CASE 
						WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13
						THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4,1)
						WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7
						THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3,1)     
						WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
						THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0) )/5,1)
						ELSE 0 
				END ) AS AVG_AMT,
				(CASE 
					WHEN (SELECT (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13 
					AND ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0)) != 0
					THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) )/4) * 100,1)
					WHEN (SELECT (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7  
					AND  ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0)) != 0
					THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0))/3) * 100,1)
					WHEN (SELECT (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14  
					AND ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) !=0
					THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0)+ COALESCE(LW1,0))/5) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0)+ COALESCE(LW1,0) )/5) * 100,1)
					ELSE 0 
				END ) AS RATE  
		FROM (
			select SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END)/7 AS LW5  
				 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END)/7 AS LW4  
				 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END)/7 AS LW3 
				 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
							AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
							THEN SALE_AMT / 7		              
							ELSE NULL 
					END) AS LW2 
				 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
							AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
							THEN SALE_AMT/ 7		                        
							ELSE NULL 
					END) AS LW1 
				 , COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  #{startDate} AND #{endDate} THEN SALE_AMT END)/ (TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1),0) AS TERM 
			FROM TBADMI_UPJONG_INFO_D A
			WHERE 1=1
			AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') 
			AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
			AND ADMI_CD = #{admiCd}
			AND SALE_AMT > 0
			AND SALE_CNT > 0                 
		) t  
  ]]>
  </select>
  
  <!-- 8페이지. 2장 1절 이벤트기간 전후 경제효과 3문단 - 비교기간동안 일평균 거래금액 -->
  <select id="rpt-new-evntEff-008-003" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT ROUND(SUM(SALE_CNT)/(TO_DATE(#{lastEndDate},'YYYYMMDD') - TO_DATE(#{lastStartDate},'YYYYMMDD') +1 )) AS AVG_CNT
			 , ROUND(SUM(SALE_AMT)/(TO_DATE(#{lastEndDate},'YYYYMMDD') - TO_DATE(#{lastStartDate},'YYYYMMDD') +1 )) AS AVG_AMT
		FROM TBADMI_UPJONG_INFO_D A
		WHERE 1=1
		AND ADMI_CD = #{admiCd}
		AND A.STDR_DATE BETWEEN #{lastStartDate} AND #{lastEndDate}
  ]]>
  </select>
  
  <!-- 8페이지. 2장 1절 이벤트기간 전후 경제효과 3문단 - 비교기간에 대한 이벤트 기간의 일평균 거래금액 비율 -->
  <select id="rpt-new-evntEff-008-004" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT 
			ROUND((T1.AVG_AMT - T2.AVG_AMT) / T2.AVG_AMT *100,1) AS RATE
		from (
			SELECT (SUM(SALE_AMT) / (#{endDate}::date - #{startDate}::date + 1)) AS AVG_AMT
			FROM TBADMI_UPJONG_INFO_D A
			WHERE 1=1
			AND A.STDR_DATE BETWEEN #{startDate} AND #{endDate}
			AND ADMI_CD = #{admiCd}
			AND SALE_AMT > 0
			AND SALE_CNT > 0                 
		 ) T1
		,(
			SELECT (SUM(SALE_AMT) / (#{lastEndDate}::date - #{lastStartDate}::date + 1)) AS AVG_AMT
			FROM TBADMI_UPJONG_INFO_D A
			WHERE 1=1
			AND A.STDR_DATE BETWEEN #{lastStartDate} AND #{lastEndDate}
			AND ADMI_CD = #{admiCd}
			AND SALE_AMT > 0
			AND SALE_CNT > 0                
		 ) T2
  ]]>
  </select>
  
  <!-- 8페이지. 2장 1절 이벤트기간 전후 경제효과 - 그래프 & 표 (이벤트기간 전후 일평균 거래금액 변화) -->
  <select id="rpt-new-evntEff-008-005" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT (CASE WHEN LW5 IS NULL THEN '-' ELSE CAST(ROUND(LW5/1000000,1) AS TEXT) END) AS LW3_TXT    
			 , (CASE WHEN LW4 IS NULL THEN '-' ELSE CAST(ROUND(LW4/1000000,1) AS TEXT) END) AS LW2_TXT     
			 , (CASE WHEN LW3 IS NULL THEN '-' ELSE CAST(ROUND(LW3/1000000,1) AS TEXT) END) AS LW1_TXT     
			 , (CASE WHEN TERM IS NULL THEN '-' ELSE CAST(ROUND(TERM/1000000,1) AS TEXT) END) AS TERM_TXT     
			 , (CASE WHEN LW2 IS NULL THEN '-' ELSE CAST(ROUND(LW2/1000000,1) AS TEXT) END) AS AW1_TXT     
			 , (CASE WHEN LW1 IS NULL THEN '-' ELSE CAST(ROUND(LW1/1000000,1) AS TEXT) END) AS AW2_TXT
			 , LW5 AS LW3    
			 , LW4 AS LW2     
			 , LW3 AS LW1     
			 , TERM AS TERM     
			 , LW2 AS AW1     
			 , LW1 AS AW2
			 , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13
					 THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4000000,1)
					 WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7
					 THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3000000,1)     
					 WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
					 THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0) )/5000000,1)        
					 ELSE 0 
				END ) AS avg_txt
			, (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13 and ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0)) != 0
					THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) )/4) * 100,1)
					WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7  and  ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0)) != 0
					THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0))/3) * 100,1)
					WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14  AND ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) !=0
					THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) * 100,1)
					ELSE 0 
				END ) AS RATE_txt                         
		FROM
		(
			SELECT ROUND(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END)/7) AS lw5  
				 , ROUND(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END)/7) AS lw4  
				 , ROUND(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END)/7) AS lw3 
				 , ROUND(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
								  AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
								  THEN SALE_AMT / 7
								  ELSE NULL 
					END)) AS LW2 
				, ROUND(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
								 AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
								 THEN SALE_AMT/ 7
								 ELSE NULL 
					END)) AS LW1
				, COALESCE(ROUND(SUM(CASE WHEN STDR_DATE BETWEEN  #{startDate} AND #{endDate} THEN SALE_AMT END)/ (TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1)),0) AS TERM  
			FROM TBADMI_UPJONG_INFO_D A
			WHERE 1=1
			AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') 
			AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
			AND ADMI_CD = #{admiCd}
			AND SALE_AMT > 0
			AND SALE_CNT > 0 		              
		) t   
  ]]>
  </select>
  
  <!-- 8페이지. 2장 1절 이벤트기간 전후 경제효과 1문단 - 그래프 & 표 (비교기간 전후 일평균 거래금액 변화) -->
  <select id="rpt-new-evntEff-008-006" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT (CASE WHEN LW5 IS NULL THEN '-' ELSE CAST(ROUND(LW5/1000000,1) AS TEXT) END) AS LW3_txt    
			 , (CASE WHEN LW4 IS NULL THEN '-' ELSE CAST(ROUND(LW4/1000000,1) AS TEXT) END) AS LW2_txt     
			 , (CASE WHEN LW3 IS NULL THEN '-' ELSE CAST(ROUND(LW3/1000000,1) AS TEXT) END) AS LW1_txt     
			 , (CASE WHEN TERM IS NULL THEN '-' ELSE CAST(ROUND(TERM/1000000,1) AS TEXT) END) AS TERM_txt     
			 , (CASE WHEN LW2 IS NULL THEN '-' ELSE CAST(ROUND(LW2/1000000,1) AS TEXT) END) AS AW1_txt     
			 , (CASE WHEN LW1 IS NULL THEN '-' ELSE CAST(ROUND(LW1/1000000,1) AS TEXT) END) AS AW2_txt  
			 , LW5 as lw3    
			 , LW4 AS LW2     
			 , LW3 AS LW1     
			 , TERM AS TERM     
			 , LW2 AS AW1     
			 , LW1 AS AW2  
			 , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{lastEndDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13
					 THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4000000,1)
					 WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{lastEndDate},'YYYYMMDD') from tbcom_stdr) <= 0
					 THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3000000,1)     
					 WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{lastEndDate},'YYYYMMDD') from tbcom_stdr) >= 14
					 THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0) )/5000000,1)        
					 ELSE 0 
				END ) AS avg
			 , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{lastEndDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13 and ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0)) != 0
					 THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) )/4) * 100,1)
					 WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{lastEndDate},'YYYYMMDD') from tbcom_stdr) < 7  and  ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0)) != 0
					 THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0))/3) * 100,1)
					 WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{lastEndDate},'YYYYMMDD') from tbcom_stdr) >= 14  AND ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) !=0
					 THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) * 100,1)
					 ELSE 0 
				END ) AS RATE
		FROM
		(   SELECT ROUND(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{lastStartDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{lastStartDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END) / 7) AS LW5  
				 , ROUND(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{lastStartDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{lastStartDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END) / 7) AS LW4   
				 , ROUND(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{lastStartDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{lastStartDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END) / 7) AS LW3  
				 , ROUND(SUM(CASE WHEN STDR_DATE BETWEEN  #{lastStartDate} AND #{lastEndDate} THEN SALE_AMT END)/((TO_DATE(#{lastEndDate},'YYYYMMDD') - TO_DATE(#{lastStartDate},'YYYYMMDD') +1))) AS TERM 
				 , ROUND(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{lastEndDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{lastEndDate},'YYYYMMDD') + 7,'YYYYMMDD') THEN SALE_AMT / 7 END)) AS LW2 
				 , ROUND(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{lastEndDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{lastEndDate},'YYYYMMDD') + 14,'YYYYMMDD') THEN SALE_AMT / 7 END)) AS LW1
			FROM TBADMI_UPJONG_INFO_D A
			WHERE 1=1
			AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{lastStartDate},'YYYYMMDD') -21,'YYYYMMDD') 
			AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{lastEndDate},'YYYYMMDD') +14,'YYYYMMDD')
			AND ADMI_CD = #{admiCd}
			AND SALE_AMT > 0
			AND SALE_CNT > 0			         
		) t  
  ]]>
  </select>
  
  <!-- 9페이지. 2장 2절 주변지역 경제효과 및 유동인구 변화 - 평상시 대비 이벤트 기간동안 유동인구 변화율이 가장 큰 지역 주제도 -->
  <select id="rpt-new-evntEff-009-001" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
			SELECT ID
			     , NM
	  		     , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13 and ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0)) != 0
	                     THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) )/4) * 100,1)
	                     WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7 and (COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0)) != 0
	                     THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0))/3) * 100,1)
	                     WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14  AND ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) !=0
	                     THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) * 100,1)
	                     ELSE 0 
	                END ) AS RATE  
			  FROM
			      (
				    SELECT SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN TOTAL_CNT END)/7 AS LW5  
				         , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN TOTAL_CNT END)/7 AS LW4  
				         , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN TOTAL_CNT END)/7 AS LW3 
			             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
			                        AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
			                        THEN TOTAL_CNT / 7		              
			               			ELSE NULL 
			               	   END) AS LW2 
			             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
			                        AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
			                        THEN TOTAL_CNT/ 7		                        
			                		ELSE NULL 
			                   END) AS LW1	
				         , COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  #{startDate} AND #{endDate} THEN TOTAL_CNT END)/ (TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1),0) AS TERM  
					     , B.ID
					     , B.NM
					 FROM  tbadmi_float_all_cnt A
					     , TBREGION B
				    WHERE 1=1
					  AND A.ADMI_CD = B.ID
				          AND TOTAL_CNT > 0
					  AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 21,'YYYYMMDD')
					  AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 14,'YYYYMMDD') 		
					  AND ADMI_CD = #{admiCd}
					GROUP BY ID, NM
			      ) T 
			  WHERE 1=1
	            AND (COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) > 0  
			UNION ALL
			SELECT ID
			     , NM
	  		     , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13 and ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0)) != 0
	                     THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) )/4) * 100,1)
	                     WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7 and (COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0)) != 0
	                     THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0))/3) * 100,1)
	                     WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14  AND ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) !=0
	                     THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) * 100,1)
	                     ELSE 0 
	                END ) AS RATE  
			  FROM
			      (
				    SELECT SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN TOTAL_CNT END)/7 AS LW5  
				         , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN TOTAL_CNT END)/7 AS LW4  
				         , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN TOTAL_CNT END)/7 AS LW3 
			             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
			                        AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
			                        THEN TOTAL_CNT / 7		              
			               			ELSE NULL 
			               	   END) AS LW2 
			             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
			                        AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
			                        THEN TOTAL_CNT/ 7		                        
			                		ELSE NULL 
			                   END) AS LW1	
				         , COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  #{startDate} AND #{endDate} THEN TOTAL_CNT END)/ (TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1),0) AS TERM  
					     , B.ID
					     , B.NM
					 FROM  tbadmi_float_all_cnt A
					     , TBREGION B
				    WHERE 1=1
					  AND A.ADMI_CD = B.ID
				          AND TOTAL_CNT > 0
					  AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 21,'YYYYMMDD')
					  AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 14,'YYYYMMDD') 		
		]]>
		<!-- ROW COUNT(1) 3이상 일때 -->
	    <if test='admiAround != null and admiAround != ""'>  
		<![CDATA[		       
					  AND ADMI_CD IN (${admiAround})
		]]>			 
	    </if>
	    <!-- ROW COUNT(1) 3 미만 일때 -->
		<if test='admiAround == null or admiAround == ""'> 
			    	  AND ADMI_CD IN (SELECT B.ID  
			    		    		    FROM TBREGION A
			    		    			   , TBREGION B 
			    		    		   WHERE A.ID = #{admiCd} 
			    		    			 AND B.ID like #{ctyCd}||'%'
			    		    			 AND B.ID != #{admiCd}
			    		    			 AND B.RGN_CLSS ='H4' 
			    		    		   ORDER BY ST_Distance(A.SHAPE,B.SHAPE) LIMIT 3)
		</if> 
		<![CDATA[
					GROUP BY ID, NM
			      ) T 
			  WHERE 1=1
	            AND (COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) > 0  
	  ]]>
  </select>
  
  <!-- 9페이지. 2장 2절 주변지역 경제효과 및 유동인구 변화 - 평상시 대비 이벤트 기간동안 유동인구 변화율이 가장 큰 지역 리스트 3 -->
  <select id="rpt-new-evntEff-009-004" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT T1.NM, T1.ID 
			 , ROUND((T1.AVG_CNT - T2.AVG_CNT) / T2.AVG_CNT *100,1) AS RATE
			 , ROUND((T1.AVG_CNT - T2.AVG_CNT) / T2.AVG_CNT *100,1) AS RATE_ORDER
			 , ROUND((T1.AVG_CNT - T2.AVG_CNT)) AS CNT
		FROM (
			SELECT B.NM, B.ID
				 , (SUM(TOTAL_CNT) /  (#{endDate}::DATE - #{startDate}::DATE  +1 )) AS AVG_CNT     
			FROM TBADMI_FLOAT_ALL_CNT A
				, TBREGION B
			WHERE 1=1
			AND A.ADMI_CD = B.ID
			AND A.STDR_DATE >= #{startDate}
			AND A.STDR_DATE <= #{endDate}
			AND TOTAL_CNT > 0
		  ]]>              
			<!-- ROW COUNT(1) 3이상 일때 -->
		    <if test='admiAround != null and admiAround != ""'>  
				    		 AND ADMI_CD IN (${admiAround})
		    </if>
		    <!-- ROW COUNT(1) 3 미만 일때 -->
			<if test='admiAround == null or admiAround == ""'> 
			AND ADMI_CD IN ( SELECT B.ID  
							 FROM TBREGION A
							 	, TBREGION B 
							 WHERE A.ID = #{admiCd} 
							 AND B.ID LIKE #{ctyCd}||'%'
							 AND B.ID != #{admiCd}
							 AND B.RGN_CLSS ='H4' 
							 ORDER BY ST_DISTANCE(A.SHAPE,B.SHAPE) LIMIT 3
			)
		  </if>  
		  <![CDATA[
			GROUP BY B.NM, B.ID   
		) T1,
		(
			SELECT B.NM, B.ID      
				, (CASE WHEN (SELECT (TO_DATE(STDR_YM,'YYYYMM') + INTERVAL '1 MONTH - 1 DAY')::DATE  -  TO_DATE(#{endDate},'YYYYMMDD') FROM TBCOM_STDR) < 7
					    THEN ( COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN TOTAL_CNT END)/7,0)  
						 	 + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN TOTAL_CNT END)/7,0)  
							 + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN TOTAL_CNT END)/7,0))/3 
					    WHEN (SELECT (TO_DATE(STDR_YM,'YYYYMM') + INTERVAL '1 MONTH - 1 DAY')::DATE  -  TO_DATE(#{endDate},'YYYYMMDD') FROM TBCOM_STDR) BETWEEN  7 AND 13 
					    THEN ( COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN TOTAL_CNT END)/7,0)  
							 + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN TOTAL_CNT END)/7,0)  
							 + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN TOTAL_CNT END)/7,0) 
							 + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
												 AND (SELECT (TO_DATE(STDR_YM,'YYYYMM') + INTERVAL '1 MONTH - 1 DAY')::DATE  -  TO_DATE(#{endDate},'YYYYMMDD') FROM TBCOM_STDR) >= 7
												 THEN TOTAL_CNT/7		             
												 ELSE 0 
							 END),0))/4
					    WHEN (SELECT (TO_DATE(STDR_YM,'YYYYMM') + INTERVAL '1 MONTH - 1 DAY')::DATE  -  TO_DATE(#{endDate},'YYYYMMDD') FROM TBCOM_STDR) >= 14 
					    THEN ( COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN TOTAL_CNT END)/7,0)  
							 + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN TOTAL_CNT END)/7,0)  
							 + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN TOTAL_CNT END)/7,0) 
							 + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
												 AND (SELECT (TO_DATE(STDR_YM,'YYYYMM') + INTERVAL '1 MONTH - 1 DAY')::DATE  -  TO_DATE(#{endDate},'YYYYMMDD') FROM TBCOM_STDR) >= 7
												 THEN TOTAL_CNT/7		             
												 ELSE 0 
							 END),0) 
							 + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
												 AND (SELECT (TO_DATE(STDR_YM,'YYYYMM') + INTERVAL '1 MONTH - 1 DAY')::DATE  -  TO_DATE(#{endDate},'YYYYMMDD') FROM TBCOM_STDR) >= 14
												 THEN TOTAL_CNT/7
												 ELSE 0 
							 END),0))/5     
				  END) AS AVG_CNT
			FROM TBADMI_FLOAT_ALL_CNT A
				, TBREGION B    
			WHERE 1=1
			AND A.ADMI_CD = B.ID
			AND (
				A.STDR_DATE BETWEEN TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD')
				OR A.STDR_DATE BETWEEN TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 14,'YYYYMMDD')
			)
			AND TOTAL_CNT > 0	
		  ]]>              
			<!-- ROW COUNT(1) 3이상 일때 -->
		    <if test='admiAround != null and admiAround != ""'>  
				    		 AND ADMI_CD IN (${admiAround})
		    </if>
		    <!-- ROW COUNT(1) 3 미만 일때 -->
			<if test='admiAround == null or admiAround == ""'> 
			AND ADMI_CD IN (SELECT B.ID  
							FROM TBREGION A
								, TBREGION B 
							WHERE A.ID = #{admiCd} 
							AND B.ID LIKE #{ctyCd}||'%'
							AND B.ID != #{admiCd}
							AND B.RGN_CLSS ='H4' 
							ORDER BY ST_DISTANCE(A.SHAPE,B.SHAPE) 
							LIMIT 3
			)
			</if>  
		  <![CDATA[
			GROUP BY B.NM, B.ID
		)T2 
		WHERE 1=1
		AND T1.ID = T2.ID
		ORDER BY RATE_ORDER DESC
  ]]>
  </select>
    
  <!-- 9페이지. 2장 2절 주변지역 경제효과 및 유동인구 변화 - 평상시 대비 이벤트 기간동안 거래금액 변화율이 가장 큰 지역 주제도 -->
  <select id="rpt-new-evntEff-009-002" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
				SELECT T11.NM
				     , T11.ID
				     , T11.RATE  
				  FROM (
						SELECT NM 
						     , ID 
						     , ROUND(TERM) AS SALE_AMT
				             , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13 and ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0)) != 0
				                     THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) )/4) * 100,1)
				                     WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7 and (COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0)) != 0
				                     THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0))/3) * 100,1)
				                     WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14  AND ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) !=0
				                     THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) * 100,1)
				                     ELSE 0 
				                END) AS RATE
						  FROM
						      (
						        SELECT SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END)/7 AS LW5  
						             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END)/7 AS LW4  
						             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END)/7 AS LW3 
		                             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
		                                             AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
		                                        THEN SALE_AMT / 7
		                              ELSE NULL END) AS LW2 
		                            , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
		                                       AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
		                                       THEN SALE_AMT/ 7
		                               ELSE NULL END) AS LW1 
						             , COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  #{startDate} AND #{endDate} THEN SALE_AMT END)/ (TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1),0) AS TERM 
							     	 , B.ID 
								     , B.NM 
								 FROM TBADMI_UPJONG_INFO_D A
								    , TBREGION B 
							        WHERE 1=1
								      AND A.ADMI_CD = B.ID
							          AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') 
							          AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
							          AND ADMI_CD = #{admiCd} 							          
								  AND SALE_AMT > 0
								  AND SALE_CNT > 0
								GROUP BY ID, NM 
						     ) T1
						 WHERE 1=1
				           AND (COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) > 0  
							UNION ALL  
						SELECT NM 
						     , ID 
						     , ROUND(TERM) AS SALE_AMT
				  		     , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13 and ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0)) != 0
				                     THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) )/4) * 100,1)
				                     WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7 and (COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0)) != 0
				                     THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0))/3) * 100,1)
				                     WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14  AND ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) !=0
				                     THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) * 100,1)
				                     ELSE 0 
				                END ) AS RATE  
						  FROM
						      (
						        SELECT SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END)/7 AS LW5  
						             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END)/7 AS LW4  
						             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END)/7 AS LW3 
		                             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
		                                             AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
		                                        THEN SALE_AMT / 7
		                              ELSE NULL END) AS LW2 
		                            , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
		                                       AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
		                                       THEN SALE_AMT/ 7
		                               ELSE NULL END) AS LW1 
						             , COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  #{startDate} AND #{endDate} THEN SALE_AMT END)/ (TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1),0) AS TERM 
							     	 , B.ID 
								     , B.NM 
								 FROM TBADMI_UPJONG_INFO_D A
								    , TBREGION B 
							        WHERE 1=1
								  AND A.ADMI_CD = B.ID
							          AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') 
							          AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
								  AND SALE_AMT > 0
								  AND SALE_CNT > 0								  
	]]>
	<!-- ROW COUNT(1) 3이상 일때 -->
    <if test='admiAround != null and admiAround != ""'>  
	<![CDATA[		       
						  		  AND ADMI_CD IN (${admiAround})
	]]>			 
    </if>
    <!-- ROW COUNT(1) 3 미만 일때 -->
	<if test='admiAround == null or admiAround == ""'> 
						    	  AND ADMI_CD IN (SELECT B.ID  
						    		    		    FROM TBREGION A
						    		    			   , TBREGION B 
						    		    		   WHERE A.ID = #{admiCd} 
						    		    			 AND B.ID like #{ctyCd}||'%'
						    		    			 AND B.ID != #{admiCd}
						    		    			 AND B.RGN_CLSS ='H4' 
						    		    		   ORDER BY ST_Distance(A.SHAPE,B.SHAPE) LIMIT 3)
	</if> 
	<![CDATA[
							    GROUP BY ID, NM
						      ) T2
						  WHERE 1=1
				            AND (COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) > 0 
				          ) T11
  ]]>
  </select>
  
  <!-- 9페이지. 2장 2절 주변지역 경제효과 및 유동인구 변화 - 평상시 대비 이벤트 기간동안 거래금액 변화율이 가장 큰 지역 리스트 3 -->
  <select id="rpt-new-evntEff-009-005" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
	SELECT T1.NM, T1.ID 
		 , ROUND((T1.AVG_AMT - T2.AVG_AMT) / T2.AVG_AMT *100,1) AS RATE
		 , ROUND((T1.AVG_AMT - T2.AVG_AMT) / T2.AVG_AMT *100,1) AS rate_order
		 , ROUND((T1.AVG_AMT - T2.AVG_AMT)) AS AMT
	FROM (
		SELECT B.NM, B.ID
			 , (SUM(SALE_AMT) /  (#{endDate}::date - #{startDate}::date  +1 )) AS AVG_AMT     
		FROM TBADMI_UPJONG_INFO_D A
			, TBREGION B
		WHERE 1=1
		AND A.ADMI_CD = B.ID
		AND A.STDR_DATE >= #{startDate}
		AND A.STDR_DATE <= #{endDate}
		AND SALE_AMT > 0
		AND SALE_CNT > 0  
  ]]>              
	<!-- ROW COUNT(1) 3이상 일때 -->
    <if test='admiAround != null and admiAround != ""'>  
   		AND ADMI_CD IN (${admiAround})
    </if>
    <!-- ROW COUNT(1) 3 미만 일때 -->
	<if test='admiAround == null or admiAround == ""'> 
		AND ADMI_CD IN ( SELECT B.ID  
					 FROM TBREGION A
					 	, TBREGION B 
					 WHERE A.ID = #{admiCd} 
					 AND B.ID like #{ctyCd}||'%'
					 AND B.ID != #{admiCd}
					 AND B.RGN_CLSS ='H4' 
					 ORDER BY ST_Distance(A.SHAPE,B.SHAPE) LIMIT 3
		)
	</if>  
  <![CDATA[
		GROUP BY B.NM, B.ID   
	) T1
	,(
		SELECT B.NM, B.ID      
			, (CASE WHEN (SELECT (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7
				    THEN ( COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END)/7,0)  
					 	 + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END)/7,0)  
						 + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END)/7,0))/3 
				    WHEN (SELECT (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) between  7 and 13 
				    THEN ( COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END)/7,0)  
						 + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END)/7,0)  
						 + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END)/7,0) 
						 + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
											 AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
											 THEN SALE_AMT/7		             
											 ELSE 0 
						 END),0))/4
				    WHEN (SELECT (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14 
				    THEN ( COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END)/7,0)  
						 + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END)/7,0)  
						 + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END)/7,0) 
						 + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
											 AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
											 THEN SALE_AMT/7		             
											 ELSE 0 
						 END),0) 
						 + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
											 AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
											 THEN SALE_AMT/7
											 ELSE 0 
						 END),0))/5     
			  END) as AVG_AMT
		FROM TBADMI_UPJONG_INFO_D A
			, TBREGION B    
		WHERE 1=1
		AND A.ADMI_CD = B.ID
		AND (
			A.STDR_DATE BETWEEN TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD')
			OR A.STDR_DATE BETWEEN TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 14,'YYYYMMDD')
		)
		AND SALE_AMT > 0
		AND SALE_CNT > 0
  ]]>              
	<!-- ROW COUNT(1) 3이상 일때 -->
    <if test='admiAround != null and admiAround != ""'>  
		AND ADMI_CD IN (${admiAround})
    </if>
    <!-- ROW COUNT(1) 3 미만 일때 -->
	<if test='admiAround == null or admiAround == ""'> 
		AND ADMI_CD IN (SELECT B.ID  
						FROM TBREGION A
							, TBREGION B 
						WHERE A.ID = #{admiCd} 
						AND B.ID like #{ctyCd}||'%'
						AND B.ID != #{admiCd}
						AND B.RGN_CLSS ='H4' 
						ORDER BY ST_Distance(A.SHAPE,B.SHAPE) 
						LIMIT 3
		)
	</if>  
  <![CDATA[
		GROUP BY B.NM, B.ID   
	) T2
	WHERE 1=1
	AND T1.ID = T2.ID
	ORDER BY RATE DESC
  ]]>
  </select>
  
  <!-- 9페이지. 2장 2절 주변지역 경제효과 및 유동인구 변화 - 평상시 대비 이벤트 기간동안 거래량 변화율이 가장 큰 지역 주제도  -->
  <select id="rpt-new-evntEff-009-003" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT NM 
		     , ID 
             , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13 and ( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0) + COALESCE(CNT_LW2,0)) != 0
                     THEN ROUND((CNT_TERM - ( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0) + COALESCE(CNT_LW2,0))/4) /(( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0) + COALESCE(CNT_LW2,0) )/4) * 100,1)
                     WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7 and (COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0)) != 0
                     THEN ROUND((CNT_TERM - ( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0) )/3) /(( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0))/3) * 100,1)
                     WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14  AND ( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0) + COALESCE(CNT_LW2,0) + COALESCE(CNT_LW1,0)) !=0
                     THEN ROUND((CNT_TERM - ( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0) + COALESCE(CNT_LW2,0) + COALESCE(CNT_LW1,0))/5) /(( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0) + COALESCE(CNT_LW2,0) + COALESCE(CNT_LW1,0))/5) * 100,1)
                     ELSE 0 
              END) AS CNT_RATE
		  FROM
		      (
		        SELECT SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_CNT END)/7 AS CNT_LW5  
		             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_CNT END)/7 AS CNT_LW4  
		             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_CNT END)/7 AS CNT_LW3 
                     , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
                                AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
                                THEN SALE_CNT / 7
                      			ELSE NULL 
                      	   END) AS CNT_LW2 
                     , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
                                AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
                                THEN SALE_CNT/ 7
                       			ELSE NULL 
                       END) AS CNT_LW1
		             , COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  #{startDate} AND #{endDate} THEN SALE_CNT END)/ (TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1),0) AS CNT_TERM 
				     , B.ID 
				     , B.NM 
				 FROM TBADMI_UPJONG_INFO_D A
				    , TBREGION B 
			        WHERE 1=1
				      AND A.ADMI_CD = B.ID
			          AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') 
			          AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
			          AND ADMI_CD = #{admiCd} 							          
				  AND SALE_AMT > 0
				  AND SALE_CNT > 0
				GROUP BY ID, NM 
		     ) T1
		 WHERE 1=1 
			UNION ALL  
		SELECT NM 
		     , ID  
		     , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13 and ( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0) + COALESCE(CNT_LW2,0)) != 0
	                    THEN ROUND((CNT_TERM - ( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0) + COALESCE(CNT_LW2,0))/4) /(( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0) + COALESCE(CNT_LW2,0) )/4) * 100,1)
	                    WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7 and (COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0)) != 0
	                    THEN ROUND((CNT_TERM - ( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0) )/3) /(( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0))/3) * 100,1)
	                    WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14  AND ( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0) + COALESCE(CNT_LW2,0) + COALESCE(CNT_LW1,0)) !=0
	                    THEN ROUND((CNT_TERM - ( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0) + COALESCE(CNT_LW2,0) + COALESCE(CNT_LW1,0))/5) /(( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0) + COALESCE(CNT_LW2,0) + COALESCE(CNT_LW1,0))/5) * 100,1)
	                    ELSE 0 
	               END ) AS CNT_RATE  
		  FROM
		      (
		        SELECT SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_CNT END)/7 AS CNT_LW5  
		             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_CNT END)/7 AS CNT_LW4  
		             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_CNT END)/7 AS CNT_LW3 
	                          , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
	                                          AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
	                                     THEN SALE_CNT / 7
	                           ELSE NULL END) AS CNT_LW2 
	                         , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
	                                    AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
	                                    THEN SALE_CNT/ 7
	                            ELSE NULL END) AS CNT_LW1 
		             , COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  #{startDate} AND #{endDate} THEN SALE_CNT END)/ (TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1),0) AS CNT_TERM 
				     , B.ID 
				     , B.NM 
				 FROM TBADMI_UPJONG_INFO_D A
				    , TBREGION B 
			        WHERE 1=1
				  AND A.ADMI_CD = B.ID
			          AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') 
			          AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
				  AND SALE_AMT > 0
				  AND SALE_CNT > 0								  
	]]>
	<!-- ROW COUNT(1) 3이상 일때 -->
    <if test='admiAround != null and admiAround != ""'>  
	<![CDATA[		       
				  AND ADMI_CD IN (${admiAround})
	]]>			 
    </if>
    <!-- ROW COUNT(1) 3 미만 일때 -->
	<if test='admiAround == null or admiAround == ""'> 
		    	  AND ADMI_CD IN (SELECT B.ID  
		    		    		    FROM TBREGION A
		    		    			   , TBREGION B 
		    		    		   WHERE A.ID = #{admiCd} 
		    		    			 AND B.ID like #{ctyCd}||'%'
		    		    			 AND B.ID != #{admiCd}
		    		    			 AND B.RGN_CLSS ='H4' 
		    		    		   ORDER BY ST_Distance(A.SHAPE,B.SHAPE) LIMIT 3)
	</if> 
	<![CDATA[
			    GROUP BY ID, NM
		      ) T2
		  WHERE 1=1
  ]]>
  </select>
  
  
  <!-- 9페이지. 2장 2절 주변지역 경제효과 및 유동인구 변화 - 평상시 대비 이벤트 기간동안 거래량 변화율이 가장 큰 지역 리스트 3  -->
  <select id="rpt-new-evntEff-009-006" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT T1.NM, T1.ID 
			 , ROUND((T1.AVG_CNT - T2.AVG_CNT) / T2.AVG_CNT *100,1) AS RATE
			 , ROUND((T1.AVG_CNT - T2.AVG_CNT) / T2.AVG_CNT *100,1) AS RATE_ORDER
			 , ROUND((T1.AVG_CNT - T2.AVG_CNT)) AS CNT
		FROM (
			SELECT B.NM, B.ID
				 , (SUM(SALE_CNT) /  (#{endDate}::date - #{startDate}::date +1)) AS AVG_CNT     
			FROM TBADMI_UPJONG_INFO_D A
				, TBREGION B
			WHERE 1=1
			AND A.ADMI_CD = B.ID
			AND A.STDR_DATE >= #{startDate}
			AND A.STDR_DATE <= #{endDate}
			AND SALE_AMT > 0
			AND SALE_CNT > 0 
  ]]>              
	<!-- ROW COUNT(1) 3이상 일때 -->
    <if test='admiAround != null and admiAround != ""'>  
			AND ADMI_CD IN (${admiAround})
    </if>
    <!-- ROW COUNT(1) 3 미만 일때 -->
	<if test='admiAround == null or admiAround == ""'>
			AND ADMI_CD IN (SELECT B.ID  
						FROM TBREGION A
							, TBREGION B 
						WHERE A.ID = #{admiCd} 
						AND B.ID like #{ctyCd}||'%'
						AND B.ID != #{admiCd}
						AND B.RGN_CLSS ='H4' 
						ORDER BY ST_Distance(A.SHAPE,B.SHAPE) 
						LIMIT 3
			) 
	</if>  
  <![CDATA[   
			GROUP BY B.NM, B.ID   
		) T1
		,(
			SELECT B.NM, B.ID      
				 , ( CASE WHEN (SELECT (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7
						  THEN (  COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_CNT END)/7,0)  
								+ COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_CNT END)/7,0)  
								+ COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_CNT END)/7,0))/3 
						  WHEN (SELECT (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) between  7 and 13 
						  THEN (  COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_CNT END)/7 ,0)  
								+ COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_CNT END)/7,0)  
								+ COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_CNT END)/7,0) 
								+ COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
													AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
													THEN SALE_CNT/7		             
													ELSE 0 
								END),0))/4
						  WHEN (SELECT (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14 
						  THEN (  COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_CNT END)/7 ,0)  
								+ COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_CNT END)/7,0)  
								+ COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_CNT END)/7,0) 
								+ COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
													AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
													THEN SALE_CNT/7		             
													ELSE 0 
								END),0) 
								+ COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
													AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
													THEN SALE_CNT/7
													ELSE 0 
								END),0))/5     
					END) as AVG_CNT
			FROM TBADMI_UPJONG_INFO_D A
				, TBREGION B    
			WHERE 1=1
			AND A.ADMI_CD = B.ID
			AND ( 
				A.STDR_DATE BETWEEN TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD')
				OR A.STDR_DATE BETWEEN TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 14,'YYYYMMDD')
			)
			AND SALE_AMT > 0
			AND SALE_CNT > 0 
  ]]>              
	<!-- ROW COUNT(1) 3이상 일때 -->
    <if test='admiAround != null and admiAround != ""'>  
		    		 AND ADMI_CD IN (${admiAround})
    </if>
    <!-- ROW COUNT(1) 3 미만 일때 -->
	<if test='admiAround == null or admiAround == ""'> 
		AND ADMI_CD IN (SELECT B.ID  
						FROM TBREGION A
							, TBREGION B 
						WHERE A.ID = #{admiCd} 
						AND B.ID like #{ctyCd}||'%'
						AND B.ID != #{admiCd}
						AND B.RGN_CLSS ='H4' 
						ORDER BY ST_Distance(A.SHAPE,B.SHAPE) LIMIT 3)
	</if>  
  <![CDATA[
  		GROUP BY B.NM, B.ID  
	) T2
	WHERE 1=1
	AND T1.ID = T2.ID
	ORDER BY RATE_ORDER DESC
  ]]>
  </select>
  
  <!-- 10페이지. 2장 3절 성/연령대별 대표 유동인구 > 성별 유동인구 비교  -->
  <select id="rpt-new-evntEff-010-001" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		select round(sum(m_20_cnt + m_30_cnt + m_40_cnt + m_50_cnt + m_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_rate
			 , round(sum(f_20_cnt + f_30_cnt + f_40_cnt + f_50_cnt + f_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_rate
			 , round((sum(m_20_cnt + m_30_cnt + m_40_cnt + m_50_cnt + m_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT) - sum(f_20_cnt + f_30_cnt + f_40_cnt + f_50_cnt + f_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT))*100,1) as diff_mf_rate
		 	 , round((sum(f_20_cnt + f_30_cnt + f_40_cnt + f_50_cnt + f_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT) - sum(m_20_cnt + m_30_cnt + m_40_cnt + m_50_cnt + m_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT))*100,1) as diff_fm_rate
		from tbadmi_float_info
		where 1=1
		AND STDR_DATE between #{startDate} AND  #{endDate}
		AND ADMI_CD = #{admiCd}  
  ]]>
  </select>
  
  <!-- 10페이지. 2장 3절 성/연령대별 대표 유동인구 > 연령별 유동인구 비교 -->
  <select id="rpt-new-evntEff-010-002" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		with tmp as (
			select round(sum(m_20_cnt + f_20_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1)  as cnt_20
				 , round(sum(m_30_cnt + f_30_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as cnt_30
				 , round(sum(m_40_cnt + f_40_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as cnt_40
				 , round(sum(m_50_cnt + f_50_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as cnt_50
				 , round(sum(m_60_cnt + f_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as cnt_60
			from tbadmi_float_info
			where 1=1
			AND STDR_DATE between #{startDate} AND  #{endDate}
			AND ADMI_CD = #{admiCd}
		)
		SELECT FLOAT_AGE
			 , RATE
		FROM (
			SELECT '20대' AS FLOAT_AGE
			, CNT_20 AS RATE
			FROM TMP
			UNION ALL 
			SELECT '30대' AS FLOAT_AGE
			, CNT_30 AS RATE
			FROM TMP
			UNION ALL 
			SELECT '40대' AS FLOAT_AGE
			, CNT_40 AS RATE
			FROM TMP
			UNION ALL 
			SELECT '50대' AS FLOAT_AGE
			, CNT_50 AS RATE
			FROM TMP
			UNION ALL 
			SELECT '60대 이상' AS FLOAT_AGE
			, CNT_60 AS RATE
			FROM TMP
		) A
		ORDER BY RATE DESC  
  ]]>
  </select>
  
  <!-- 10페이지. 2장 3절 성/연령대별 대표 유동인구 > 성/연령별 유동인구 비교 -->
  <select id="rpt-new-evntEff-010-003" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		with tmp as (
			select round(sum(m_20_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_20_cnt
				 , round(sum(m_30_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_30_cnt
				 , round(sum(m_40_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_40_cnt
				 , round(sum(m_50_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_50_cnt
				 , round(sum(m_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_60_cnt
				 , round(sum(f_20_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_20_cnt
				 , round(sum(f_30_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_30_cnt
				 , round(sum(f_40_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_40_cnt
				 , round(sum(f_50_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_50_cnt
				 , round(sum(f_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_60_cnt
			from tbadmi_float_info
			where 1=1
			AND STDR_DATE between #{startDate} AND  #{endDate}
			AND ADMI_CD = #{admiCd}
		)
		SELECT FLOAT_TYPE
			 , RATE
		FROM (
			SELECT '20대 남성' AS FLOAT_TYPE
			, m_20_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '30대 남성' AS FLOAT_TYPE
			, m_30_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '40대 남성' AS FLOAT_TYPE
			, m_40_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '50대 남성' AS FLOAT_TYPE
			, m_50_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '60대 이상 남성' AS FLOAT_TYPE
			, m_60_cnt AS RATE
			FROM TMP
			union all
			SELECT '20대 여성' AS FLOAT_TYPE
			, f_20_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '30대 여성' AS FLOAT_TYPE
			, f_30_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '40대 여성' AS FLOAT_TYPE
			, f_40_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '50대 여성' AS FLOAT_TYPE
			, f_50_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '60대 이상 여성' AS FLOAT_TYPE
			, f_60_cnt AS RATE
			FROM TMP
		) A
		order by rate desc
		limit 3  
  ]]>
  </select>
  
  <!-- 10페이지. 2장 3절 성/연령대별 대표 유동인구 > 성/연령별 유동인구 비교 - 그래프 -->
  <select id="rpt-new-evntEff-010-004" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		with tmp as (
			select round(sum(m_20_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_20_cnt
				 , round(sum(m_30_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_30_cnt
				 , round(sum(m_40_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_40_cnt
				 , round(sum(m_50_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_50_cnt
				 , round(sum(m_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_60_cnt
				 , round(sum(f_20_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_20_cnt
				 , round(sum(f_30_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_30_cnt
				 , round(sum(f_40_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_40_cnt
				 , round(sum(f_50_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_50_cnt
				 , round(sum(f_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_60_cnt
			from tbadmi_float_info
			where 1=1
			AND STDR_DATE between #{startDate} AND  #{endDate}
			AND ADMI_CD = #{admiCd}
		)
		SELECT name
			 , groupname 
			 , groupname_order
			 , color
			 , value
		FROM (
			SELECT '20대' AS name
				 , '남성' as  groupname
				 , '1' as groupname_order
				 , '#54A7E8' as color
				 , m_20_cnt AS value
			FROM TMP
			UNION ALL 
			SELECT '30대' AS name
				 , '남성' as  groupname
				 , '1' as groupname_order
				 , '#54A7E8' as color
				 , m_30_cnt AS value
			FROM TMP
			UNION ALL 
			SELECT '40대' AS name
				 , '남성' as  groupname
				 , '1' as groupname_order
				 , '#54A7E8' as color
				 , m_40_cnt AS value
			FROM TMP
			UNION ALL 
			SELECT '50대' AS name
				 , '남성' as  groupname
				 , '1' as groupname_order
				 , '#54A7E8' as color
				 , m_50_cnt AS value
			FROM TMP
			UNION ALL 
			SELECT '60대 이상' AS name
				 , '남성' as  groupname
				 , '1' as groupname_order
				 , '#54A7E8' as color
				 , m_60_cnt AS value
			FROM TMP
			union all
			SELECT '20대' AS name
				 , '여성' as  groupname
				 , '0' as groupname_order
				 , '#E47677' as color
				 , f_20_cnt AS value
			FROM TMP
			UNION ALL 
			SELECT '30대' AS name
				 , '여성' as  groupname
				 , '0' as groupname_order
				 , '#E47677' as color
				 , f_30_cnt AS value
			FROM TMP
			UNION ALL 
			SELECT '40대' AS name
				 , '여성' as  groupname
				 , '0' as groupname_order
				 , '#E47677' as color
				 , f_40_cnt AS value
			FROM TMP
			UNION ALL 
			SELECT '50대' AS name
				 , '여성' as  groupname
				 , '0' as groupname_order
				 , '#E47677' as color
				 , f_50_cnt AS value
			FROM TMP
			UNION ALL 
			SELECT '60대 이상' AS name
				 , '여성' as  groupname
				 , '0' as groupname_order
				 , '#E47677' as color
				 , f_60_cnt AS value
			FROM TMP
		) A  
  ]]>
  </select>
  
  <!-- 10페이지. 2장 3절 성/연령대별 대표 소비인구 > 성별 소비인구 비교 -->
  <select id="rpt-new-evntEff-010-005" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT ROUND(SUM(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT)/SUM(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) AS M_RATE
			 , ROUND(SUM(F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)/SUM(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) AS F_RATE
			 , ROUND((SUM(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT)/SUM(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT) - SUM(F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)/SUM(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT))*100,1) AS DIFF_MF_RATE
		 	 , ROUND((SUM(F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)/SUM(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT) - SUM(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT)/SUM(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT))*100,1) AS DIFF_FM_RATE
		FROM TBADMI_VISIT_INFO_D_NEW 
		WHERE 1=1
		AND STDR_DATE BETWEEN #{startDate} AND  #{endDate}
		AND ADMI_CD = #{admiCd}  
  ]]>
  </select>
  
  <!-- 10페이지. 2장 3절 성/연령대별 대표 소비인구 > 연령별 소비인구 비교  -->
  <select id="rpt-new-evntEff-010-006" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		with tmp as (
			select round(sum(m_20_cnt + f_20_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1)  as cnt_20
				 , round(sum(m_30_cnt + f_30_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as cnt_30
				 , round(sum(m_40_cnt + f_40_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as cnt_40
				 , round(sum(m_50_cnt + f_50_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as cnt_50
				 , round(sum(m_60_cnt + f_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as cnt_60
			from TBADMI_VISIT_INFO_D_NEW
			where 1=1
			AND STDR_DATE between #{startDate} AND  #{endDate}
			AND ADMI_CD = #{admiCd}
		)
		SELECT AMT_AGE
			 , RATE
		FROM (
			SELECT '20대' AS AMT_AGE
			, CNT_20 AS RATE
			FROM TMP
			UNION ALL 
			SELECT '30대' AS AMT_AGE
			, CNT_30 AS RATE
			FROM TMP
			UNION ALL 
			SELECT '40대' AS AMT_AGE
			, CNT_40 AS RATE
			FROM TMP
			UNION ALL 
			SELECT '50대' AS AMT_AGE
			, CNT_50 AS RATE
			FROM TMP
			UNION ALL 
			SELECT '60대 이상' AS AMT_AGE
			, CNT_60 AS RATE
			FROM TMP
		) A
		ORDER BY RATE DESC  
  ]]>
  </select>
  
  <!-- 10페이지. 2장 3절 성/연령대별 대표 소비인구 > 성/연령별 소비인구 비교 -->
  <select id="rpt-new-evntEff-010-007" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		with tmp as (
			select round(sum(m_20_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_20_cnt
				 , round(sum(m_30_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_30_cnt
				 , round(sum(m_40_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_40_cnt
				 , round(sum(m_50_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_50_cnt
				 , round(sum(m_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_60_cnt
				 , round(sum(f_20_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_20_cnt
				 , round(sum(f_30_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_30_cnt
				 , round(sum(f_40_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_40_cnt
				 , round(sum(f_50_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_50_cnt
				 , round(sum(f_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_60_cnt
			from TBADMI_VISIT_INFO_D_NEW
			where 1=1
			AND STDR_DATE between #{startDate} AND  #{endDate}
			AND ADMI_CD LIKE #{admiCd}
		)
		SELECT AMT_TYPE
			 , RATE
		FROM (
			SELECT '20대 남성' AS AMT_TYPE
			, m_20_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '30대 남성' AS AMT_TYPE
			, m_30_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '40대 남성' AS AMT_TYPE
			, m_40_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '50대 남성' AS AMT_TYPE
			, m_50_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '60대 이상 남성' AS AMT_TYPE
			, m_60_cnt AS RATE
			FROM TMP
			union all
			SELECT '20대 여성' AS AMT_TYPE
			, f_20_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '30대 여성' AS AMT_TYPE
			, f_30_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '40대 여성' AS AMT_TYPE
			, f_40_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '50대 여성' AS AMT_TYPE
			, f_50_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '60대 이상 여성' AS AMT_TYPE
			, f_60_cnt AS RATE
			FROM TMP
		) A
		order by rate desc
		limit 3  
  ]]>
  </select>
  
  <!-- 10페이지. 2장 3절 성/연령대별 대표 소비인구 > 성/연령별 소비인구 비교 - 그래프  -->
  <select id="rpt-new-evntEff-010-008" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		with tmp as (
			select round(sum(m_20_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_20_cnt
				 , round(sum(m_30_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_30_cnt
				 , round(sum(m_40_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_40_cnt
				 , round(sum(m_50_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_50_cnt
				 , round(sum(m_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_60_cnt
				 , round(sum(f_20_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_20_cnt
				 , round(sum(f_30_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_30_cnt
				 , round(sum(f_40_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_40_cnt
				 , round(sum(f_50_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_50_cnt
				 , round(sum(f_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_60_cnt
			from TBADMI_VISIT_INFO_D_NEW
			where 1=1
			AND STDR_DATE between #{startDate} AND  #{endDate}
			AND ADMI_CD LIKE #{admiCd}
		)
		SELECT name
			 , groupname 
			 , groupname_order
			 , color
			 , value
		FROM (
			SELECT '20대' AS name
				 , '남성' as  groupname
				 , '1' as groupname_order
				 , '#54A7E8' as color
				 , m_20_cnt AS value
			FROM TMP
			UNION ALL 
			SELECT '30대' AS name
				 , '남성' as  groupname
				 , '1' as groupname_order
				 , '#54A7E8' as color
				 , m_30_cnt AS value
			FROM TMP
			UNION ALL 
			SELECT '40대' AS name
				 , '남성' as  groupname
				 , '1' as groupname_order
				 , '#54A7E8' as color
				 , m_40_cnt AS value
			FROM TMP
			UNION ALL 
			SELECT '50대' AS name
				 , '남성' as  groupname
				 , '1' as groupname_order
				 , '#54A7E8' as color
				 , m_50_cnt AS value
			FROM TMP
			UNION ALL 
			SELECT '60대 이상' AS name
				 , '남성' as  groupname
				 , '1' as groupname_order
				 , '#54A7E8' as color
				 , m_60_cnt AS value
			FROM TMP
			union all
			SELECT '20대' AS name
				 , '여성' as  groupname
				 , '0' as groupname_order
				 , '#E47677' as color
				 , f_20_cnt AS value
			FROM TMP
			UNION ALL 
			SELECT '30대' AS name
				 , '여성' as  groupname
				 , '0' as groupname_order
				 , '#E47677' as color
				 , f_30_cnt AS value
			FROM TMP
			UNION ALL 
			SELECT '40대' AS name
				 , '여성' as  groupname
				 , '0' as groupname_order
				 , '#E47677' as color
				 , f_40_cnt AS value
			FROM TMP
			UNION ALL 
			SELECT '50대' AS name
				 , '여성' as  groupname
				 , '0' as groupname_order
				 , '#E47677' as color
				 , f_50_cnt AS value
			FROM TMP
			UNION ALL 
			SELECT '60대 이상' AS name
				 , '여성' as  groupname
				 , '0' as groupname_order
				 , '#E47677' as color
				 , f_60_cnt AS value
			FROM TMP
		) A  
  ]]>
  </select>
  
  <!-- 11페이지. 2장 4절 업종별 비교 > 이벤트기간동안 일평균 거래금액 변화율 리스트  텍스트 & 그래프 -->
  <select id="rpt-new-evntEff-011-001" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT T.CODE
			 , T.CD_NM    
			 , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13
						  THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0)),1)
						  WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7
						  THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) ),1)     
						  WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
						  THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0) ),1)        
						  ELSE 0 
			END ) AS AVG_AMT
			, (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13 and ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0)) != 0
					THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) )/4) * 100,1)
					WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7 and (COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0)) != 0
					THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0))/3) * 100,1)
					WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14  AND ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) !=0
					THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) * 100,1)
					ELSE 0 
			END ) AS RATE  
			, ROUND(TERM) AS AMT    
		FROM (
			SELECT B.CD_NM
				 , B.CODE  
				 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END)/7 AS LW5  
				 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END)/7 AS LW4  
				 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END)/7 AS LW3 
				 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
							AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
							THEN SALE_AMT / 7		              
							ELSE NULL 
				   END) AS LW2 
				 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
							AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
							THEN SALE_AMT/ 7		                        
							ELSE NULL 
				   END) AS LW1  
				 , COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  #{startDate} AND #{endDate} THEN SALE_AMT END)/ (TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1),0) AS TERM  
			FROM TBADMI_UPJONG_INFO_D A
				, TBCOMM_CODE B
			WHERE 1=1
			AND A.UPJONG2_CD = B.CODE
			AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') 
			AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
			AND ADMI_CD = #{admiCd}
			AND SALE_AMT > 0
			AND SALE_CNT > 0
			AND UPJONG2_CD NOT IN ( SELECT DISTINCT UPJONG2_CD
									FROM TBADMI_UPJONG_INFO_D a
									WHERE 1=1
									AND ADMI_CD = #{admiCd}
									AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') 
									AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
									AND STORE_CNT_FLG = 'N'
								  )  
			GROUP BY B.CODE,B.CD_NM			        
		) T
		WHERE 1=1
		AND (COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) > 0 
		ORDER BY 4 DESC
		LIMIT 10  
  ]]>
  </select>
  
  <!-- 11페이지. 2장 4절 업종별 비교 > 평상시기간과 비교 일평균 거래량 변화율 리스트 텍스트 & 그래프  -->
  <select id="rpt-new-evntEff-011-002" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT T.CODE
			 , T.CD_NM    
			 , ROUND(CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13
						  THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0)),1)
						  WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7
						  THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) ),1)     
						  WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
						  THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0) ),1)        
						  ELSE 0 
			 END ) AS AVG_CNT
			 , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13 and ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0)) != 0
					 THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) )/4) * 100,1)
					 WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7 and (COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0)) != 0
					 THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0))/3) * 100,1)
					 WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14  AND ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) !=0
					 THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) * 100,1)
					 ELSE 0 
			 END ) AS RATE  
			 , ROUND(TERM) AS CNT    
		FROM (
				SELECT B.CD_NM
					 , B.CODE  
					 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_CNT END)/7 AS LW5  
					 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_CNT END)/7 AS LW4  
					 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_CNT END)/7 AS LW3 
					 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
								AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
								THEN SALE_CNT / 7		              
								ELSE NULL 
					   END) AS LW2 
					 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
								AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
								THEN SALE_CNT/ 7		                        
								ELSE NULL 
					  END) AS LW1  
					, COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  #{startDate} AND #{endDate} THEN SALE_CNT END)/ (TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1),0) AS TERM  
				FROM TBADMI_UPJONG_INFO_D A
					, TBCOMM_CODE B
				WHERE 1=1
				AND A.UPJONG2_CD = B.CODE
				AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') 
				AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
				AND ADMI_CD = #{admiCd}
				AND SALE_AMT > 0
				AND SALE_CNT > 0
				AND UPJONG2_CD NOT IN ( SELECT DISTINCT UPJONG2_CD
										FROM TBADMI_UPJONG_INFO_D a
										WHERE 1=1
										AND ADMI_CD = #{admiCd}
										AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') 
										AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
										AND STORE_CNT_FLG = 'N'
				)  
				GROUP BY B.CODE,B.CD_NM			        
		) T
		WHERE 1=1
		AND (COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) > 0 
		ORDER BY 4 DESC
		LIMIT 10  
  ]]>
  </select>
  
  <!-- 12페이지. 3장 1절 유입 유동인구 규모 > 총 유동인구 합, 상주인구 수 , 상주인구 비율, 유입인구 수, 유입인구 비율 - 텍스트   -->
  <select id="rpt-new-evntEff-012-001" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		select (r_cnt + e_cnt) as total_cnt
			 , r_cnt, e_cnt
			 , round(r_cnt/(r_cnt+e_cnt)*100,1) as r_rate
			 , round(e_cnt/(r_cnt+e_cnt)*100,1) as e_rate
		from (
			select sum(total_cnt) as r_cnt
			from tbadmi_float_all_cnt 
			where 1=1
			AND STDR_DATE between #{startDate} AND  #{endDate}
			AND ADMI_CD = #{admiCd}
			and loc_clss_cd  = 'R'
		) A 
		, (
			select sum(total_cnt) as e_cnt 
			from tbadmi_float_all_cnt 
			where 1=1
			AND STDR_DATE between #{startDate} AND  #{endDate}
			AND ADMI_CD = #{admiCd}
			and loc_clss_cd  = 'E'
		) B 
  ]]>
  </select>
  
  <!-- 12페이지. 3장 1절 유입소비인구 규모 > 상주/유입 소비인구의 거래금액 - 텍스트 -->
  <select id="rpt-new-evntEff-012-002" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT A.SALE_AMT AS R_SALE_AMT  
			 , A.SALE_CNT AS R_SALE_CNT  
			 , B.SALE_AMT AS E_SALE_AMT 
			 , B.SALE_CNT AS E_SALE_CNT
			 , ROUND(B.SALE_AMT/(A.sale_amt + B.SALE_AMT)*100,1) AS RATE_AMT
			 , ROUND(B.SALE_CNT/(A.sale_cnt + B.SALE_CNT)*100,1) AS RATE_CNT
		FROM ( 
			SELECT SUM(A.SALE_AMT) AS SALE_AMT  
				 , SUM(A.SALE_CNT) AS SALE_CNT
			FROM TBADMI_INFO_D4 A
			WHERE 1=1
			AND A.STDR_DATE between #{startDate} AND  #{endDate}
			AND A.ADMI_CD = #{admiCd}           
			and A.loc_clss_cd ='R'
		) A
		, ( 
			SELECT SUM(A.SALE_AMT) AS SALE_AMT  
				 , SUM(A.SALE_CNT) AS SALE_CNT
			FROM TBADMI_INFO_D4 A
			WHERE 1=1
			AND A.STDR_DATE between #{startDate} AND  #{endDate}
			AND A.ADMI_CD = #{admiCd}
			and A.loc_clss_cd ='E'
		)B
  ]]>
  </select>
  
  <!-- 12페이지. 3장 1절 유입소비인구 규모 > 전체/유입 소비금액, 전체/유입 거래량 -->
  <select id="rpt-new-evntEff-012-003" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT A.SALE_AMT AS E_SALE_AMT  
			 , A.SALE_CNT AS E_SALE_CNT  
			 , B.SALE_AMT AS All_SALE_AMT 
			 , B.SALE_CNT AS All_SALE_CNT
		FROM ( 
			SELECT SUM(A.SALE_AMT) AS SALE_AMT  
				 , SUM(A.SALE_CNT) AS SALE_CNT
			FROM TBADMI_INFO_D4 A
			WHERE 1=1
			AND A.STDR_DATE between #{startDate} AND  #{endDate}
			AND A.ADMI_CD = #{admiCd}           
			and A.loc_clss_cd ='E'
		) A
		, ( 
			SELECT SUM(A.SALE_AMT) AS SALE_AMT  
				 , SUM(A.SALE_CNT) AS SALE_CNT
			FROM TBADMI_INFO_D4 A
			WHERE 1=1
			AND A.STDR_DATE between #{startDate} AND  #{endDate}
			AND A.ADMI_CD = #{admiCd}
		)B  
  ]]>
  </select>
    
  <!-- 12페이지. 3장 1절 유입소비인구 규모 > 유입/상주 거래량, 거래비중, 소비단가 비교 - 표5 -->
  <select id="rpt-new-evntEff-012-004" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
	SELECT A.SALE_CNT                                                   AS E_SALE_CNT       --유입인구 거래량
		 , A.SALE_AMT_CNT                                               AS E_SALE_AMT_CNT   --유입인구 소비단가
		 , B.SALE_CNT                                                   AS R_SALE_CNT     	 --상주인구 거래량
		 , B.SALE_AMT_CNT                                               AS R_SALE_AMT_CNT 	 --상주인구 소비단가
		 , ROUND(B.SALE_CNT / (B.SALE_CNT+A.SALE_CNT) * 100, 1) 		AS R_RATE			 --상주인구 거래비중
		 , ROUND(A.SALE_CNT / (B.SALE_CNT+A.SALE_CNT) * 100, 1) 		AS E_RATE			 --유입인구 거래비중
	FROM (
			SELECT SUM(A.SALE_CNT) AS SALE_CNT
				 , ROUND(SUM(A.SALE_AMT)/SUM(A.SALE_CNT)) AS SALE_AMT_CNT
			FROM TBADMI_INFO_D4 A
			WHERE 1=1
			AND A.STDR_DATE between  #{startDate} AND  #{endDate}
			AND A.ADMI_CD = #{admiCd} 
			AND A.LOC_CLSS_CD ='E'
		) A
		, ( 
			SELECT SUM(A.SALE_CNT) AS SALE_CNT
				 , ROUND(SUM(A.SALE_AMT)/SUM(A.SALE_CNT)) AS SALE_AMT_CNT
			FROM TBADMI_INFO_D4 A
			WHERE 1=1
			AND A.STDR_DATE between  #{startDate} AND  #{endDate}
			AND A.ADMI_CD = #{admiCd}
			AND A.LOC_CLSS_CD ='R'
		)B    
  ]]>
  </select>
  
    <!-- 12페이지. 3장 1절 유입 유동인구 규모 >  상주인구 비율, 유입인구 비율 -  그래프 -->
  <select id="rpt-new-evntEff-012-005" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
	   SELECT LOC_CLSS_CD AS CODE
			, SUM(TOTAL_CNT) AS TOTAL_CNT
			, ROUND( SUM(TOTAL_CNT) /SUM(SUM(TOTAL_CNT))OVER() * 100,1) AS RATE
			, CASE 
				WHEN LOC_CLSS_CD ='R' THEN '#C9C9C9'
				WHEN LOC_CLSS_CD ='E' THEN '#31ACAB'
			  END AS COLOR
		FROM TBADMI_FLOAT_ALL_CNT 
		WHERE 1=1
		AND STDR_DATE BETWEEN #{startDate} AND  #{endDate}
		AND ADMI_CD = #{admiCd}
		GROUP BY LOC_CLSS_CD
  ]]>
  </select>
  
  <!-- 12페이지. 3장 1절 유입소비인구 규모 > 전체/유입 소비금액  -->
  <select id="rpt-new-evntEff-012-006" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT SUM(A.SALE_AMT) AS SALE_AMT 
			 , '#d3d3d3' as color
			 , '전체<br/>소비금액' as cd_nm
		FROM TBADMI_INFO_D4 A
		WHERE 1=1
		AND A.STDR_DATE between #{startDate} AND  #{endDate}
		AND A.ADMI_CD = #{admiCd}
		union all
		SELECT SUM(A.SALE_AMT) AS SALE_AMT  
			 , '#fe8d75' as color
			 , '유입인구<br/>소비금액' as cd_nm
		FROM TBADMI_INFO_D4 A
		WHERE 1=1
		AND A.STDR_DATE between #{startDate} AND  #{endDate}
		AND A.ADMI_CD = #{admiCd}           
		and A.loc_clss_cd ='E'
  ]]>
  </select>
    
  <!-- 12페이지. 3장 1절 유입소비인구 규모 >  전체/유입 거래량 -->
  <select id="rpt-new-evntEff-012-007" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT SUM(A.SALE_CNT) AS SALE_CNT
			 , '#d3d3d3' as color
			 , '전체<br/>거래량' as cd_nm
		FROM TBADMI_INFO_D4 A
		WHERE 1=1
		AND A.STDR_DATE between #{startDate} AND  #{endDate}
		AND A.ADMI_CD = #{admiCd}
		union all
		SELECT SUM(A.SALE_CNT) AS SALE_CNT
			 , '#fe8d75' as color
			 , '유입인구<br/>거래량' as cd_nm
		FROM TBADMI_INFO_D4 A
		WHERE 1=1
		AND A.STDR_DATE between #{startDate} AND  #{endDate}
		AND A.ADMI_CD = #{admiCd}           
		and A.loc_clss_cd ='E'
  ]]>
  </select>
    
  <!-- 13페이지. 3장 2절 유입 유동인구 > 일평균 유입 유동인구 수 평상시 대비 일평균 유동인구 변화율 - 텍스트  -->
  <select id="rpt-new-evntEff-013-001" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT NM, DAY_AVG, EVENT_AVG, EVENT_TOT
			 , ROUND((EVENT_AVG - DAY_AVG)/(DAY_AVG) * 100, 1) AS RATE
		FROM (
			SELECT B.NM
				 , ROUND((CASE
							WHEN (SELECT (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7
							THEN ( COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN total_cnt END)/7 ,0)  
								 + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN total_cnt END)/7,0)  
								 + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN total_cnt END)/7,0))/3 
							WHEN (SELECT (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) between  7 and 13 
							THEN ( COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN total_cnt END)/7 ,0)  
								 + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN total_cnt END)/7,0)  
								 + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN total_cnt END)/7,0) 
								 + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
							   						 AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
													 THEN total_cnt/7		             
													 ELSE 0 
												END)))/4
							WHEN (SELECT (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14 
							THEN ( COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN total_cnt END)/7 ,0)  
								 + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN total_cnt END)/7,0)  
								 + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN total_cnt END)/7,0) 
								 + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
													 AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
													 THEN total_cnt/7		             
													 ELSE 0 
												END),0) 
								 + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
													 AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
													 THEN total_cnt/7
													 ELSE 0 
												END),0))/5     
				  END),1) as DAY_AVG
				, ROUND(SUM(total_cnt) /  (#{endDate}::date - #{startDate}::date + 1),1) AS EVENT_AVG   
				, SUM(total_cnt) AS EVENT_TOT 
			FROM tbadmi_float_all_cnt A
				, TBREGION B    
			WHERE 1=1
			AND A.ADMI_CD = B.ID
			AND ( A.STDR_DATE BETWEEN TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD')
			  	OR A.STDR_DATE BETWEEN TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 14,'YYYYMMDD'))
			AND ADMI_CD = #{admiCd}  
			and LOC_CLSS_CD = 'E'
			GROUP BY B.NM
		) A  
  ]]>
  </select>
    
  <!-- 13페이지. 3장 2절 유입 유동인구 > 인접 행정동의 일평균 유동인구 변화량 순위 3 - 텍스트 -->
  <select id="rpt-new-evntEff-013-002" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT NM 
			 , ID 
			 , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13
					 THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) )/4) * 100,1)
					 WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7
					 THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0))/3) * 100,1)
					 WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
					 THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) * 100,1)
					 ELSE 0 
				END ) AS RATE  
		FROM (
			SELECT SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN total_cnt END)/7 AS LW5  
				 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN total_cnt END)/7 AS LW4  
				 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN total_cnt END)/7 AS LW3 
				 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +7,'YYYYMMDD')
							AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr)  >= 7
							THEN total_cnt/7
							ELSE NULL 
				   END) AS LW2 
				 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
							AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr)  >= 14
							THEN total_cnt/7		                   
							ELSE NULL 
				   END) AS LW1 
				 , SUM(CASE WHEN STDR_DATE BETWEEN  #{startDate} AND #{endDate} THEN total_cnt END)/ (TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1) AS TERM 
				 , B.ID 
				 , B.NM 
			FROM tbadmi_float_all_cnt A
				, TBREGION B 
			WHERE 1=1
			AND A.ADMI_CD = B.ID
			AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') 
			AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')		
			AND A.LOC_CLSS_CD = 'E' 
  ]]>              
	<!-- ROW COUNT(1) 3이상 일때 -->
    <if test='admiAround != null and admiAround != ""'>  
		    AND ADMI_CD IN (${admiAround})
    </if>
    <!-- ROW COUNT(1) 3 미만 일때 -->
	<if test='admiAround == null or admiAround == ""'>
			AND ADMI_CD IN (SELECT B.ID  
							FROM TBREGION A	
								, TBREGION B 
							WHERE A.ID = #{admiCd} 
							AND B.ID like #{ctyCd}||'%'
							AND B.ID != #{admiCd}
							AND B.RGN_CLSS ='H4' 
							ORDER BY ST_Distance(A.SHAPE,B.SHAPE) LIMIT 3)  
	</if>  
  <![CDATA[
			GROUP BY ID, NM								
		) T2
		order by rate desc
  ]]>
  </select>
    
  <!-- 13페이지. 3장 2절 유입 유동인구 > 인접 행정동의 일평균 유동인구 변화량 순위 - 주제도 -->
  <select id="rpt-new-evntEff-013-003" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT NM 
			 , ID 
			 , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13
					 THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) )/4) * 100,1)
					 WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7
					 THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0))/3) * 100,1)
					 WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
					 THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) * 100,1)
					 ELSE 0 
				END ) AS RATE  
		FROM (
			SELECT SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN total_cnt END)/7 AS LW5  
				 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN total_cnt END)/7 AS LW4  
				 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN total_cnt END)/7 AS LW3 
				 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +7,'YYYYMMDD')
							AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr)  >= 7
							THEN total_cnt/7
							ELSE NULL 
				   END) AS LW2 
				 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
							AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr)  >= 14
							THEN total_cnt/7		                   
							ELSE NULL 
				   END) AS LW1 
				 , SUM(CASE WHEN STDR_DATE BETWEEN  #{startDate} AND #{endDate} THEN total_cnt END)/ (TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1) AS TERM 
				 , B.ID 
				 , B.NM 
			FROM tbadmi_float_all_cnt A
				, TBREGION B 
			WHERE 1=1
			AND A.ADMI_CD = B.ID
			AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') 
			AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')		
			AND A.LOC_CLSS_CD = 'E'   
  ]]>              
	<!-- ROW COUNT(1) 3이상 일때 -->
    <if test='admiAround != null and admiAround != ""'>  
		    AND ADMI_CD IN (${admiAround})
    </if>
    <!-- ROW COUNT(1) 3 미만 일때 -->
	<if test='admiAround == null or admiAround == ""'> 
			AND ADMI_CD IN (SELECT B.ID  
							FROM TBREGION A	
								, TBREGION B 
							WHERE A.ID = #{admiCd} 
							AND B.ID like #{ctyCd}||'%'
							AND B.ID != #{admiCd}
							AND B.RGN_CLSS ='H4' 
							ORDER BY ST_Distance(A.SHAPE,B.SHAPE) LIMIT 3)
	</if>  
  <![CDATA[
			GROUP BY ID, NM								
		) T2
		UNION ALL
				SELECT NM 
			 , ID 
			 , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13
					 THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) )/4) * 100,1)
					 WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7
					 THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0))/3) * 100,1)
					 WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
					 THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) * 100,1)
					 ELSE 0 
				END ) AS RATE  
		FROM (
			SELECT SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN total_cnt END)/7 AS LW5  
				 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN total_cnt END)/7 AS LW4  
				 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN total_cnt END)/7 AS LW3 
				 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +7,'YYYYMMDD')
							AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr)  >= 7
							THEN total_cnt/7
							ELSE NULL 
				   END) AS LW2 
				 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
							AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr)  >= 14
							THEN total_cnt/7		                   
							ELSE NULL 
				   END) AS LW1 
				 , SUM(CASE WHEN STDR_DATE BETWEEN  #{startDate} AND #{endDate} THEN total_cnt END)/ (TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1) AS TERM 
				 , B.ID 
				 , B.NM 
			FROM tbadmi_float_all_cnt A
				, TBREGION B 
			WHERE 1=1
			AND A.ADMI_CD = B.ID
			AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') 
			AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')		
			AND A.LOC_CLSS_CD = 'E'
		    AND ADMI_CD = #{admiCd}
			GROUP BY ID, NM								
		) T1	
  ]]>
  </select>
    
  <!-- 13페이지. 3장 2절 유입 소비인구 거래량 > 이벤트 기간동안 일평균 거래량, 평상시대비 일평균 거래량 비율 - 텍스트 -->
  <select id="rpt-new-evntEff-013-004" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT T1.NM
			 , ROUND(T1.AVG_CNT,1) AS AVG_CNT
			 , ROUND((T1.AVG_CNT - T2.AVG_CNT) / T2.AVG_CNT *100,1) AS RATE
		FROM (
			SELECT B.NM
				 , (SUM(SALE_CNT) /  (#{endDate}::date - #{startDate}::date + 1)) AS AVG_CNT     
			FROM TBADMI_VISIT_UPJONG_INFO_D A
				, TBREGION B
			WHERE 1=1
			AND A.ADMI_CD = B.ID
			AND A.STDR_DATE >= #{startDate}
			AND A.STDR_DATE <= #{endDate}
			AND SALE_AMT > 0
			AND SALE_CNT > 0
			AND ADMI_CD    =#{admiCd}           
			GROUP BY B.NM                 
		) T1
		,(
			SELECT B.NM
				 , (case when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7
						 THEN ( COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_CNT END)/7 ,0)  
							  + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_CNT END)/7,0)  
							  + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_CNT END)/7,0))/3 
						 when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) between  7 and 13 
						 then ( COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_CNT END)/7 ,0)  
							  + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_CNT END)/7,0)  
							  + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_CNT END)/7,0) 
							  + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
												  AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
												  THEN SALE_CNT/7		             
												  ELSE 0 
											 END)))/4
						 when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14 
						 then ( COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_CNT END)/7 ,0)  
							  + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_CNT END)/7,0)  
							  + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_CNT END)/7,0) 
							  + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
												  AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
												  THEN SALE_CNT/7		             
												  ELSE 0 
											 END),0) 
							  + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
												  AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
												  THEN SALE_CNT/7
												  ELSE 0 
											 END),0))/5     
				   END) as AVG_CNT
			FROM TBADMI_VISIT_UPJONG_INFO_D A
				, TBREGION B    
			WHERE 1=1
			AND A.ADMI_CD = B.ID
			AND ( A.STDR_DATE BETWEEN TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD')
				OR A.STDR_DATE BETWEEN TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 14,'YYYYMMDD'))
			AND SALE_AMT > 0
			AND SALE_CNT > 0
			AND ADMI_CD = #{admiCd}            
			GROUP BY B.NM    
		) T2
		WHERE 1=1  
  ]]>
  </select>
    
  <!-- 13페이지. 3장 2절 유입 소비인구 거래량 > 주변지역의 일평균 거래량 변화율 순위 3 -텍스트 -->
  <select id="rpt-new-evntEff-013-005" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT NM 
		     , ID 
			 , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13 AND ( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0) + COALESCE(CNT_LW2,0) ) !=0
					 THEN ROUND((CNT_TERM - ( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0) + COALESCE(CNT_LW2,0))/4) /(( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0) + COALESCE(CNT_LW2,0) )/4) * 100,1)
					 WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7 AND ( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0)) !=0
					 THEN ROUND((CNT_TERM - ( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0) )/3) /(( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0))/3) * 100,1)
					 WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14 AND ( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0) + COALESCE(CNT_LW2,0) + COALESCE(CNT_LW1,0)) !=0
					 THEN ROUND((CNT_TERM - ( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0) + COALESCE(CNT_LW2,0) + COALESCE(CNT_LW1,0))/5) /(( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0) + COALESCE(CNT_LW2,0) + COALESCE(CNT_LW1,0))/5) * 100,1)
					 ELSE 0 
				END ) AS CNT_RATE  	                  
		FROM (
			SELECT SUM(CASE WHEN STDR_DATE BETWEEN  #{startDate} AND #{endDate} THEN SALE_AMT END)/ (TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1) AS TERM 
				 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_CNT END)/7 AS CNT_LW5  
				 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_CNT END)/7 AS CNT_LW4  
				 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_CNT END)/7 AS CNT_LW3 
				 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +7,'YYYYMMDD')
							AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr)  >= 7
							THEN SALE_CNT/7
							ELSE NULL 
				   END) AS CNT_LW2 
				 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
							AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr)  >= 14
							THEN SALE_CNT/7
							ELSE NULL 
				   END) AS CNT_LW1  
				 , SUM(CASE WHEN STDR_DATE BETWEEN  #{startDate} AND #{endDate} THEN SALE_CNT END)/ (TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1) AS CNT_TERM  
				 , B.ID 
				 , B.NM 
			FROM TBADMI_VISIT_UPJONG_INFO_D A
				, TBREGION B 
			WHERE 1=1
			AND A.ADMI_CD = B.ID
			AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') 
			AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
  ]]>              
	<!-- ROW COUNT(1) 3이상 일때 -->
    <if test='admiAround != null and admiAround != ""'>  
			AND ADMI_CD IN (${admiAround}||','||#{admiCd})
    </if>
    <!-- ROW COUNT(1) 3 미만 일때 -->
	<if test='admiAround == null or admiAround == ""'> 
			AND ADMI_CD IN (SELECT B.ID  
							FROM TBREGION A	
								, TBREGION B 
							WHERE A.ID = #{admiCd} 
							AND B.ID like #{ctyCd}||'%'
							AND B.ID != #{admiCd}
							AND B.RGN_CLSS ='H4' 
							ORDER BY ST_Distance(A.SHAPE,B.SHAPE) LIMIT 3) 
	</if>  
  <![CDATA[
			AND SALE_AMT > 0
			AND SALE_CNT > 0						   
			GROUP BY ID, NM
		) T1
		WHERE 1=1
		AND (COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0) + COALESCE(CNT_LW2,0) + COALESCE(CNT_LW1,0)) > 0  
		order by CNT_RATE DESC 
  ]]>
  </select>
    
  <!-- 13페이지. 3장 2절 유입 소비인구 거래량 > 이벤트 기간동안 일평균 거래금액, 평상시대비 일평균 거래금액 비율 - 텍스트 -->
  <select id="rpt-new-evntEff-013-006" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT T1.NM
			 , ROUND(T1.AVG_AMT,1) AS AVG_AMT
			 , ROUND((T1.AVG_AMT - T2.AVG_AMT) / T2.AVG_AMT *100,1) AS RATE
		FROM (
			SELECT B.NM
				 , (SUM(SALE_AMT) /  (#{endDate}::date - #{startDate}::date + 1)) AS AVG_AMT     
			FROM TBADMI_VISIT_UPJONG_INFO_D A
				, TBREGION B
			WHERE 1=1
			AND A.ADMI_CD = B.ID
			AND A.STDR_DATE >= #{startDate}
			AND A.STDR_DATE <= #{endDate}
			AND SALE_AMT > 0
			AND SALE_CNT > 0
			AND ADMI_CD    =#{admiCd}           
			GROUP BY B.NM                 
		) T1
		,(
			SELECT B.NM
				 , (case when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7
						 THEN ( COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END)/7 ,0)  
							  + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END)/7,0)  
							  + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END)/7,0))/3 
						 when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) between  7 and 13 
						 then ( COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END)/7 ,0)  
							  + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END)/7,0)  
							  + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END)/7,0) 
							  + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
												  AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
												  THEN SALE_AMT/7		             
												  ELSE 0 
											 END)))/4
						 when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14 
						 then ( COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END)/7 ,0)  
							  + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END)/7,0)  
							  + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END)/7,0) 
							  + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
												  AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
												  THEN SALE_AMT/7		             
												  ELSE 0 
											 END),0) 
							  + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
												  AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
												  THEN SALE_AMT/7
												  ELSE 0 
											 END),0))/5     
				   END) as AVG_AMT
			FROM TBADMI_VISIT_UPJONG_INFO_D A
				, TBREGION B    
			WHERE 1=1
			AND A.ADMI_CD = B.ID
			AND ( A.STDR_DATE BETWEEN TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD')
				OR A.STDR_DATE BETWEEN TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 14,'YYYYMMDD'))
			AND SALE_AMT > 0
			AND SALE_CNT > 0
			AND ADMI_CD = #{admiCd}            
			GROUP BY B.NM    
		) T2
		WHERE 1=1  
  ]]>
  </select>
    
  <!-- 13페이지. 3장 2절 유입 소비인구 거래량 > 주변지역의 일평균 거래금액 변화율 리스트 - 주제도 -->
  <select id="rpt-new-evntEff-013-007" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT NM 
		     , ID 
			 , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13 and ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0)) != 0
					 THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) )/4) * 100,1)
					 WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7  and  ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0)) != 0
					 THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0))/3) * 100,1)
					 WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14  AND ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) !=0
					 THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) * 100,1)
					 ELSE 0 
				END ) AS RATE                   
		FROM (
			SELECT SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END)/7 AS LW5  
				 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END)/7 AS LW4  
				 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END)/7 AS LW3 
				 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +7,'YYYYMMDD')
							AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr)  >= 7
							THEN SALE_AMT/7
							ELSE NULL 
				   END) AS LW2 
				 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
							AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr)  >= 14
							THEN SALE_AMT/7		                   
							ELSE NULL 
				   END) AS LW1 
				 , SUM(CASE WHEN STDR_DATE BETWEEN  #{startDate} AND #{endDate} THEN SALE_AMT END)/ (TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1) AS TERM 
				 , B.ID 
				 , B.NM 
			FROM TBADMI_VISIT_UPJONG_INFO_D A
				, TBREGION B 
			WHERE 1=1
			AND A.ADMI_CD = B.ID
			AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') 
			AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
  ]]>              
	<!-- ROW COUNT(1) 3이상 일때 -->
    <if test='admiAround != null and admiAround != ""'>  
    		AND ADMI_CD IN (${admiAround})
    </if>
    <!-- ROW COUNT(1) 3 미만 일때 -->
	<if test='admiAround == null or admiAround == ""'> 
			AND ADMI_CD IN (SELECT B.ID  
							FROM TBREGION A	
								, TBREGION B 
							WHERE A.ID = #{admiCd} 
							AND B.ID like #{ctyCd}||'%'
							AND B.ID != #{admiCd}
							AND B.RGN_CLSS ='H4' 
							ORDER BY ST_Distance(A.SHAPE,B.SHAPE) LIMIT 3)
	</if>  
  <![CDATA[
			AND SALE_AMT > 0
			AND SALE_CNT > 0						   
			GROUP BY ID, NM
		) T1
		WHERE 1=1
		AND (COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) > 0  
		union all 
		SELECT NM 
			 , ID 
			 , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13 and ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0)) != 0
					 THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) )/4) * 100,1)
					 WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7  and  ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0)) != 0
					 THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0))/3) * 100,1)
					 WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14  AND ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) !=0
					 THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) * 100,1)
					 ELSE 0 
				END ) AS RATE                  
		FROM (
			SELECT SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END)/7 AS LW5  
				 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END)/7 AS LW4  
				 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END)/7 AS LW3 
				 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +7,'YYYYMMDD')
							AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr)  >= 7
							THEN SALE_AMT/7
							ELSE NULL 
				   END) AS LW2 
				 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
							AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr)  >= 14
							THEN SALE_AMT/7		                   
							ELSE NULL 
				   END) AS LW1 
				 , SUM(CASE WHEN STDR_DATE BETWEEN  #{startDate} AND #{endDate} THEN SALE_AMT END)/ (TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1) AS TERM 
				 , B.ID 
				 , B.NM 
			FROM TBADMI_VISIT_UPJONG_INFO_D A
				, TBREGION B 
			WHERE 1=1
			AND A.ADMI_CD = B.ID
			AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') 
			AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
			AND ADMI_CD = #{admiCd}
			AND SALE_AMT > 0
			AND SALE_CNT > 0						   
			GROUP BY ID, NM
		) T1
		WHERE 1=1
		AND (COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) > 0  
		order by rate desc
  ]]>
  </select>
    
  <!-- 13페이지. 3장 2절 유입 소비인구 거래금액 > 주변지역의 일평균 거래금액 변화율 리스트  -->
  <select id="rpt-new-evntEff-013-008" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
  	SELECT T1.NM
			 , ROUND(T1.AVG_AMT,1) AS AVG_AMT
			 , ROUND((T1.AVG_AMT - T2.AVG_AMT) / T2.AVG_AMT *100,1) AS RATE
		FROM (
			SELECT B.NM
				 , (SUM(SALE_AMT) /  (#{endDate}::date - #{startDate}::date + 1)) AS AVG_AMT     
			FROM TBADMI_VISIT_UPJONG_INFO_D A
				, TBREGION B
			WHERE 1=1
			AND A.ADMI_CD = B.ID
			and cty_cd =#{ctyCd}
			AND ADMI_CD != #{admiCd} 
			AND A.STDR_DATE >= #{startDate}
			AND A.STDR_DATE <= #{endDate}
			AND SALE_AMT > 0
			AND SALE_CNT > 0              
			GROUP BY B.NM                 
		) T1
		,(
			SELECT B.NM
				 , (case when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7
						 THEN ( COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END)/7 ,0)  
							  + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END)/7,0)  
							  + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END)/7,0))/3 
						 when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) between  7 and 13 
						 then ( COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END)/7 ,0)  
							  + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END)/7,0)  
							  + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END)/7,0) 
							  + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
												  AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
												  THEN SALE_AMT/7		             
												  ELSE 0 
											 END)))/4
						 when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14 
						 then ( COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END)/7 ,0)  
							  + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END)/7,0)  
							  + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END)/7,0) 
							  + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
												  AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
												  THEN SALE_AMT/7		             
												  ELSE 0 
											 END),0) 
							  + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
												  AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
												  THEN SALE_AMT/7
												  ELSE 0 
											 END),0))/5     
				   END) as AVG_AMT
			FROM TBADMI_VISIT_UPJONG_INFO_D A
				, TBREGION B    
			WHERE 1=1
			AND A.ADMI_CD = B.ID
			and cty_cd =#{ctyCd}
			AND ADMI_CD != #{admiCd}   
			AND ( A.STDR_DATE BETWEEN TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD')
				OR A.STDR_DATE BETWEEN TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 14,'YYYYMMDD'))
			AND SALE_AMT > 0
			AND SALE_CNT > 0
			GROUP BY B.NM    
		) T2
		WHERE 1=1
  ]]>
  </select>
  
  <!-- 14페이지. 3장 3절 성/연령대별 유입 유동인구 > 성별 유입 유동인구 비교 -->
  <select id="rpt-new-evntEff-014-001" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		select round(sum(m_20_cnt + m_30_cnt + m_40_cnt + m_50_cnt + m_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_rate
			 , round(sum(f_20_cnt + f_30_cnt + f_40_cnt + f_50_cnt + f_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_rate
			 , round((sum(m_20_cnt + m_30_cnt + m_40_cnt + m_50_cnt + m_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT) - sum(f_20_cnt + f_30_cnt + f_40_cnt + f_50_cnt + f_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT))*100,1) as diff_mf_rate
		 	 , round((sum(f_20_cnt + f_30_cnt + f_40_cnt + f_50_cnt + f_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT) - sum(m_20_cnt + m_30_cnt + m_40_cnt + m_50_cnt + m_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT))*100,1) as diff_fm_rate
		from tbadmi_inflow_float_info
		where 1=1
		AND LOC_CLSS_CD = 'E'
		AND STDR_DATE between #{startDate} AND  #{endDate}
		AND ADMI_CD = #{admiCd}  
  ]]>
  </select>
    
  <!-- 14페이지. 3장 3절 성/연령대별 대표 유동인구 > 연령별 유동인구 비교 -->
  <select id="rpt-new-evntEff-014-002" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		with tmp as (
			select round(sum(m_20_cnt + f_20_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as cnt_20
				 , round(sum(m_30_cnt + f_30_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as cnt_30
				 , round(sum(m_40_cnt + f_40_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as cnt_40
				 , round(sum(m_50_cnt + f_50_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as cnt_50
				 , round(sum(m_60_cnt + f_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as cnt_60
			from tbadmi_inflow_float_info
			where 1=1
			AND LOC_CLSS_CD = 'E'
			AND STDR_DATE between #{startDate} AND  #{endDate}
			AND ADMI_CD = #{admiCd}
		)
		SELECT FLOAT_AGE
			 , RATE
		FROM (
			SELECT '20대' AS FLOAT_AGE
			, CNT_20 AS RATE
			FROM TMP
			UNION ALL 
			SELECT '30대' AS FLOAT_AGE
			, CNT_30 AS RATE
			FROM TMP
			UNION ALL 
			SELECT '40대' AS FLOAT_AGE
			, CNT_40 AS RATE
			FROM TMP
			UNION ALL 
			SELECT '50대' AS FLOAT_AGE
			, CNT_50 AS RATE
			FROM TMP
			UNION ALL 
			SELECT '60대 이상' AS FLOAT_AGE
			, CNT_60 AS RATE
			FROM TMP
		) A
		ORDER BY RATE DESC  
  ]]>
  </select>
    
  <!-- 14페이지. 3장 3절 성/연령대별 대표 유동인구 > 성/연령별 유동인구 비교 -->
  <select id="rpt-new-evntEff-014-003" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		with tmp as (
			select round(sum(m_20_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_20_cnt
				 , round(sum(m_30_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_30_cnt
				 , round(sum(m_40_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_40_cnt
				 , round(sum(m_50_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_50_cnt
				 , round(sum(m_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_60_cnt
				 , round(sum(f_20_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_20_cnt
				 , round(sum(f_30_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_30_cnt
				 , round(sum(f_40_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_40_cnt
				 , round(sum(f_50_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_50_cnt
				 , round(sum(f_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_60_cnt
			from tbadmi_inflow_float_info
			where 1=1
			AND LOC_CLSS_CD = 'E'
			AND STDR_DATE between #{startDate} AND  #{endDate}
			AND ADMI_CD = #{admiCd}
		)
		SELECT FLOAT_TYPE
			 , RATE
		FROM (
			SELECT '20대 남성' AS FLOAT_TYPE
			, m_20_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '30대 남성' AS FLOAT_TYPE
			, m_30_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '40대 남성' AS FLOAT_TYPE
			, m_40_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '50대 남성' AS FLOAT_TYPE
			, m_50_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '60대 이상 남성' AS FLOAT_TYPE
			, m_60_cnt AS RATE
			FROM TMP
			union all
			SELECT '20대 여성' AS FLOAT_TYPE
			, f_20_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '30대 여성' AS FLOAT_TYPE
			, f_30_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '40대 여성' AS FLOAT_TYPE
			, f_40_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '50대 여성' AS FLOAT_TYPE
			, f_50_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '60대 이상 여성' AS FLOAT_TYPE
			, f_60_cnt AS RATE
			FROM TMP
		) A
		order by rate desc
		limit 3  
  ]]>
  </select>
    
  <!-- 14페이지. 3장 3절 성/연령대별 대표 유동인구 > 성/연령별 유동인구 비교 - 그래프 -->
  <select id="rpt-new-evntEff-014-004" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		with tmp as (
			select round(sum(m_20_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_20_cnt
				 , round(sum(m_30_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_30_cnt
				 , round(sum(m_40_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_40_cnt
				 , round(sum(m_50_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_50_cnt
				 , round(sum(m_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_60_cnt
				 , round(sum(f_20_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_20_cnt
				 , round(sum(f_30_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_30_cnt
				 , round(sum(f_40_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_40_cnt
				 , round(sum(f_50_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_50_cnt
				 , round(sum(f_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_60_cnt
			from tbadmi_inflow_float_info
			where 1=1
			AND LOC_CLSS_CD = 'E'
			AND STDR_DATE between #{startDate} AND  #{endDate}
			AND ADMI_CD = #{admiCd}
		)
		SELECT name 
			 , groupname
			 , groupname_order 
			 , color 
			 , value
		FROM (
			SELECT '20대' AS name
			, '남성' as  groupname
			, '1' as groupname_order
			, '#54A7E8' as color
			, m_20_cnt AS value
			FROM TMP
			UNION ALL 
			SELECT '30대' AS name
			, '남성' as  groupname
			, '1' as groupname_order
			, '#54A7E8' as color
			, m_30_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '40대' AS name
			, '남성' as  groupname
			, '1' as groupname_order
			, '#54A7E8' as color
			, m_40_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '50대' AS name
			, '남성' as  groupname
			, '1' as groupname_order
			, '#54A7E8' as color
			, m_50_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '60대 이상' AS name
			, '남성' as  groupname
			, '1' as groupname_order
			, '#54A7E8' as color
			, m_60_cnt AS RATE
			FROM TMP
			union all
			SELECT '20대' AS name
			, '여성' as  groupname
			, '0' as groupname_order
			, '#E47677' as color
			, f_20_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '30대' AS name
			, '여성' as  groupname
			, '0' as groupname_order
			, '#E47677' as color
			, f_30_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '40대' AS name
			, '여성' as  groupname
			, '0' as groupname_order
			, '#E47677' as color
			, f_40_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '50대' AS name
			, '여성' as  groupname
			, '0' as groupname_order
			, '#E47677' as color
			, f_50_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '60대 이상' AS name
			, '여성' as  groupname
			, '0' as groupname_order
			, '#E47677' as color
			, f_60_cnt AS RATE
			FROM TMP
		) A
  ]]>
  </select>
  
  <!-- 14페이지. 3장 3절 성/연령대별 대표 소비인구 > 성별 소비인구 비교 -->
  <select id="rpt-new-evntEff-014-005" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT ROUND(SUM(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT)/SUM(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) AS M_RATE
			 , ROUND(SUM(F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)/SUM(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) AS F_RATE
			 , round((sum(m_20_cnt + m_30_cnt + m_40_cnt + m_50_cnt + m_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT) - sum(f_20_cnt + f_30_cnt + f_40_cnt + f_50_cnt + f_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT))*100,1) as diff_mf_rate
		 	 , round((sum(f_20_cnt + f_30_cnt + f_40_cnt + f_50_cnt + f_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT) - sum(m_20_cnt + m_30_cnt + m_40_cnt + m_50_cnt + m_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT))*100,1) as diff_fm_rate
		FROM TBADMI_VISIT_INFO_D_NEW 
		WHERE 1=1
		AND STDR_DATE BETWEEN #{startDate} AND  #{endDate}
		AND LOC_CLSS_CD = 'E'
		AND ADMI_CD = #{admiCd}
  ]]>
  </select>
  
  <!-- 14페이지. 3장 3절 성/연령대별 대표 소비인구 > 연령별 소비인구 비교 -->
  <select id="rpt-new-evntEff-014-006" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		with tmp as (
			select round(sum(m_20_cnt + f_20_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1)  as cnt_20
				 , round(sum(m_30_cnt + f_30_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as cnt_30
				 , round(sum(m_40_cnt + f_40_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as cnt_40
				 , round(sum(m_50_cnt + f_50_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as cnt_50
				 , round(sum(m_60_cnt + f_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as cnt_60
			from TBADMI_VISIT_INFO_D_NEW
			where 1=1
			AND STDR_DATE between #{startDate} AND  #{endDate}
			AND LOC_CLSS_CD = 'E'
			AND ADMI_CD = #{admiCd}
		)
		SELECT AMT_AGE
			 , RATE
		FROM (
			SELECT '20대' AS AMT_AGE
			, CNT_20 AS RATE
			FROM TMP
			UNION ALL 
			SELECT '30대' AS AMT_AGE
			, CNT_30 AS RATE
			FROM TMP
			UNION ALL 
			SELECT '40대' AS AMT_AGE
			, CNT_40 AS RATE
			FROM TMP
			UNION ALL 
			SELECT '50대' AS AMT_AGE
			, CNT_50 AS RATE
			FROM TMP
			UNION ALL 
			SELECT '60대 이상' AS AMT_AGE
			, CNT_60 AS RATE
			FROM TMP
		) A
		ORDER BY RATE DESC
  ]]>
  </select>
   
  <!-- 14페이지. 3장 3절 성/연령대별 대표 소비인구 > 성/연령별 소비인구 비교 -->
  <select id="rpt-new-evntEff-014-007" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		with tmp as (
			select round(sum(m_20_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_20_cnt
				 , round(sum(m_30_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_30_cnt
				 , round(sum(m_40_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_40_cnt
				 , round(sum(m_50_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_50_cnt
				 , round(sum(m_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_60_cnt
				 , round(sum(f_20_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_20_cnt
				 , round(sum(f_30_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_30_cnt
				 , round(sum(f_40_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_40_cnt
				 , round(sum(f_50_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_50_cnt
				 , round(sum(f_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_60_cnt
			from TBADMI_VISIT_INFO_D_NEW
			where 1=1
			AND STDR_DATE between #{startDate} AND  #{endDate}
			AND LOC_CLSS_CD = 'E'
			AND ADMI_CD LIKE #{admiCd}
		)
		SELECT AMT_TYPE
			 , RATE
		FROM (
			SELECT '20대 남성' AS AMT_TYPE
			, m_20_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '30대 남성' AS AMT_TYPE
			, m_30_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '40대 남성' AS AMT_TYPE
			, m_40_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '50대 남성' AS AMT_TYPE
			, m_50_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '60대 이상 남성' AS AMT_TYPE
			, m_60_cnt AS RATE
			FROM TMP
			union all
			SELECT '20대 여성' AS AMT_TYPE
			, f_20_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '30대 여성' AS AMT_TYPE
			, f_30_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '40대 여성' AS AMT_TYPE
			, f_40_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '50대 여성' AS AMT_TYPE
			, f_50_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '60대 이상 여성' AS AMT_TYPE
			, f_60_cnt AS RATE
			FROM TMP
		) A
		order by rate desc
		limit 3
  ]]>
  </select>
   
  <!-- 14페이지. 3장 3절 성/연령대별 대표 소비인구 > 성/연령별 소비인구 비교 - 그래프 -->
  <select id="rpt-new-evntEff-014-008" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		with tmp as (
			select round(sum(m_20_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_20_cnt
				 , round(sum(m_30_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_30_cnt
				 , round(sum(m_40_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_40_cnt
				 , round(sum(m_50_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_50_cnt
				 , round(sum(m_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_60_cnt
				 , round(sum(f_20_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_20_cnt
				 , round(sum(f_30_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_30_cnt
				 , round(sum(f_40_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_40_cnt
				 , round(sum(f_50_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_50_cnt
				 , round(sum(f_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_60_cnt
			from TBADMI_VISIT_INFO_D_NEW
			where 1=1
			AND STDR_DATE between #{startDate} AND  #{endDate}
			AND LOC_CLSS_CD = 'E'
			AND ADMI_CD LIKE #{admiCd}
		)
		SELECT name 
			 , groupname 
			 , groupname_order
			 , color 
			 , value
		FROM (
			SELECT '20대' AS name
			, '남성' as  groupname
			, '1' as groupname_order
			, '#54A7E8' as color
			, m_20_cnt AS value
			FROM TMP
			UNION ALL 
			SELECT '30대' AS name
			, '남성' as  groupname
			, '1' as groupname_order
			, '#54A7E8' as color
			, m_30_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '40대' AS name
			, '남성' as  groupname
			, '1' as groupname_order
			, '#54A7E8' as color
			, m_40_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '50대' AS name
			, '남성' as  groupname
			, '1' as groupname_order
			, '#54A7E8' as color
			, m_50_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '60대 이상' AS name
			, '남성' as  groupname
			, '1' as groupname_order
			, '#54A7E8' as color
			, m_60_cnt AS RATE
			FROM TMP
			union all
			SELECT '20대' AS name
			, '여성' as  groupname
			, '0' as groupname_order
			, '#E47677' as color
			, f_20_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '30대' AS name
			, '여성' as  groupname
			, '0' as groupname_order
			, '#E47677' as color
			, f_30_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '40대' AS name
			, '여성' as  groupname
			, '0' as groupname_order
			, '#E47677' as color
			, f_40_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '50대' AS name
			, '여성' as  groupname
			, '0' as groupname_order
			, '#E47677' as color
			, f_50_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '60대 이상' AS name
			, '여성' as  groupname
			, '0' as groupname_order
			, '#E47677' as color
			, f_60_cnt AS RATE
			FROM TMP
		) A	
  ]]>
  </select>
  
      
  <!-- 14페이지. 3장 3절 성/연령대별 대표 유동인구 > 성/연령별 상주 유동인구 비교 -->
  <select id="rpt-new-evntEff-014-010" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		with tmp as (
			select round(sum(m_20_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_20_cnt
				 , round(sum(m_30_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_30_cnt
				 , round(sum(m_40_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_40_cnt
				 , round(sum(m_50_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_50_cnt
				 , round(sum(m_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_60_cnt
				 , round(sum(f_20_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_20_cnt
				 , round(sum(f_30_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_30_cnt
				 , round(sum(f_40_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_40_cnt
				 , round(sum(f_50_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_50_cnt
				 , round(sum(f_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_60_cnt
			from tbadmi_inflow_float_info
			where 1=1
			AND LOC_CLSS_CD = 'R'
			AND STDR_DATE between #{startDate} AND  #{endDate}
			AND ADMI_CD = #{admiCd}
		)
		SELECT FLOAT_TYPE
			 , RATE
		FROM (
			SELECT '20대 남성' AS FLOAT_TYPE
			, m_20_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '30대 남성' AS FLOAT_TYPE
			, m_30_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '40대 남성' AS FLOAT_TYPE
			, m_40_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '50대 남성' AS FLOAT_TYPE
			, m_50_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '60대 이상 남성' AS FLOAT_TYPE
			, m_60_cnt AS RATE
			FROM TMP
			union all
			SELECT '20대 여성' AS FLOAT_TYPE
			, f_20_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '30대 여성' AS FLOAT_TYPE
			, f_30_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '40대 여성' AS FLOAT_TYPE
			, f_40_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '50대 여성' AS FLOAT_TYPE
			, f_50_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '60대 이상 여성' AS FLOAT_TYPE
			, f_60_cnt AS RATE
			FROM TMP
		) A
		order by rate desc
		limit 1  
  ]]>
  </select>
  
     
  <!-- 14페이지. 3장 3절 성/연령대별 대표 소비인구 > 성/연령별 상주 소비인구 비교 -->
  <select id="rpt-new-evntEff-014-011" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		with tmp as (
			select round(sum(m_20_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_20_cnt
				 , round(sum(m_30_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_30_cnt
				 , round(sum(m_40_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_40_cnt
				 , round(sum(m_50_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_50_cnt
				 , round(sum(m_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as m_60_cnt
				 , round(sum(f_20_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_20_cnt
				 , round(sum(f_30_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_30_cnt
				 , round(sum(f_40_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_40_cnt
				 , round(sum(f_50_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_50_cnt
				 , round(sum(f_60_cnt)/sum(M_20_CNT + M_30_CNT + M_40_CNT + M_50_CNT + M_60_CNT + F_20_CNT + F_30_CNT + F_40_CNT + F_50_CNT + F_60_CNT)*100,1) as f_60_cnt
			from TBADMI_VISIT_INFO_D_NEW
			where 1=1
			AND STDR_DATE between #{startDate} AND  #{endDate}
			AND LOC_CLSS_CD = 'R'
			AND ADMI_CD LIKE #{admiCd}
		)
		SELECT AMT_TYPE
			 , RATE
		FROM (
			SELECT '20대 남성' AS AMT_TYPE
			, m_20_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '30대 남성' AS AMT_TYPE
			, m_30_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '40대 남성' AS AMT_TYPE
			, m_40_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '50대 남성' AS AMT_TYPE
			, m_50_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '60대 이상 남성' AS AMT_TYPE
			, m_60_cnt AS RATE
			FROM TMP
			union all
			SELECT '20대 여성' AS AMT_TYPE
			, f_20_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '30대 여성' AS AMT_TYPE
			, f_30_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '40대 여성' AS AMT_TYPE
			, f_40_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '50대 여성' AS AMT_TYPE
			, f_50_cnt AS RATE
			FROM TMP
			UNION ALL 
			SELECT '60대 이상 여성' AS AMT_TYPE
			, f_60_cnt AS RATE
			FROM TMP
		) A
		order by rate desc
		limit 1
  ]]>
  </select>
  
  <!-- 15페이지. 3장 4절 업종별 비교 > 이벤트기간동안 일평균 거래금액 변화율 리스트  텍스트 & 그래프 -->
  <select id="rpt-new-evntEff-015-001" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT T.CODE
			 , T.CD_NM    
			 , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13
						  THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4,1)
						  WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7
						  THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3,1)     
						  WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
						  THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5,1)        
						  ELSE 0 
			END ) AS AVG_AMT
			, (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13 and ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0)) != 0
					THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) )/4) * 100,1)
					WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7 and (COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0)) != 0
					THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0))/3) * 100,1)
					WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14  AND ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) !=0
					THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) * 100,1)
					ELSE 0 
			END ) AS RATE  
			, ROUND(TERM) AS AMT    
		FROM (
			SELECT B.CD_NM
				 , B.CODE  
				 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END)/7 AS LW5  
				 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END)/7 AS LW4  
				 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END)/7 AS LW3 
				 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
							AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
							THEN SALE_AMT / 7		              
							ELSE NULL 
				   END) AS LW2 
				 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
							AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
							THEN SALE_AMT/ 7		                        
							ELSE NULL 
				   END) AS LW1  
				 , COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  #{startDate} AND #{endDate} THEN SALE_AMT END)/ (TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1),0) AS TERM  
			FROM TBADMI_INFO_D4 A
				, TBCOMM_CODE B
			WHERE 1=1
			AND A.UPJONG2_CD = B.CODE
			AND A.LOC_CLSS_CD ='E'
			AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') 
			AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
			AND ADMI_CD = #{admiCd}
			AND SALE_AMT > 0
			AND SALE_CNT > 0
			AND UPJONG2_CD NOT IN ( SELECT DISTINCT UPJONG2_CD
									FROM TBADMI_UPJONG_INFO_D a
									WHERE 1=1
									AND ADMI_CD = #{admiCd}
									AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') 
									AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
									AND STORE_CNT_FLG = 'N'
								  )  
			GROUP BY B.CODE,B.CD_NM			        
		) T
		WHERE 1=1
		AND (COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) > 0 
		ORDER BY 4 DESC
		LIMIT 10
  ]]>
  </select>  
  
  <!-- 15페이지. 3장 4절 업종별 비교 > 평상시기간과 비교 일평균 거래량 변화율 리스트 텍스트 & 그래프 -->
  <select id="rpt-new-evntEff-015-002" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT T.CODE
			 , T.CD_NM    
			 , ROUND(CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13
						  THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4,1)
						  WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7
						  THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0))/3,1)     
						  WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
						  THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5,1)        
						  ELSE 0 
			 END ) AS AVG_CNT
			 , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13 and ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0)) != 0
					 THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) )/4) * 100,1)
					 WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7 and (COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0)) != 0
					 THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0))/3) * 100,1)
					 WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14  AND ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) !=0
					 THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) * 100,1)
					 ELSE 0 
			 END ) AS RATE  
			 , ROUND(TERM) AS CNT    
		FROM (
				SELECT B.CD_NM
					 , B.CODE  
					 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_CNT END)/7 AS LW5  
					 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_CNT END)/7 AS LW4  
					 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_CNT END)/7 AS LW3 
					 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
								AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
								THEN SALE_CNT / 7		              
								ELSE NULL 
					   END) AS LW2 
					 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
								AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
								THEN SALE_CNT/ 7		                        
								ELSE NULL 
					  END) AS LW1  
					, COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  #{startDate} AND #{endDate} THEN SALE_CNT END)/ (TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1),0) AS TERM  
				FROM TBADMI_INFO_D4 A
					, TBCOMM_CODE B
				WHERE 1=1
				AND A.UPJONG2_CD = B.CODE
				AND A.LOC_CLSS_CD ='E'
				AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') 
				AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
				AND ADMI_CD = #{admiCd}
				AND SALE_AMT > 0
				AND SALE_CNT > 0
				AND UPJONG2_CD NOT IN ( SELECT DISTINCT UPJONG2_CD
										FROM TBADMI_UPJONG_INFO_D a
										WHERE 1=1
										AND ADMI_CD = #{admiCd}
										AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') 
										AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
										AND STORE_CNT_FLG = 'N'
				)  
				GROUP BY B.CODE,B.CD_NM			        
		) T
		WHERE 1=1
		AND (COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) > 0 
		ORDER BY 4 DESC
		LIMIT 10
  ]]>
  </select>  
    
  <!-- 16페이지. 3장 5절 시간대별 유입인구 > 유입 유동인구가 가장 많았던 시간대 리스트 3 -->
  <select id="rpt-new-evntEff-016-001" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
	    SELECT * 
	    FROM (
			SELECT B.CODE
				 , trim(B.CD_NM) as cd_nm  
				 , LOC_CLSS_CD
				 , ROUND(SUM(TOTAL_CNT)/SUM(SUM(TOTAL_CNT))OVER()*100,1) AS RATE
			FROM TBADMI_INFLOW_TIMEZONE A
				, TBCOMM_CODE B
			WHERE 1=1
			AND A.TIMEZON_CD = B.CODE
			AND B.CD_ID ='TIMEZON_CD'
			AND A.STDR_DATE BETWEEN #{startDate} AND  #{endDate}
			AND ADMI_CD = #{admiCd}
			GROUP BY B.CODE, B.CD_NM , LOC_CLSS_CD  
			ORDER BY 4 DESC
		) T
		WHERE 1=1 
		AND T.LOC_CLSS_CD='E'
		LIMIT 3
  ]]>
  </select>  
    
  <!-- 16페이지. 3장 5절의 시간대별 유입인구 > 상주 유동인구 최고 시간대 -->
  <select id="rpt-new-evntEff-016-002" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT B.CODE
			 , trim(B.CD_NM) as cd_nm  
			 , SUM(total_cnt) AS TOTAL_CNT  
		FROM tbadmi_inflow_timezone A
			, TBCOMM_CODE B
		WHERE 1=1
		AND A.TIMEZON_CD = B.CODE
		AND B.CD_ID ='TIMEZON_CD'
		AND A.STDR_DATE between #{startDate} AND  #{endDate}
		AND admi_CD = #{admiCd}
		AND LOC_CLSS_CD = 'R'
		GROUP BY B.CODE, B.CD_NM   
		ORDER BY 3 desc
		limit 1
  ]]>
  </select>  
    
  <!-- 16페이지. 3장 5절의 시간대별 유입인구 > 상주 유동인구와 유입 유동인구 차이가 가장 큰 시간대 -->
  <select id="rpt-new-evntEff-016-003" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT trim(A.CD_NM) as cd_nm
			 , ABS(A.TOTAL_CNT - B.TOTAL_CNT) as diff
		FROM (
		SELECT B.CD_NM  
				 , SUM(total_cnt) AS TOTAL_CNT  
			FROM tbadmi_inflow_timezone A
				, TBCOMM_CODE B
			WHERE 1=1
			AND A.TIMEZON_CD = B.CODE
			AND B.CD_ID ='TIMEZON_CD'
			AND A.STDR_DATE between #{startDate} AND  #{endDate}
			AND admi_CD = #{admiCd}
			AND LOC_CLSS_CD = 'R'
			GROUP BY B.CD_NM 
		) A
		left outer join
		(
		SELECT B.CD_NM  
				 , SUM(total_cnt) AS TOTAL_CNT  
			FROM tbadmi_inflow_timezone A
				, TBCOMM_CODE B
			WHERE 1=1
			AND A.TIMEZON_CD = B.CODE
			AND B.CD_ID ='TIMEZON_CD'
			AND A.STDR_DATE between #{startDate} AND  #{endDate}
			AND admi_CD = #{admiCd}
			AND LOC_CLSS_CD = 'E'
			GROUP BY B.CD_NM 
		) B
		ON A.CD_NM = B.CD_NM
		order by diff desc
		limit 1
  ]]>
  </select>  
    
  <!-- 16페이지. 3장 5절의 시간대별 유입인구 > 유입 소비인구가 가장 활발한 시간대 리스트 -->
  <select id="rpt-new-evntEff-016-004" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT * 
		FROM (
			SELECT B.CODE
			     , trim(B.CD_NM) as cd_nm  
			     , LOC_CLSS_CD
			     , ROUND(SUM(TOTAL_CNT) / (SUM(SUM(TOTAL_CNT)) OVER()) *100,1) RATE
			     , SUM(TOTAL_CNT) AS TOTAL_CNT  
			FROM TBADMI_TIMEZON_INFO_D A
			     , TBCOMM_CODE B
			WHERE 1=1
			AND A.TIMEZON_CD = B.CODE
			AND B.CD_ID ='TIMEZON_CD'
			AND A.STDR_DATE BETWEEN #{startDate} AND  #{endDate}
			AND ADMI_CD = #{admiCd}
			GROUP BY B.CODE, B.CD_NM, LOC_CLSS_CD   
			ORDER BY 4 DESC
		) T1
		WHERE LOC_CLSS_CD='E'
		LIMIT 3
  ]]>
  </select>  
    
  <!-- 16페이지. 3장 5절의 시간대별 유입인구 > 상주 소비인구가 가장 활발한 시간대 -->
  <select id="rpt-new-evntEff-016-005" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT trim(B.CD_NM) as cd_nm  
		     , SUM(TOTAL_CNT) AS TOTAL_CNT  
		FROM TBADMI_TIMEZON_INFO_D A
		     , TBCOMM_CODE B
		WHERE 1=1
		AND A.TIMEZON_CD = B.CODE
		AND B.CD_ID ='TIMEZON_CD'
		AND A.STDR_DATE between #{startDate} AND  #{endDate}
		AND admi_CD = #{admiCd}
		AND LOC_CLSS_CD ='R'
		GROUP BY B.CODE, B.CD_NM   
		ORDER BY 2 desc
		limit 1
  ]]>
  </select>  
    
  <!-- 16페이지. 3장 5절의 시간대별 유입인구 > 상주 소비인구와 유입 소비인구 차이가 가장 큰 시간대 -->
  <select id="rpt-new-evntEff-016-006" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT trim(A.CD_NM) as cd_nm
			 , ABS(A.TOTAL_CNT - B.TOTAL_CNT) as diff
		FROM (
		SELECT B.CD_NM  
				 , SUM(TOTAL_CNT) AS TOTAL_CNT  
			FROM TBADMI_TIMEZON_INFO_D A
				, TBCOMM_CODE B
			WHERE 1=1
			AND A.TIMEZON_CD = B.CODE
			AND B.CD_ID ='TIMEZON_CD'
			AND A.STDR_DATE between #{startDate} AND  #{endDate}
			AND admi_CD = #{admiCd}
			AND LOC_CLSS_CD = 'R'
			GROUP BY B.CD_NM 
		) A
		left outer join
		(
		SELECT B.CD_NM  
				 , SUM(TOTAL_CNT) AS TOTAL_CNT  
			FROM TBADMI_TIMEZON_INFO_D A
				, TBCOMM_CODE B
			WHERE 1=1
			AND A.TIMEZON_CD = B.CODE
			AND B.CD_ID ='TIMEZON_CD'
			AND A.STDR_DATE between #{startDate} AND  #{endDate}
			AND admi_CD = #{admiCd}
			AND LOC_CLSS_CD = 'E'
			GROUP BY B.CD_NM 
		) B
		ON A.CD_NM = B.CD_NM
		order by diff desc
		limit 1
  ]]>
  </select>  
    
  <!-- 16페이지. 3장 5절의 시간대별 유입인구 > 시간대별 상주/유입유동인구 그래프 -->
  <select id="rpt-new-evntEff-016-007" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		select * from (
			select B.CODE
			 	 , B.CD_NM  as name
			 	 , round(sum(total_cnt)/sum(sum(total_cnt)) over() *100, 1) as value
				 , '#D3D3D3' as color
				 , '상주인구' as groupname
			from ( 
					select timezon_cd 
						 , sum(case
						 	  when timezon_cd = '1' then total_cnt/2
						 	  else total_cnt
						   end) as total_cnt
					from tbadmi_inflow_timezone 
					where 1=1
					AND STDR_DATE between #{startDate} AND  #{endDate}
					AND admi_CD = #{admiCd}
					and loc_clss_cd ='R'
					group by timezon_cd 
				) A
				, tbcomm_code B
			where 1=1
			and B.cd_id ='TIMEZON_CD'
			AND A.TIMEZON_CD = B.CODE
			GROUP BY CODE,name, color,groupname
			union all
			select B.CODE
			 	 , B.CD_NM  as name
			 	 , round(sum(total_cnt)/sum(sum(total_cnt)) over() *100, 1) as value
				 , '#2EC5C5' as color
				 , '유입인구' as groupname
			from ( 
					select timezon_cd 
						 , sum(case
						 	  when timezon_cd = '1' then total_cnt/2
						 	  else total_cnt
						   end) as total_cnt
					from tbadmi_inflow_timezone 
					where 1=1
					AND STDR_DATE between #{startDate} AND  #{endDate}
					AND admi_CD = #{admiCd}
					and loc_clss_cd ='E'
					group by timezon_cd 
				) A
				, tbcomm_code B
			where 1=1
			and B.cd_id ='TIMEZON_CD'
			AND A.TIMEZON_CD = B.CODE
			GROUP BY CODE,name, color,groupname
		) T
		order by groupname desc, code;
  ]]>
  </select>    
      
  <!-- 16페이지. 3장 5절의 시간대별 유입인구 > 시간대별 상주/유입 소비인구 그래프 -->
  <select id="rpt-new-evntEff-016-008" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		(select B.CODE
		 	 , B.CD_NM  as name
		 	 , round(sum(total_cnt)/sum(sum(total_cnt)) over() *100, 1) as value
			 , '#FE8E75' as color
			 , '유입인구' as groupname
		from TBADMI_TIMEZON_INFO_D A
			, tbcomm_code B
		where 1=1
		and B.cd_id ='TIMEZON_CD'
		AND A.TIMEZON_CD = B.CODE
		AND A.STDR_DATE between #{startDate} AND  #{endDate}
		AND admi_CD = #{admiCd}
		AND LOC_CLSS_CD='E'
		GROUP BY CODE,name, color,groupname
		order by code)
		union all
		(select B.CODE
		 	 , B.CD_NM  as name
		 	 , round(sum(total_cnt)/sum(sum(total_cnt)) over() *100, 1) as value
			 , '#D3D3D3' as color
			 , '상주인구' as groupname
		from TBADMI_TIMEZON_INFO_D A
			, tbcomm_code B
		where 1=1
		and B.cd_id ='TIMEZON_CD'
		AND A.TIMEZON_CD = B.CODE
		AND A.STDR_DATE between #{startDate} AND  #{endDate}
		AND admi_CD = #{admiCd}
		AND LOC_CLSS_CD='R'
		GROUP BY CODE,name, color,groupname
		order by code)
  ]]>
  </select>    
      
  <!-- 17페이지. 3장 6절의 유입인구의 유입지역 > 시군구 단위 유입 유동인구 3순위 & 지도 -->
  <select id="rpt-new-evntEff-017-001" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT B.ID
			 , B.full_name 
			 , sum(total_cnt) as tot
			 , round(sum(total_cnt)/sum(sum(total_cnt)) over()*100,1) as rate
		FROM tbadmi_inflow_float A
			, TBREGION B
		WHERE 1=1
		and substring(A.in_cty_cd,1,4) = substring(B.id,1,4)
		AND STDR_DATE between #{startDate} AND  #{endDate}
		AND admi_CD = #{admiCd}
		and in_cty_cd <> #{ctyCd}
		AND B.RGN_CLSS ='H3'
		group by B.full_name , B.ID
		order by rate desc
  ]]>
  </select>    
      
  <!-- 17페이지. 3장 6절의 유입인구의 유입지역 > 시도 단위 유입 유동인구 3순위 -->
  <select id="rpt-new-evntEff-017-002" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT B.full_name 
			 , round(sum(total_cnt)/sum(sum(total_cnt)) over()*100,1) as rate
		FROM tbadmi_inflow_float A
			, TBREGION B
		WHERE 1=1
		and A.in_mega_cd = B.id
		AND STDR_DATE between #{startDate} AND  #{endDate}
		AND admi_CD = #{admiCd}
		group by B.full_name  
		order by rate desc
		limit 3
  ]]>
  </select>
        
  <!-- 17페이지. 3장 6절의 유입인구의 유입지역 > 시군구 단위 유입 유동인구 표 1~10 -->
  <select id="rpt-new-evntEff-017-003" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT B.full_name 
			 , round(sum(total_cnt)/sum(sum(total_cnt)) over()*100,1) as rate
		FROM tbadmi_inflow_float A
			, TBREGION B
		WHERE 1=1
		and substring(A.in_cty_cd,1,4) = substring(B.id,1,4)
		AND STDR_DATE between #{startDate} AND  #{endDate}
		AND ADMI_CD = #{admiCd}
		AND IN_CTY_CD <> #{ctyCd}
		AND B.RGN_CLSS ='H3'
		group by B.full_name  
		order by rate desc
		limit 10
  ]]>
  </select>  
        
  <!-- 17페이지. 3장 6절의 유입인구의 유입지역 > 시군구 단위 유입 유동인구 표 11~20 -->
  <select id="rpt-new-evntEff-017-004" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT B.full_name 
			 , round(sum(total_cnt)/sum(sum(total_cnt)) over()*100,1) as rate
		FROM tbadmi_inflow_float A
			, TBREGION B
		WHERE 1=1
		and substring(A.in_cty_cd,1,4) = substring(B.id,1,4)
		AND STDR_DATE between #{startDate} AND  #{endDate}
		AND admi_CD = #{admiCd}
		and in_cty_cd <> #{ctyCd}
		AND B.RGN_CLSS ='H3'
		group by B.full_name  
		order by rate desc
		limit 10 offset 10
  ]]>
  </select>  
  
  <!-- 부록. 업종별 일평균 거래금액 변화 -->
  <select id="rpt-new-evntEff-020-001" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
		SELECT CD_NM 
		     , (CASE WHEN LW5 IS NULL THEN '-' ELSE CAST(ROUND(LW5/1000000,1) AS TEXT) END) AS LW5    
		     , (CASE WHEN LW4 IS NULL THEN '-' ELSE CAST(ROUND(LW4/1000000,1) AS TEXT) END) AS LW4     
		     , (CASE WHEN LW3 IS NULL THEN '-' ELSE CAST(ROUND(LW3/1000000,1) AS TEXT) END) AS LW3     
		     , (CASE WHEN TERM IS NULL THEN '-' ELSE CAST(ROUND(TERM/1000000,1) AS TEXT) END) AS TERM     
		     , (CASE WHEN LW2 IS NULL THEN '-' ELSE CAST(ROUND(LW2/1000000,1) AS TEXT) END) AS LW2     
		     , (CASE WHEN LW1 IS NULL THEN '-' ELSE CAST(ROUND(LW1/1000000,1) AS TEXT) END) AS LW1    
  		       		     , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13
                                 THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4000000,1)
                             WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7
                                 THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3000000,1)     
                             WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
                                 THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0) )/5000000,1)        
                             ELSE 0 END ) AS DAYS_RATE
  		     , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13 and ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0)) != 0
                     THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) )/4) * 100,1)
                     WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7  and  ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0)) != 0
                     THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0))/3) * 100,1)
                     WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14  AND ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) !=0
                     THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) * 100,1)
                     ELSE 0 
                END ) AS RATE    
		  FROM
		      (
		        SELECT UPJONG2_CD
		             , (SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END)/7) AS LW5  
		             , (SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END)/7) AS LW4  
		             , (SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END)/7) AS LW3 
		             , ROUND(SUM(CASE 
                                WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
		                        AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
		                        THEN SALE_AMT / 7
		               ELSE NULL END)) AS LW2 
		              , ROUND(SUM(CASE 
                                WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
		                        AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
		                        THEN SALE_AMT/ 7
		                ELSE NULL END)) AS LW1
		             , (SUM(CASE WHEN STDR_DATE BETWEEN  #{startDate} AND #{endDate} THEN SALE_AMT END)/ (TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1)) AS TERM  
		         FROM TBADMI_UPJONG_INFO_D A
		        WHERE 1=1
		          AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') 
		          AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
		          AND ADMI_CD = #{admiCd}
			        AND SALE_AMT > 0
			        AND SALE_CNT > 0
		          AND UPJONG2_CD NOT IN (SELECT DISTINCT UPJONG2_CD
		                                   FROM TBADMI_UPJONG_INFO_D a
		                                   WHERE 1=1
		                                     AND ADMI_CD = #{admiCd}
                                             AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') 
                                             AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
		                                     AND STORE_CNT_FLG = 'N'
		                                )  			        
			 GROUP BY UPJONG2_CD     
		      ) T1
		      , TBCOMM_CODE T2
		  WHERE 1=1
		  AND T1.UPJONG2_CD = T2.CODE
          ORDER BY 9 desc nulls last
  ]]>
  </select>
  
  <!-- 부록. 일평균 유동인구 변화 -->
  <select id="rpt-new-evntEff-020-002" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
	SELECT timezon_cd
		 , cd_nm
		 , ROUND(LW5/1000,1) AS LW5    
	     , ROUND(LW4/1000,1) AS LW4         
	     , ROUND(LW3/1000,1) AS LW3    
	     , ROUND(TERM/1000,1) AS TERM    
	     , ROUND(LW2/1000,1) AS LW2    
	     , ROUND(LW1/1000,1) AS LW1    
	     , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13
	             THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4000,1)
	             WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7
	             THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3000,1)     
	             WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
	             THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0) )/5000,1)        
	             ELSE 0 END ) AS DAYS_RATE
	     , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13
	             THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4,1)
	             WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7
	             THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3,1)     
	             WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
	             THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0) )/5,1)        
	             ELSE 0 END ) AS DAYS_RATE_txt
	     , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13 and ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0)) != 0
	             THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) )/4) * 100,1)
	             WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7  and  ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0)) != 0
	             THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0))/3) * 100,1)
	             WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14  AND ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) !=0
	             THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) * 100,1)
	             ELSE 0 
	        END  ) AS RATE  
	  FROM
	      (
	        SELECT a.timezon_cd, tc.cd_nm 
	        	 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN TOTAL_CNT END)/7 AS LW5  
	             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN TOTAL_CNT END)/7 AS LW4  
	             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN TOTAL_CNT END)/7 AS LW3 
	             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
	                        AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
	                        THEN TOTAL_CNT / 7
	               			ELSE NULL 
	               	   END) AS LW2 
	             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
	                        AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
	                        THEN TOTAL_CNT/ 7
	                		ELSE NULL 
	               	   END) AS LW1
	             , COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  #{startDate} AND #{endDate} THEN TOTAL_CNT END)/ (TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1),0) AS TERM  
	         FROM tbadmi_inflow_timezone A
	            , tbcomm_code tc 
	        WHERE 1=1
	          AND TC.CD_ID ='TIMEZON_CD'
	          AND TC.CODE = A.TIMEZON_CD 
	          AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') 
	          AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
	          AND ADMI_CD = #{admiCd}
		      AND TOTAL_CNT > 0	
		    group by timezon_cd, tc.cd_nm 
		    order by timezon_cd asc
	      ) T
	 WHERE 1=1
	   AND (COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) > 0
  ]]>
  </select>  
  
  <!-- 이벤트효과 보고서 끝 ///// -->
</mapper>
