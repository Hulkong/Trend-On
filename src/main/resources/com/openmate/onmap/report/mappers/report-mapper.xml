<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.openmate.onmap.report.service.OnmapReportDao">


  <!-- 시군구 등록 조회 -->
  <select id="selectCache" parameterType="String" resultType="java.util.HashMap">
  <![CDATA[
    SELECT ID AS id , CACHE AS cache
      FROM public.tbcom_report_cache
     WHERE ID = #{id}
  ]]>
  </select>
  


  <select id="existCache" parameterType="String" resultType="int">
  <![CDATA[
    SELECT count(*)
      FROM public.tbcom_report_cache
     WHERE ID = #{id}
  ]]>
  </select>
  
    
  <!-- 캐시 삭제 -->
  <delete id="deleteCache" parameterType="String" >
  <![CDATA[
    DELETE
      FROM public.tbcom_report_cache
     WHERE ID = #{id}
  ]]>
  </delete>

  <!-- 사용자 저장 -->
  <insert id="insertCache" parameterType="java.util.HashMap" useGeneratedKeys="true" keyProperty="id">
  <![CDATA[
    INSERT INTO public.tbcom_report_cache(id, cache, reg_date) VALUES ( #{id} , #{json} , now()  )
  ]]>
  </insert>


  <!-- 경제트랜드 보고서 시작 -->
  <!-- 5page text01 -->
  <select id="rpt-trnd-005-001" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
    SELECT SPLIT_PART(FULL_NAME, ' ', 1) MEGA_NM 
         , SPLIT_PART(FULL_NAME, ' ', 2) CTY_NM 
         , SUBSTR(#{startDate},1,4)||'년 '||SUBSTR(#{startDate},5,2)||'월 '||SUBSTR(#{startDate},7,2)||'일 '||'~ '||SUBSTR(#{endDate},1,4)||'년 '||SUBSTR(#{endDate},5,2)||'월 '||SUBSTR(#{endDate},7,2)||'일' AS period
         , TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1 as days
         , (SELECT SUM(SALE_AMT) AS TOT_SALE_AMT 
            FROM tbadmi_info_d2 A
           WHERE 1=1
             AND A.STDR_DATE >= #{startDate} AND A.STDR_DATE <= #{endDate}
             AND CTY_CD = SUBSTR(#{h3Cd},1,4)
              ) TOT_AMT
       , (SELECT COUNT(*) FROM TBREGION WHERE 1=1
                                AND ID LIKE #{h3Cd}||'%'
                                AND RGN_CLSS = 'H4'
       ) AS CNT
      FROM TBREGION
     WHERE 1=1
       AND ID LIKE #{h3Cd}||'%'
       AND RGN_CLSS = 'H4'
     LIMIT 1
  ]]>
  </select>
  
    <!-- 5page [그림2] 월별 매출액 규모변화 -->
  <select id="rpt-trnd-005-002" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
           SELECT STDR_YM AS CD_NM
                , SUM(SALE_AMT) AS TOT_SALE_AMT 
             FROM tbadmi_info_ym A
            WHERE 1=1
              AND A.STDR_YM >= to_char(date_trunc('month',#{endDate}::date - interval '23 months')::date,'YYYYMM')  
              AND A.STDR_YM <= to_char(date_trunc('month',#{endDate}::date + interval '1 months')::date - 1,'YYYYMM') 
              AND CTY_CD like #{h3Cd}||'%'
         GROUP BY STDR_YM
         ORDER BY 1
  ]]>
  </select>
  
  
      <!-- 5page [그림2] 월별 매출액 규모변화 -->
  <select id="rpt-trnd-005-004" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[

     SELECT 
           A.TOT_SALE_AMT - B.TOT_SALE_AMT AS DIFF_AMT
      FROM
          (
           SELECT STDR_YM AS CD_NM
                , SUM(SALE_AMT) AS TOT_SALE_AMT 
             FROM tbadmi_info_ym A
            WHERE 1=1
              AND A.STDR_YM >= to_char(date_trunc('month',#{endDate}::date - interval '11 months')::date,'YYYYMM')  
              AND A.STDR_YM <= to_char(date_trunc('month',#{endDate}::date + interval '1 months')::date - 1,'YYYYMM') 
              AND CTY_CD like #{h3Cd}||'%'
         GROUP BY STDR_YM
         ORDER BY 1 DESC
         LIMIT 1
           ) A
           ,
           (
            SELECT STDR_YM AS CD_NM
                , SUM(SALE_AMT) AS TOT_SALE_AMT 
             FROM tbadmi_info_ym A
            WHERE 1=1
              AND A.STDR_YM >= to_char(date_trunc('month',#{endDate}::date - interval '11 months')::date,'YYYYMM')  
              AND A.STDR_YM <= to_char(date_trunc('month',#{endDate}::date + interval '1 months')::date - 1,'YYYYMM') 
              AND CTY_CD like #{h3Cd}||'%'
         GROUP BY STDR_YM
         ORDER BY 1
         LIMIT 1
           ) B
 
  ]]>
  </select>
  
  <!-- 5page [그림3] 계절별 총 매출액 수준-->
  <select id="rpt-trnd-005-003" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[

          SELECT   (case when substr(STDR_YM,5,2) in ('03','04','05') then ' 봄'
                         when substr(STDR_YM,5,2) in ('06','07','08') then '여름'
                         when substr(STDR_YM,5,2) in ('09','10','11') then '가을' 
                         when substr(STDR_YM,5,2) in ('12','01','02') then '겨울'
                     end
                   ) AS STDR_QT
                  ,MIN(case when substr(STDR_YM,5,2) in ('03','04','05') then substr(STDR_YM,1,4)||'.03~'||substr(STDR_YM,1,4)||'.05'
                            when substr(STDR_YM,5,2) in ('06','07','08') then substr(STDR_YM,1,4)||'.06~'||substr(STDR_YM,1,4)||'.08'
                            when substr(STDR_YM,5,2) in ('09','10','11') then substr(STDR_YM,1,4)||'.09~'||substr(STDR_YM,1,4)||'.11' 
                            when substr(STDR_YM,5,2) in ('12','01','02') then substr(STDR_YM,1,4)||'.12~'||substr(STDR_YM,1,4)::integer+1 ||'.02'
                     end
                 ) AS STDR_YY   
               ,sum(case when substr(STDR_YM,5,2) in ('03','04','05') then SALE_AMT
                         when substr(STDR_YM,5,2) in ('06','07','08') then SALE_AMT
                         when substr(STDR_YM,5,2) in ('09','10','11') then SALE_AMT 
                         when substr(STDR_YM,5,2) in ('12','01','02') then SALE_AMT
                     end
                   ) AS TOT_SALE_AMT 
            FROM tbadmi_info_ym A
           WHERE 1=1
             AND A.STDR_YM >= to_char(date_trunc('month',fn_qt_date3(#{endDate})::date - interval '11 months')::date,'YYYYMM')  
             AND A.STDR_YM <= to_char(date_trunc('month',fn_qt_date3(#{endDate})::date + interval '1 months')::date - 1,'YYYYMM') 
             AND CTY_CD like #{h3Cd}||'%'
           GROUP BY (case when substr(STDR_YM,5,2) in ('03','04','05') then ' 봄'
                         when substr(STDR_YM,5,2) in ('06','07','08') then '여름'
                         when substr(STDR_YM,5,2) in ('09','10','11') then '가을' 
                         when substr(STDR_YM,5,2) in ('12','01','02') then '겨울'
                     end
                    ) 
           ORDER BY TOT_SALE_AMT DESC
  ]]>
  </select>

  <!-- 6page text01 -->
  <select id="rpt-trnd-006-001" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
     SELECT B.NM
            , SUM(SALE_AMT) AS SALE_AMT 
            , ROUND(SUM(SALE_AMT) / (SUM(SUM(SALE_AMT)) OVER())*100,1) RATE
         FROM tbadmi_info_d2 A
            , TBREGION B
        WHERE 1=1
          AND A.ADMI_CD = B.ID
         AND A.STDR_DATE between #{startDate} AND  #{endDate}
           AND CTY_CD = SUBSTR(#{h3Cd},1,4)
          AND B.RGN_CLSS ='H4'
       GROUP BY B.NM
       ORDER BY 2 DESC
       LIMIT 3 
  ]]>
  </select>
  
  <!-- 6page text02 -->
  <select id="rpt-trnd-006-002" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
     SELECT B.NM
            , SUM(SALE_CNT) AS SALE_CNT 
            , ROUND(SUM(SALE_CNT) / (SUM(SUM(SALE_CNT)) OVER())*100,1) RATE
         FROM tbadmi_info_d2 A
            , TBREGION B
        WHERE 1=1
          AND A.ADMI_CD = B.ID
         AND A.STDR_DATE between #{startDate} AND  #{endDate}
          AND CTY_CD = SUBSTR(#{h3Cd},1,4)
          AND B.RGN_CLSS ='H4'
       GROUP BY B.NM
       ORDER BY 2 DESC
       LIMIT 3 
  ]]>
  </select>
  
  <!-- 6page [그림 4] 읍면동별 매출액 분포도 -->
  <select id="rpt-trnd-006-003" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
        SELECT B.NM
             , SUM(SALE_AMT) AS TOT_SALE_AMT 
             , NTILE(5) OVER(ORDER BY SUM(SALE_AMT) DESC) GRD
             , B.ID
          FROM tbadmi_info_d2 A
             , TBREGION B
         WHERE 1=1
           AND A.ADMI_CD = B.ID
          AND A.STDR_DATE between #{startDate} AND  #{endDate}
           AND CTY_CD = SUBSTR(#{h3Cd},1,4)
           AND B.RGN_CLSS ='H4'
        GROUP BY B.NM, B.ID
  ]]>
  </select>
  
  <!-- 6page [그림 5] 읍면동별 거래량 분포도 -->
  <select id="rpt-trnd-006-005" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
       SELECT B.NM
            , SUM(SALE_CNT) AS SALE_CNT 
            , NTILE(5) OVER(ORDER BY SUM(SALE_CNT) DESC) GRD
            , B.ID
         FROM tbadmi_info_d2 A
            , TBREGION B
        WHERE 1=1
          AND A.ADMI_CD = B.ID
         AND A.STDR_DATE between #{startDate} AND  #{endDate}
          AND CTY_CD = SUBSTR(#{h3Cd},1,4)
          AND B.RGN_CLSS ='H4'
       GROUP BY B.NM, B.ID
  ]]>
  </select>
 
  <!-- 7page text01 -->
  <select id="rpt-trnd-007-001" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
     SELECT B.CODE
            , B.CD_NM  
            , ROUND(SUM(SALE_AMT) / (SUM(SUM(SALE_AMT)) OVER()) *100,1) RATE
            , SUM(SALE_AMT) AS SALE_AMT  
         FROM tbcty_upjong_info_d A
            , TBCOMM_CODE B
        WHERE 1=1
          AND A.UPJONG2_CD = B.CODE
          AND B.CD_ID ='UPJONG2_CD'
         AND A.STDR_DATE between #{startDate} AND  #{endDate}
         AND CTY_CD = SUBSTR(#{h3Cd},1,4)
       GROUP BY B.CODE
              , B.CD_NM   
       ORDER BY 3 DESC
       LIMIT 3 
  ]]>
  </select> 
  
  <!-- 7page [그림 6] 업종별 매출액 (단위: 백만원) -->
  <select id="rpt-trnd-007-002" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
       SELECT B.CODE
            , B.CD_NM  
            , SUM(SALE_AMT) AS SALE_AMT  
         FROM tbcty_upjong_info_d A
            , TBCOMM_CODE B
        WHERE 1=1
          AND A.UPJONG2_CD = B.CODE
          AND B.CD_ID ='UPJONG2_CD'
         AND A.STDR_DATE between #{startDate} AND  #{endDate}
          AND CTY_CD = SUBSTR(#{h3Cd},1,4)
       GROUP BY B.CODE
              , B.CD_NM   
       ORDER BY 3 DESC 
       LIMIT 10
  ]]>
  </select> 
  
  <!-- 7page text02 -->
  <select id="rpt-trnd-007-003" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
       SELECT B.CODE
            , B.CD_NM  
            , ROUND(SUM(TOTAL_CNT) / (SUM(SUM(TOTAL_CNT)) OVER()) *100,1) RATE
            , SUM(TOTAL_CNT) AS TOTAL_CNT  
         FROM TBADMI_TIMEZON_INFO_D A
            , TBCOMM_CODE B
        WHERE 1=1
          AND A.TIMEZON_CD = B.CODE
          AND B.CD_ID ='TIMEZON_CD'
         AND A.STDR_DATE between #{startDate} AND  #{endDate}
          AND CTY_CD LIKE #{h3Cd}||'%'
       GROUP BY B.CODE
              , B.CD_NM   
       ORDER BY 3 DESC
       LIMIT 3 
  ]]>
  </select> 
  
  <!-- 7page [그림 7] 시간대별 거래량 변화(단위: %) -->
  <select id="rpt-trnd-007-004" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
       SELECT B.CODE
            , B.CD_NM  
            , ROUND(SUM(TOTAL_CNT) / (SUM(SUM(TOTAL_CNT)) OVER()) *100,1) RATE
            , SUM(TOTAL_CNT) AS TOTAL_CNT  
         FROM TBADMI_TIMEZON_INFO_D A
            , TBCOMM_CODE B
        WHERE 1=1
          AND A.TIMEZON_CD = B.CODE
          AND B.CD_ID ='TIMEZON_CD'
         AND A.STDR_DATE between #{startDate} AND  #{endDate}
          AND CTY_CD LIKE #{h3Cd}||'%'
       GROUP BY B.CODE
              , B.CD_NM   
       ORDER BY 3 DESC
  ]]>
  </select> 

  <!-- 8page text01~03 + [그림 8] 소비인구 비중 -->
  <select id="rpt-trnd-008-001" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
  
       SELECT 
              SUM(CASE WHEN LOC_CLSS_CD = 'R' THEN TOTAL_CNT END) AS H_CNT     
            , SUM(CASE WHEN LOC_CLSS_CD = 'E' THEN TOTAL_CNT END) AS E_CNT
            , SUM(TOTAL_CNT) AS TOTAL_CNT  
            , ROUND(SUM(CASE WHEN LOC_CLSS_CD = 'R' THEN TOTAL_CNT END) / SUM(TOTAL_CNT) * 100 , 1) AS H_RATE
            , ROUND(SUM(CASE WHEN LOC_CLSS_CD = 'E' THEN TOTAL_CNT END) / SUM(TOTAL_CNT) * 100 , 1) AS E_RATE
         FROM TBCTY_INFO_D A
        WHERE 1=1
         AND A.STDR_DATE between #{startDate} AND  #{endDate}
          AND CTY_CD like #{h3Cd}||'%'
  ]]>
  </select> 
    
   <!-- 8page [표 2] 읍면동별 방문객 -->
  <select id="rpt-trnd-008-002" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
        SELECT B.NM
             , SUM(TOTAL_CNT) AS TOTAL_CNT 
             , ROUND(SUM(TOTAL_CNT) / (SUM(SUM(TOTAL_CNT)) OVER())*100,1) RATE
          FROM tbadmi_visit_d A
             , TBREGION B
         WHERE 1=1
           AND A.ADMI_CD = B.ID
           AND A.STDR_DATE between #{startDate} AND  #{endDate}
           AND CTY_CD = SUBSTR(#{h3Cd},1,4)
           AND B.RGN_CLSS ='H4'
        GROUP BY B.NM
        ORDER BY 2 DESC
        LIMIT 5 
 
  ]]>
  </select> 
  
  <!-- 8page text 04 + [그림 9] 읍면동별 방문객수 분포도 -->
  <select id="rpt-trnd-008-003" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
    SELECT 
           B.ID
         , B.NM
           , SUM(TOTAL_CNT) AS TOTAL_CNT 
           , ROUND(SUM(TOTAL_CNT) / (SUM(SUM(TOTAL_CNT)) OVER())*100,1) RATE
        FROM tbadmi_visit_d A
           , TBREGION B
       WHERE 1=1
         AND A.ADMI_CD = B.ID
         AND A.STDR_DATE between #{startDate} AND  #{endDate}
         AND CTY_CD = SUBSTR(#{h3Cd},1,4)
         AND B.RGN_CLSS ='H4'
      GROUP BY B.ID,B.NM
      ORDER BY 2 DESC 
  ]]>
  </select> 
  
  <!-- 9page text01 -->
  <select id="rpt-trnd-009-001" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
    SELECT B.FULL_NAME AS NM
           , SUM(IN_CNT) AS IN_CNT 
           , ROUND(SUM(IN_CNT) / (SUM(SUM(IN_CNT)) OVER())*100,1) RATE
        FROM TBCTY_INFLOW_INFO_D A
           , TBREGION B
       WHERE 1=1
         AND A.IN_CTY_CD = B.ID
         AND A.IN_CTY_CD <> SUBSTR(#{h3Cd},1,4)
         AND A.STDR_DATE between #{startDate} AND  #{endDate}
         AND CTY_CD like #{h3Cd}||'%'
         AND B.RGN_CLSS ='H2'
      GROUP BY B.FULL_NAME
      ORDER BY 2 DESC
      LIMIT 3 
  ]]>
  </select>
  
  
  <!-- 9page text02 -->
  <select id="rpt-trnd-009-005" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
    SELECT   B.FULL_NAME AS NM
           , ROUND(SUM(IN_CNT) / (SUM(SUM(IN_CNT)) OVER())*100,1) RATE
        FROM TBCTY_INFLOW_INFO_D A
           , TBREGION B 
       WHERE 1=1
         AND CTY_CD like #{h3Cd}||'%'
         AND SUBSTR(A.IN_CTY_CD,1,2) = B.ID
         AND A.IN_CTY_CD <> SUBSTR(#{h3Cd},1,4)
         AND B.RGN_CLSS ='H1'
         AND A.STDR_DATE between #{startDate} AND  #{endDate}
      GROUP BY B.FULL_NAME 
      ORDER BY 2 DESC
      LIMIT 3  
  ]]>
  </select>
  
  <!-- 9page table01 1 ~ 10 -->
  <select id="rpt-trnd-009-002" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
      SELECT B.FULL_NAME AS NM
           , SUM(IN_CNT) AS IN_CNT 
           , ROUND(SUM(IN_CNT) / (SUM(SUM(IN_CNT)) OVER())*100,1) RATE
        FROM TBCTY_INFLOW_INFO_D A
           , TBREGION B
       WHERE 1=1
         AND A.IN_CTY_CD = B.ID
         AND A.IN_CTY_CD <> SUBSTR(#{h3Cd},1,4)
        AND A.STDR_DATE between #{startDate} AND  #{endDate}
         AND CTY_CD like #{h3Cd}||'%'
         AND B.RGN_CLSS ='H2'
       GROUP BY B.FULL_NAME
       ORDER BY 2 DESC
       LIMIT 10
    ]]>
  </select>
  
  <!-- 9page table01 11 ~ 20 -->
  <select id="rpt-trnd-009-003" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
      SELECT B.FULL_NAME AS NM
           , SUM(IN_CNT) AS IN_CNT 
           , ROUND(SUM(IN_CNT) / (SUM(SUM(IN_CNT)) OVER())*100,1) RATE
        FROM TBCTY_INFLOW_INFO_D A
           , TBREGION B
       WHERE 1=1
         AND A.IN_CTY_CD = B.ID
         AND A.IN_CTY_CD <> SUBSTR(#{h3Cd},1,4)
        AND A.STDR_DATE between #{startDate} AND  #{endDate}
         AND CTY_CD like #{h3Cd}||'%'
         AND B.RGN_CLSS ='H2'
       GROUP BY B.FULL_NAME
       ORDER BY 2 DESC
       LIMIT 10 offset 10
    ]]>
  </select>
  
  <!-- 9page 주제도 전국 -->
  <select id="rpt-trnd-009-004" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
    SELECT B.ID 
         , B.NM
           , SUM(IN_CNT) AS IN_CNT 
           , ROUND(SUM(IN_CNT) / (SUM(SUM(IN_CNT)) OVER())*100,1) RATE
        FROM TBCTY_INFLOW_INFO_D A
           , TBREGION_S B
       WHERE 1=1
         AND A.IN_CTY_CD = B.ID
         AND A.IN_CTY_CD <> SUBSTR(#{h3Cd},1,4)
         AND A.STDR_DATE between #{startDate} AND  #{endDate}
         AND CTY_CD like #{h3Cd}||'%'
         AND B.RGN_CLSS ='H2'
      GROUP BY B.NM, B.ID
      ORDER BY 2 DESC
  ]]>
  </select>

  <!-- 10page text01 ~ text02 -->
  <select id="rpt-trnd-010-001" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
     SELECT SUM(A.SALE_AMT) AS SALE_AMT  
          , SUM(A.SALE_CNT) AS SALE_CNT  
          , SUM(B.SALE_AMT) AS TOT_SALE_AMT 
          , SUM(B.SALE_CNT) AS TOT_SALE_CNT
          , ROUND(SUM(A.SALE_AMT)/SUM(B.SALE_AMT)*100,1) AS AMT_RATE
          , ROUND(SUM(A.SALE_CNT)/SUM(B.SALE_CNT)*100,1) AS CNT_RATE
       FROM ( SELECT 
                     SUM(A.SALE_AMT) AS SALE_AMT  
                   , SUM(A.SALE_CNT) AS SALE_CNT
                FROM      
                     tbadmi_visit_d A
                WHERE 1=1
                 AND A.STDR_DATE between #{startDate} AND  #{endDate}
                  AND CTY_CD = SUBSTR(#{h3Cd},1,4)
            ) A
          , ( SELECT 
                     SUM(A.SALE_AMT) AS SALE_AMT  
                   , SUM(A.SALE_CNT) AS SALE_CNT
                FROM      
                     tbadmi_info_d2 A
                WHERE 1=1
                 AND A.STDR_DATE between #{startDate} AND  #{endDate}
                  AND CTY_CD = SUBSTR(#{h3Cd},1,4)
             )B  
  ]]>
  </select>
  
  <!-- 10page text03 -->
  <select id="rpt-trnd-010-002" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
     SELECT C.NM
          , A.SALE_AMT AS SALE_AMT 
          , B.SALE_AMT AS TOT_SALE_AMT
          , ROUND(A.SALE_AMT/B.SALE_AMT*100,1) AS RATE
       FROM ( SELECT ADMI_CD
                   , SUM(A.SALE_AMT) AS SALE_AMT  
                   , SUM(A.SALE_CNT) AS SALE_CNT
                FROM      
                     tbadmi_visit_d A
                WHERE 1=1
                 AND A.STDR_DATE between #{startDate} AND  #{endDate}
                  AND CTY_CD = SUBSTR(#{h3Cd},1,4)
                GROUP BY ADMI_CD   
            ) A
          , ( SELECT ADMI_CD
                   , SUM(A.SALE_AMT) AS SALE_AMT  
                   , SUM(A.SALE_CNT) AS SALE_CNT
                FROM      
                     tbadmi_info_d2 A
                WHERE 1=1
                 AND A.STDR_DATE between #{startDate} AND  #{endDate}
                  AND CTY_CD = SUBSTR(#{h3Cd},1,4)
                   GROUP BY ADMI_CD   
             )B
           , TBREGION C  
      WHERE 1=1
        AND A.ADMI_CD = B.ADMI_CD           
          AND A.ADMI_CD = C.ID
        AND C.RGN_CLSS ='H4'
         ORDER BY 4 DESC
         LIMIT 5
  ]]>
  </select>
  
  <!-- 10page [그림 12] 방문객 소비금액(단위: 백만원) + [그림 13] 방문객 거래량(단위: 건) -->
  <select id="rpt-trnd-010-003" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
     SELECT SUM(A.SALE_AMT) AS SALE_AMT  
          , SUM(B.SALE_AMT) AS TOT_SALE_AMT  
          , SUM(A.SALE_CNT) AS SALE_CNT  
          , SUM(B.SALE_CNT) AS TOT_SALE_CNT 
          , ROUND(SUM(A.SALE_AMT) / SUM(B.SALE_AMT) * 100,1) AS RATE1  
          , 100 - ROUND(SUM(A.SALE_AMT) / SUM(B.SALE_AMT) * 100,1) AS RATE2 
          , ROUND(SUM(A.SALE_CNT) / SUM(B.SALE_CNT) * 100,1) AS RATE3  
          , 100 - ROUND(SUM(A.SALE_CNT) / SUM(B.SALE_CNT) * 100,1) AS RATE4 
       FROM ( SELECT 
                     SUM(A.SALE_AMT) AS SALE_AMT  
                   , SUM(A.SALE_CNT) AS SALE_CNT
                FROM      
                     tbadmi_visit_d A
                WHERE 1=1
                 AND A.STDR_DATE between #{startDate} AND  #{endDate}
                  AND CTY_CD = SUBSTR(#{h3Cd},1,4)
            ) A
          , ( SELECT 
                     SUM(A.SALE_AMT) AS SALE_AMT  
                   , SUM(A.SALE_CNT) AS SALE_CNT
                FROM      
                     tbadmi_info_d2 A
                WHERE 1=1
                 AND A.STDR_DATE between #{startDate} AND  #{endDate}
                  AND CTY_CD = SUBSTR(#{h3Cd},1,4)
             )B  
  ]]>
  </select>
  
  <!-- 10page [그림 14] 읍면동별 방문객 소비금액 분포도 -->
  <select id="rpt-trnd-010-004" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
    SELECT B.NM  AS ADMI_NM 
         , SUM(SALE_AMT) AS SALE_AMT 
         , NTILE(5) OVER( ORDER BY SUM(SALE_AMT) DESC) AS GRD
         , B.ID 
      FROM tbadmi_visit_d A
         , TBREGION B 
     WHERE 1=1    
       AND STDR_DATE between #{startDate} AND  #{endDate}
       AND CTY_CD = SUBSTR(#{h3Cd},1,4)
       AND B.RGN_CLSS = 'H4'
       AND A.ADMI_CD = B.ID
    GROUP BY B.NM ,B.ID 
  ]]>
  </select>
  
  <!-- 11page text01 & graph01 -->
  <select id="rpt-trnd-011-001" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
    SELECT B.CODE
         , B.CD_NM	-- 업종명
         ,  SUM(SALE_AMT) AS SALE_AMT -- 텍스트에서 사용될 소비금액   
         ,  SUM(SALE_AMT) AS CHART_SALE_AMT -- [그림 15]에서 사용될 소비금액   
         ,  ROUND(SUM(SALE_AMT) / (SUM(SUM(SALE_AMT)) OVER()) *100,1) RATE -- 비율
      FROM tbcty_visit_upjong_info_d A
         , TBCOMM_CODE B
     WHERE 1=1
       AND A.UPJONG2_CD = B.CODE
       AND B.CD_ID ='UPJONG2_CD'
      AND A.STDR_DATE between #{startDate} AND  #{endDate}
       AND CTY_CD = SUBSTR(#{h3Cd},1,4)
     GROUP BY  B.CODE , B.CD_NM
     ORDER BY 3 DESC
     LIMIT 5  
  ]]>
  </select>
  
  <!-- 11page text02 & graph02 -->
  <select id="rpt-trnd-011-002" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
    SELECT T1.CD_NM  
         , T1.SALE_AMT       
         , ROUND(T1.RATE / T2.RATE*100,1) AS RATE    
      FROM (
          SELECT B.CD_NM
               , SUM(SALE_AMT) SALE_AMT  
               , SUM(SALE_AMT) / (SUM(SUM(SALE_AMT)) OVER()) RATE
            FROM tbcty_visit_upjong_info_d A
               , TBCOMM_CODE B
           WHERE 1=1
             AND A.UPJONG2_CD = B.CODE
             AND B.CD_ID ='UPJONG2_CD'
            AND A.STDR_DATE between #{startDate} AND  #{endDate}
             AND CTY_CD = SUBSTR(#{h3Cd},1,4)
           GROUP BY CD_NM
           ORDER BY 3 DESC 
		   LIMIT 15
        ) T1
        ,
        (
          SELECT B.CD_NM
               , SUM(SALE_AMT) / (SUM(SUM(SALE_AMT)) OVER()) RATE
            FROM tbmega_upjong_info_d A
               , TBCOMM_CODE B
           WHERE 1=1
             AND A.UPJONG2_CD = B.CODE
             AND B.CD_ID ='UPJONG2_CD'
             AND A.STDR_DATE between #{startDate} AND  #{endDate}
             AND A.MEGA_CD LIKE SUBSTR(#{h3Cd},1,2)||'%'
           GROUP BY CD_NM
        ) T2
      WHERE 1=1
        AND T1.CD_NM = T2.CD_NM
      ORDER BY 3 DESC
      LIMIT 5
  ]]>
  </select>
  
   <!-- 11page text03 -->
  <select id="rpt-trnd-011-003" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
	 SELECT CHR
	      , SUM_CNT
	      , ROUND((SUM_CNT /TOTAL_CNT)*100,1) AS RATE
	  FROM      
	      (
		      SELECT (CASE GREATEST(SUM(M_20_CNT), SUM(M_30_CNT), SUM(M_40_CNT), SUM(M_50_CNT), SUM(M_60_CNT)
		                , SUM(F_20_CNT), SUM(F_30_CNT), SUM(F_40_CNT), SUM(F_50_CNT), SUM(F_60_CNT)) 
		                WHEN SUM(M_20_CNT) THEN '20대 남성'
		                WHEN SUM(M_30_CNT) THEN '30대 남성'
		                WHEN SUM(M_40_CNT) THEN '40대 남성' 
		                WHEN SUM(M_50_CNT) THEN '50대 남성' 
		                WHEN SUM(M_60_CNT) THEN '60대 남성' 
		                WHEN SUM(F_20_CNT) THEN '20대 여성' 
		                WHEN SUM(F_30_CNT) THEN '30대 여성' 
		                WHEN SUM(F_40_CNT) THEN '40대 여성' 
		                WHEN SUM(F_50_CNT) THEN '50대 여성' 
		                WHEN SUM(F_60_CNT) THEN '60대 여성' 
		          END) CHR,
		         GREATEST(SUM(M_20_CNT), SUM(M_30_CNT), SUM(M_40_CNT), SUM(M_50_CNT), SUM(M_60_CNT), SUM(F_20_CNT), SUM(F_30_CNT), SUM(F_40_CNT), SUM(F_50_CNT), SUM(F_60_CNT)) AS SUM_CNT
		     FROM TBCTY_VISIT_INFO_D
		     WHERE 1=1
		       AND STDR_DATE between #{startDate} AND #{endDate}
		       AND CTY_CD like #{h3Cd}||'%'
		       AND LOC_CLSS_CD ='E'
	      ) T1
	      ,(
		      SELECT SUM(TOTAL_CNT) AS  TOTAL_CNT
		     FROM TBCTY_VISIT_INFO_D
		     WHERE 1=1
		       AND STDR_DATE between #{startDate} AND #{endDate}
		       AND CTY_CD like #{h3Cd}||'%'
	      )T2
    ]]>
  </select>
   <!-- 11page text04 -->
  <select id="rpt-trnd-011-004" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
  	 SELECT CHR
	      , SUM_CNT
	      , ROUND((SUM_CNT /TOTAL_CNT)*100,1) AS RATE
	  FROM      
	      (
		      SELECT (CASE GREATEST(SUM(M_20_CNT), SUM(M_30_CNT), SUM(M_40_CNT), SUM(M_50_CNT), SUM(M_60_CNT)
		                , SUM(F_20_CNT), SUM(F_30_CNT), SUM(F_40_CNT), SUM(F_50_CNT), SUM(F_60_CNT)) 
		                WHEN SUM(M_20_CNT) THEN '20대 남성'
		                WHEN SUM(M_30_CNT) THEN '30대 남성'
		                WHEN SUM(M_40_CNT) THEN '40대 남성' 
		                WHEN SUM(M_50_CNT) THEN '50대 남성' 
		                WHEN SUM(M_60_CNT) THEN '60대 남성' 
		                WHEN SUM(F_20_CNT) THEN '20대 여성' 
		                WHEN SUM(F_30_CNT) THEN '30대 여성' 
		                WHEN SUM(F_40_CNT) THEN '40대 여성' 
		                WHEN SUM(F_50_CNT) THEN '50대 여성' 
		                WHEN SUM(F_60_CNT) THEN '60대 여성' 
		          END) CHR,
		          GREATEST(SUM(M_20_CNT), SUM(M_30_CNT), SUM(M_40_CNT), SUM(M_50_CNT), SUM(M_60_CNT), SUM(F_20_CNT), SUM(F_30_CNT), SUM(F_40_CNT), SUM(F_50_CNT), SUM(F_60_CNT)) AS SUM_CNT
		     FROM TBCTY_VISIT_INFO_D
		     WHERE 1=1
		       AND STDR_DATE between #{startDate} AND  #{endDate}
		       AND CTY_CD like #{h3Cd}||'%'
		       AND LOC_CLSS_CD = 'R'
	       ) T1
	      ,(
		      SELECT SUM(TOTAL_CNT) AS  TOTAL_CNT
		     FROM TBCTY_VISIT_INFO_D
		     WHERE 1=1
		       AND STDR_DATE between #{startDate} AND #{endDate}
		       AND CTY_CD like #{h3Cd}||'%'
	      )T2
    ]]>
  </select>  
  
   <!-- 11page STACKEDGROUPED CHART  -->
  <select id="rpt-trnd-011-005" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
       SELECT 
              ROUND(SUM(CASE  WHEN LOC_CLSS_CD = 'R' THEN M_20_CNT END)/SUM(total_cnt)*100,1) AS H_M_20_CNT  
            , ROUND(SUM(CASE  WHEN LOC_CLSS_CD = 'R' THEN F_20_CNT END)/SUM(total_cnt)*100,1) AS H_F_20_CNT
            , ROUND(SUM(CASE  WHEN LOC_CLSS_CD ='E' THEN         M_20_CNT         END)/SUM(total_cnt)*100,1) AS E_M_20_CNT
            , ROUND(SUM(CASE  WHEN LOC_CLSS_CD ='E' THEN         F_20_CNT         END)/SUM(total_cnt)*100,1) AS E_F_20_CNT
            , ROUND(SUM(CASE  WHEN LOC_CLSS_CD = 'R' THEN F_30_CNT END)/SUM(total_cnt)*100,1) AS H_F_30_CNT
            , ROUND(SUM(CASE  WHEN LOC_CLSS_CD = 'R' THEN M_30_CNT END)/SUM(total_cnt)*100,1) AS H_M_30_CNT
            , ROUND(SUM(CASE  WHEN LOC_CLSS_CD ='E' THEN         F_30_CNT         END)/SUM(total_cnt)*100,1) AS E_F_30_CNT
            , ROUND(SUM(CASE  WHEN LOC_CLSS_CD ='E' THEN         M_30_CNT         END)/SUM(total_cnt)*100,1) AS E_M_30_CNT
            , ROUND(SUM(CASE  WHEN LOC_CLSS_CD = 'R' THEN F_40_CNT END)/SUM(total_cnt)*100,1) AS H_F_40_CNT
            , ROUND(SUM(CASE  WHEN LOC_CLSS_CD = 'R' THEN M_40_CNT END)/SUM(total_cnt)*100,1) AS H_M_40_CNT
            , ROUND(SUM(CASE  WHEN LOC_CLSS_CD ='E' THEN         F_40_CNT         END)/SUM(total_cnt)*100,1) AS E_F_40_CNT
            , ROUND(SUM(CASE  WHEN LOC_CLSS_CD ='E' THEN         M_40_CNT         END)/SUM(total_cnt)*100,1) AS E_M_40_CNT
            , ROUND(SUM(CASE  WHEN LOC_CLSS_CD = 'R' THEN F_50_CNT END)/SUM(total_cnt)*100,1) AS H_F_50_CNT
            , ROUND(SUM(CASE  WHEN LOC_CLSS_CD = 'R' THEN M_50_CNT END)/SUM(total_cnt)*100,1) AS H_M_50_CNT
            , ROUND(SUM(CASE  WHEN LOC_CLSS_CD ='E' THEN         F_50_CNT         END)/SUM(total_cnt)*100,1) AS E_F_50_CNT
            , ROUND(SUM(CASE  WHEN LOC_CLSS_CD ='E' THEN         M_50_CNT         END)/SUM(total_cnt)*100,1) AS E_M_50_CNT
            , ROUND(SUM(CASE  WHEN LOC_CLSS_CD = 'R' THEN F_60_CNT END)/SUM(total_cnt)*100,1) AS H_F_60_CNT 
            , ROUND(SUM(CASE  WHEN LOC_CLSS_CD = 'R' THEN M_60_CNT END)/SUM(total_cnt)*100,1) AS H_M_60_CNT
            , ROUND(SUM(CASE  WHEN LOC_CLSS_CD ='E' THEN         F_60_CNT         END)/SUM(total_cnt)*100,1) AS E_F_60_CNT  
            , ROUND(SUM(CASE  WHEN LOC_CLSS_CD ='E' THEN         M_60_CNT         END)/SUM(total_cnt)*100,1) AS E_M_60_CNT
         FROM TBCTY_VISIT_INFO_D
        WHERE 1=1
          AND CTY_CD like #{h3Cd}||'%'
          AND STDR_DATE >= #{startDate} 
          AND STDR_DATE <=#{endDate}
    ]]>
  </select>  
    
    
  <!-- 12page text01 -->
  <select id="rpt-trnd-012-001" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[    
      with tmp as (
       SELECT
              (case when loc_clss_cd = 'E' then 'E'
                   when LOC_CLSS_CD = 'R' then 'R' end) as loc_clss_cd
            , round(sum(case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 1 then total_cnt end)
                   /count(distinct case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 1 then stdr_date end)) as mon_cnt
            , round(sum(case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 2 then total_cnt end)
                   /count(distinct case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 2 then stdr_date end)) as tue_cnt
            , round(sum(case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 3 then total_cnt end)
                   /count(distinct case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 3 then stdr_date end)) as wed_cnt
            , round(sum(case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 4 then total_cnt end)
                   /count(distinct case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 4 then stdr_date end)) as thu_cnt
            , round(sum(case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 5 then total_cnt end)
                   /count(distinct case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 5 then stdr_date end)) as fri_cnt
            , round(sum(case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 6 then total_cnt end)
                   /count(distinct case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 6 then stdr_date end)) as sat_cnt
            , round(sum(case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 0 then total_cnt end) 
                   /count(distinct case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 0 then stdr_date end)) as sun_cnt
         FROM TBCTY_INFO_D 
        WHERE 1=1
          AND CTY_CD like #{h3Cd}||'%'
          AND STDR_DATE >= #{startDate} 
          AND STDR_DATE <= #{endDate}
          GROUP BY  (case when loc_clss_cd = 'E' then 'E'
                          when LOC_CLSS_CD = 'R' then 'R'  end) 
       ) 
  select DIV_CD
      , DOW
      , RATE  
    from 
      (
       SELECT  'E'    AS DIV_CD
              ,'월요일' AS DOW
              ,round(coalesce(mon_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
         FROM tmp
         WHERE loc_clss_cd ='E'
       UNION ALL
       SELECT 'E'    AS DIV_CD
              ,'화요일'
            , round(coalesce(tue_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
         FROM tmp
         WHERE loc_clss_cd ='E'
       UNION ALL
       SELECT 'E'    AS DIV_CD
              ,'수요일'
            , round(coalesce(wed_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
         FROM tmp
         WHERE loc_clss_cd ='E'
       UNION ALL
       SELECT 'E'    AS DIV_CD
              ,'목요일'
            , round(coalesce(thu_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
         FROM tmp
         WHERE loc_clss_cd ='E'
       UNION ALL
       SELECT 'E'    AS DIV_CD
              ,'금요일'
            , round(coalesce(fri_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
         FROM tmp
         WHERE loc_clss_cd ='E'
       UNION ALL
       SELECT 'E'    AS DIV_CD
              ,'토요일'
            ,round(coalesce(sat_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
         FROM tmp
         WHERE loc_clss_cd ='E'
       UNION ALL
       SELECT 'E'    AS DIV_CD
              ,'일요일'
            ,round(coalesce(sun_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
         FROM tmp
         WHERE loc_clss_cd ='E'
       UNION ALL 
       SELECT  'R'    AS DIV_CD
              ,'월요일' AS DOW
              ,round(coalesce(mon_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
         FROM tmp
         WHERE loc_clss_cd ='R'
       UNION ALL
       SELECT 'R'    AS DIV_CD
              ,'화요일'
            , round(coalesce(tue_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
         FROM tmp
         WHERE loc_clss_cd ='R'
       UNION ALL
       SELECT 'R'    AS DIV_CD
              ,'수요일'
            , round(coalesce(wed_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
         FROM tmp
         WHERE loc_clss_cd ='R'
       UNION ALL
       SELECT 'R'    AS DIV_CD
              ,'목요일'
            , round(coalesce(thu_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
         FROM tmp
         WHERE loc_clss_cd ='R'
       UNION ALL
       SELECT 'R'    AS DIV_CD
              ,'금요일'
            , round(coalesce(fri_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
         FROM tmp
         WHERE loc_clss_cd ='R'
       UNION ALL
       SELECT 'R'    AS DIV_CD
              ,'토요일'
            ,round(coalesce(sat_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
         FROM tmp
         WHERE loc_clss_cd ='R'
       UNION ALL
       SELECT 'R'    AS DIV_CD
              ,'일요일'
            ,round(coalesce(sun_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp ) * 100,1) as RATE
         FROM tmp
         WHERE loc_clss_cd ='R'
       ) t1
   order by DIV_CD ASC, RATE DESC
  ]]>
  </select>     
     
  <!-- 12page text02 -->
  <select id="rpt-trnd-012-002" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[   
    with tmp as (
       SELECT
              (case when loc_clss_cd = 'E' then 'E'
                    when loc_clss_cd = 'R' then 'R' end) as loc_clss_cd
            , round(sum(case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 1 then total_cnt end)
                   /count(distinct case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 1 then stdr_date end)) as mon_cnt
            , round(sum(case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 2 then total_cnt end)
                   /count(distinct case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 2 then stdr_date end)) as tue_cnt
            , round(sum(case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 3 then total_cnt end)
                   /count(distinct case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 3 then stdr_date end)) as wed_cnt
            , round(sum(case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 4 then total_cnt end)
                   /count(distinct case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 4 then stdr_date end)) as thu_cnt
            , round(sum(case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 5 then total_cnt end)
                   /count(distinct case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 5 then stdr_date end)) as fri_cnt
            , round(sum(case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 6 then total_cnt end)
                   /count(distinct case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 6 then stdr_date end)) as sat_cnt
            , round(sum(case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 0 then total_cnt end) 
                   /count(distinct case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 0 then stdr_date end)) as sun_cnt
         FROM TBCTY_INFO_D 
        WHERE 1=1
          AND CTY_CD like #{h3Cd}||'%'
          AND STDR_DATE >= #{startDate} 
          AND STDR_DATE <= #{endDate}
          GROUP BY  (case when loc_clss_cd = 'E' then 'E'
                          when loc_clss_cd = 'R' then 'R'  end) 
       )
SELECT ABS(T11.RATE - T22.RATE) AS DIFF_RATE,
       T11.DOW
 FROM 
 (SELECT T1.DIV_CD
     , T1.DOW
     , T1.RATE
   FROM 
     (
      SELECT  'E'    AS DIV_CD
             ,'월요일' AS DOW
             ,round(coalesce(mon_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
        FROM tmp
        WHERE loc_clss_cd ='E'
      UNION ALL
      SELECT 'E'    AS DIV_CD
             ,'화요일'
           , round(coalesce(tue_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
        FROM tmp
        WHERE loc_clss_cd ='E'
      UNION ALL
      SELECT 'E'    AS DIV_CD
             ,'수요일'
           , round(coalesce(wed_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
        FROM tmp
        WHERE loc_clss_cd ='E'
      UNION ALL
      SELECT 'E'    AS DIV_CD
             ,'목요일'
           , round(coalesce(thu_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
        FROM tmp
        WHERE loc_clss_cd ='E'
      UNION ALL
      SELECT 'E'    AS DIV_CD
             ,'금요일'
           , round(coalesce(fri_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
        FROM tmp
        WHERE loc_clss_cd ='E'
      UNION ALL
      SELECT 'E'    AS DIV_CD
             ,'토요일'
           ,round(coalesce(sat_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
        FROM tmp
        WHERE loc_clss_cd ='E'
      UNION ALL
      SELECT 'E'    AS DIV_CD
             ,'일요일'
           ,round(coalesce(sun_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
        FROM tmp
        WHERE loc_clss_cd ='E'
      ) T1
      
GROUP BY (T1.DOW, T1.DIV_CD, T1.RATE) ) T11,
(SELECT T2.DIV_CD
     , T2.DOW
     , T2.RATE
   FROM 
      (
      SELECT  'R'    AS DIV_CD
             ,'월요일' AS DOW
             ,round(coalesce(mon_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
        FROM tmp
        WHERE loc_clss_cd ='R'
      UNION ALL
      SELECT 'R'    AS DIV_CD
             ,'화요일'
           , round(coalesce(tue_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
        FROM tmp
        WHERE loc_clss_cd ='R'
      UNION ALL
      SELECT 'R'    AS DIV_CD
             ,'수요일'
           , round(coalesce(wed_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
        FROM tmp
        WHERE loc_clss_cd ='R'
      UNION ALL
      SELECT 'R'    AS DIV_CD
             ,'목요일'
           , round(coalesce(thu_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
        FROM tmp
        WHERE loc_clss_cd ='R'
      UNION ALL
      SELECT 'R'    AS DIV_CD
             ,'금요일'
           , round(coalesce(fri_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
        FROM tmp
        WHERE loc_clss_cd ='R'
      UNION ALL
      SELECT 'R'    AS DIV_CD
             ,'토요일'
           ,round(coalesce(sat_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
        FROM tmp
        WHERE loc_clss_cd ='R'
      UNION ALL
      SELECT 'R'    AS DIV_CD
             ,'일요일'
           ,round(coalesce(sun_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp ) * 100,1) as RATE
        FROM tmp
        WHERE loc_clss_cd ='R'
      ) T2
GROUP BY (T2.DOW, T2.DIV_CD, T2.RATE) ) T22
WHERE T11.DOW = T22.DOW
ORDER BY DIFF_RATE DESC 
  ]]>
  </select>
  
  <!-- 12page text04 -->
  <select id="rpt-trnd-012-004" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
	SELECT T.CD_NM
	     , ABS(T.E_TOTAL_CNT - T.H_TOTAL_CNT) AS GAP
	  FROM (
	         SELECT B.CD_NM   
			  	  , ROUND(SUM(CASE WHEN LOC_CLSS_CD = 'E' THEN  TOTAL_CNT END)/SUM(SUM(TOTAL_CNT)) OVER() * 100,1) AS E_TOTAL_CNT         
			  	  , ROUND(SUM(CASE WHEN LOC_CLSS_CD = 'R' THEN  TOTAL_CNT END)/SUM(SUM(TOTAL_CNT)) OVER() * 100,1) AS H_TOTAL_CNT  
		       FROM TBADMI_TIMEZON_INFO_D A
			 	  , TBCOMM_CODE B  
		      WHERE 1=1
		        AND A.TIMEZON_CD = B.CODE
		        AND A.STDR_DATE between #{startDate} AND  #{endDate}
		        AND CTY_CD like #{h3Cd}||'%'
		        AND CD_ID ='TIMEZON_CD'
		      GROUP BY CD_NM   
	    ) AS T
	ORDER BY 2 DESC
	LIMIT 1
  ]]>
  </select>
  
  <!-- 12page graph04 -->
  <select id="rpt-trnd-012-005" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
     SELECT B.CD_NM   
          , ROUND(SUM(CASE WHEN LOC_CLSS_CD = 'E' THEN  TOTAL_CNT END)/SUM(SUM(TOTAL_CNT)) OVER() * 100,1) AS E_TOTAL_CNT         
          , ROUND(SUM(CASE WHEN LOC_CLSS_CD = 'R' THEN  TOTAL_CNT END)/SUM(SUM(TOTAL_CNT)) OVER() * 100,1) AS H_TOTAL_CNT  
      FROM TBADMI_TIMEZON_INFO_D A
         , TBCOMM_CODE B  
     WHERE 1=1
       AND A.TIMEZON_CD = B.CODE
      AND A.STDR_DATE between #{startDate} AND  #{endDate}
       AND CTY_CD like #{h3Cd}||'%'
       AND CD_ID ='TIMEZON_CD'
    GROUP BY CD_NM   
    ORDER BY 2 DESC
  ]]>
  </select>
  
  
  <!-- 14page 부록 -->
  <select id="rpt-trnd-014-001" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
		WITH TMP AS
		(
		SELECT
		       admi_cd   
		     , loc_clss_cd
		     , SUM(sale_cnt) AS sale_cnt
		     , SUM(sale_amt) AS sale_amt
		 FROM 
		       tbadmi_info_d
		WHERE 1=1
		  AND STDR_DATE between #{startDate} AND  #{endDate}
		  AND CTY_CD like #{h3Cd}||'%'      
		GROUP BY 
		       admi_cd   
		     , loc_clss_cd 
		)
		SELECT (SELECT NM FROM TBREGION WHERE ID = #{h3Cd} AND rgn_clss='H3') AS NM
		     , SUM(SALE_AMT) T_AMT
		     , SUM(CASE WHEN loc_clss_cd ='E' THEN SALE_AMT END) AS E_AMT   
		     , SUM(CASE WHEN LOC_CLSS_CD = 'R' THEN SALE_AMT END) AS H_AMT
		     , SUM(SALE_CNT) T_CNT     
		     , SUM(CASE WHEN loc_clss_cd ='E' THEN SALE_CNT END) AS E_CNT  
		     , SUM(CASE WHEN LOC_CLSS_CD = 'R' THEN SALE_CNT END) AS H_CNT
		     , 100 AS T_RATE
		     , ROUND((SUM(CASE WHEN loc_clss_cd ='E' THEN SALE_CNT END) /SUM(SALE_CNT)) * 100,1) AS E_RATE 
		     , ROUND((SUM(CASE WHEN LOC_CLSS_CD = 'R' THEN SALE_CNT END) /SUM(SALE_CNT)) * 100,1) AS H_RATE
		  FROM TMP
		 UNION ALL
		SELECT NM
		     , SUM(SALE_AMT) T_AMT
		     , SUM(CASE WHEN loc_clss_cd ='E' THEN SALE_AMT END) AS E_AMT   
		     , SUM(CASE WHEN LOC_CLSS_CD = 'R' THEN SALE_AMT END) AS H_AMT
		     , SUM(SALE_CNT) T_CNT     
		     , SUM(CASE WHEN loc_clss_cd ='E' THEN SALE_CNT END) AS E_CNT  
		     , SUM(CASE WHEN LOC_CLSS_CD = 'R' THEN SALE_CNT END) AS H_CNT
		     , 100 AS T_RATE
		     , ROUND((SUM(CASE WHEN loc_clss_cd ='E' THEN SALE_CNT END) /SUM(SALE_CNT)) * 100,1) AS E_RATE 
		     , ROUND((SUM(CASE WHEN LOC_CLSS_CD = 'R' THEN SALE_CNT END) /SUM(SALE_CNT)) * 100,1) AS H_RATE
		  FROM TMP A
		     , TBREGION B
		 WHERE 1=1
		   AND A.ADMI_CD = B.ID
		 GROUP BY NM  
		 ORDER BY T_AMT DESC
  ]]>
  </select>
  
  <!-- 경제트랜드 보고서 끝 /////  -->
  <!-- 이벤트 효과 보고서 시작 -->
  <!-- 분석 범위 common -->
  
  
  	<select id="getAdmiCnt" parameterType="java.util.Map" resultType="java.util.Map">
	<![CDATA[
		SELECT B.ID
		  FROM TBREGION A
		     , TBREGION B 
		 WHERE 1=1 
		   AND A.ID =  #{admiCd} 
		   AND B.ID !=  #{admiCd}
		   AND B.RGN_CLSS ='H4'  
		   AND B.ID like #{ctyCd}||'%'
		   AND ST_Distance(A.SHAPE,B.SHAPE) <500
	]]>  
	</select>
	
	
  <select id="rpt-evntEff-005-001" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
      SELECT SPLIT_PART(FULL_NAME, ' ', 1) MEGA_NM 
         , SPLIT_PART(FULL_NAME, ' ', 2) CTY_NM 
         , SPLIT_PART(FULL_NAME, ' ', 3) ADMI_NM 
         , SUBSTR(#{startDate},1,4)||'년 '||SUBSTR(#{startDate},5,2)||'월 '||SUBSTR(#{startDate},7,2)||'일 '||'~ '||SUBSTR(#{endDate},1,4)||'년 '||SUBSTR(#{endDate},5,2)||'월 '||SUBSTR(#{endDate},7,2)||'일' AS period
         , TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1 as days
         , (SELECT COUNT(*) FROM TBREGION WHERE 1=1 AND ID LIKE #{admiCd}||'%' AND RGN_CLSS = 'H4') AS CNT
      FROM TBREGION
     WHERE 1=1
       AND ID = #{admiCd}
       AND RGN_CLSS = 'H4'
     LIMIT 1
  ]]>
  </select>
  
  <!--  5page text01 : 이벤트 기간의 매출변화(이벤트 기간) -->
  <select id="rpt-evntEff-005-002" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
      SELECT SUBSTR(#{startDate},1,4)||'년 '||SUBSTR(#{startDate},5,2)||'월 '||SUBSTR(#{startDate},7,2)||'일 '||'~ '||SUBSTR(#{endDate},1,4)||'년 '||SUBSTR(#{endDate},5,2)||'월 '||SUBSTR(#{endDate},7,2)||'일' as period
           , TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1 as days
           , SUM(SALE_CNT) AS TOT_SALE_CNT 
           , SUM(SALE_AMT) AS TOT_SALE_AMT 
           , ROUND(SUM(SALE_CNT)/(TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1)) AS AVG_CNT
           , ROUND(SUM(SALE_AMT)/(TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1)) AS AVG_AMT
        FROM TBADMI_UPJONG_INFO_D A
       WHERE 1=1
         AND ADMI_CD = #{admiCd}
         AND SALE_AMT > 0
	     AND SALE_CNT > 0
         AND A.STDR_DATE between #{startDate} AND  #{endDate}         
  ]]>
  </select>
  
  <!--  5page text03 : 평상시 기간의 매출변화 -->
  <select id="rpt-evntEff-005-003" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
    SELECT SUBSTR(#{startDate},1,4)||'년 '||SUBSTR(#{startDate},5,2)||'월 '||SUBSTR(#{startDate},7,2)||'일 '||'~ '||SUBSTR(#{endDate},1,4)||'년 '||SUBSTR(#{endDate},5,2)||'월 '||SUBSTR(#{endDate},7,2)||'일' as period
           , ROUND(CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13
                                 THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0)),1)
                             WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) <7
                                 THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) ),1)     
                             WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
                                 THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0) ),1)
                             ELSE 0 END ) AS TOT_SALE_AMT
           , ROUND(CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13
                                 THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4,1)
                             WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7
                                 THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3,1)     
                             WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
                                 THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0) )/5,1)
                             ELSE 0 END ) AS AVG_AMT
      FROM
          (
             SELECT    SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END)/7 AS LW5  
		             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END)/7 AS LW4  
		             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END)/7 AS LW3 
		             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
		                        AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
		                        THEN SALE_AMT / 7		              
		               ELSE NULL END) AS LW2 
		             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
		                        AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
		                        THEN SALE_AMT/ 7		                        
		                ELSE NULL END) AS LW1 
                 FROM TBADMI_UPJONG_INFO_D A
                WHERE 1=1
                  AND ( A.STDR_DATE BETWEEN TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD')
                        OR A.STDR_DATE BETWEEN TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 14,'YYYYMMDD')
                       )
                  AND ADMI_CD = #{admiCd}
                  AND SALE_AMT > 0
                  AND SALE_CNT > 0                 
          ) t
  ]]>
  </select> 

  <!--  5page text04 : 평상시 대비 이벤트 기간 일평균 증가 비율 -->
  <select id="rpt-evntEff-005-004" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
	 	select (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13 and ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0)) != 0
                     THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) )/4) * 100,1)
                     WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7  and  ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0)) != 0
                     THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0))/3) * 100,1)
                     WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14  AND ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) !=0
                     THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0)+ COALESCE(LW1,0))/5) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0)+ COALESCE(LW1,0) )/5) * 100,1)
                     ELSE 0 
                END ) AS RATE  
		  FROM
		      (
		        SELECT SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END)/7 AS LW5  
		             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END)/7 AS LW4  
		             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END)/7 AS LW3 
		             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
		                        AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
		                        THEN SALE_AMT / 7		              
		               ELSE NULL END) AS LW2 
		             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
		                        AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
		                        THEN SALE_AMT/ 7		                        
		                ELSE NULL END) AS LW1  
		             , COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  #{startDate} AND #{endDate} THEN SALE_AMT END)/ (TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1),0) AS TERM    
		         FROM TBADMI_UPJONG_INFO_D A
		        WHERE 1=1
		          AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') 
		          AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
		          AND ADMI_CD = #{admiCd}
			        AND SALE_AMT > 0
			        AND SALE_CNT > 0			        
		      ) T
		 WHERE 1=1
           AND (COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) > 0    
       
  ]]>
  </select> 
  
  <!-- 5page text05 : 전년도 이벤트 기간 -->
  <select id="rpt-evntEff-005-005" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
      SELECT SUBSTR(#{lastStartDate},1,4)||'년 '||SUBSTR(#{lastStartDate},5,2)||'월 '||SUBSTR(#{lastStartDate},7,2)||'일 '||'~ '||SUBSTR(#{lastEndDate},1,4)||'년 '||SUBSTR(#{lastEndDate},5,2)||'월 '||SUBSTR(#{lastEndDate},7,2)||'일'  as period
           , TO_DATE(#{lastEndDate},'YYYYMMDD') - TO_DATE(#{lastStartDate},'YYYYMMDD') +1 as days
           , SUM(SALE_CNT) AS TOT_SALE_CNT 
           , SUM(SALE_AMT) AS TOT_SALE_AMT 
           , ROUND(SUM(SALE_CNT)/(TO_DATE(#{lastEndDate},'YYYYMMDD') - TO_DATE(#{lastStartDate},'YYYYMMDD') +1 )) AS AVG_CNT
           , ROUND(SUM(SALE_AMT)/(TO_DATE(#{lastEndDate},'YYYYMMDD') - TO_DATE(#{lastStartDate},'YYYYMMDD') +1 )) AS AVG_AMT
        FROM TBADMI_UPJONG_INFO_D A
       WHERE 1=1
         AND ADMI_CD = #{admiCd}
         AND A.STDR_DATE BETWEEN #{lastStartDate} AND #{lastEndDate}           
  ]]>
  </select>
  
  
  <!--  5page text06 : 전년도 대비 이벤트 기간 매출 증가 비율 -->
  <select id="rpt-evntEff-005-006" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
     SELECT ROUND((T1.AVG_AMT - T2.AVG_AMT) / T2.AVG_AMT *100,1) AS RATE
      FROM
          (
            SELECT (SUM(SALE_AMT) / (#{endDate}::date - #{startDate}::date + 1)) AS AVG_AMT
              FROM TBADMI_UPJONG_INFO_D A
             WHERE 1=1
               AND A.STDR_DATE BETWEEN #{startDate} AND #{endDate}
               AND ADMI_CD = #{admiCd}
               AND SALE_AMT > 0
               AND SALE_CNT > 0                 
          ) T1
        ,(
            SELECT (SUM(SALE_AMT) / (#{lastEndDate}::date - #{lastStartDate}::date + 1)) AS AVG_AMT
              FROM TBADMI_UPJONG_INFO_D A
             WHERE 1=1
	           AND A.STDR_DATE BETWEEN #{lastStartDate} AND #{lastEndDate}
               AND ADMI_CD = #{admiCd}
               AND SALE_AMT > 0
               AND SALE_CNT > 0                
         ) T2
       WHERE 1=1
       
  ]]>
  </select> 

  <!--  5page text07 :  이벤트기간 매출 라인 그래프 -->
  <select id="rpt-evntEff-005-007" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
  
      SELECT ROUND(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END) / 7) AS LW3  
           , ROUND(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END) / 7) AS LW2   
           , ROUND(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END) / 7) AS LW1  
           , ROUND(SUM(CASE WHEN STDR_DATE BETWEEN  #{startDate} AND #{endDate} THEN SALE_AMT END)/((TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1))) AS term 
           , ROUND(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
		                        AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
		                    THEN SALE_AMT / 7
	        ELSE NULL END)) AS AW1 
           , ROUND(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
		                        AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
		                    THEN SALE_AMT/ 7
             ELSE NULL END)) AS AW2         
        FROM TBADMI_UPJONG_INFO_D A
       WHERE 1=1
         AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') 
         AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
         AND ADMI_CD = #{admiCd}
         AND SALE_AMT > 0
         AND SALE_CNT > 0         
       
  ]]>
  </select> 
  
  <!--  5page text08 :  전년도 이벤트기간 매출 라인 그래프 -->
  <select id="rpt-evntEff-005-008" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
      SELECT ROUND(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{lastStartDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{lastStartDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END) / 7) AS LW3  
           , ROUND(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{lastStartDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{lastStartDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END) / 7) AS LW2   
           , ROUND(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{lastStartDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{lastStartDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END) / 7) AS LW1  
           , ROUND(SUM(CASE WHEN STDR_DATE BETWEEN  #{lastStartDate} AND #{lastEndDate} THEN SALE_AMT END)/((TO_DATE(#{lastEndDate},'YYYYMMDD') - TO_DATE(#{lastStartDate},'YYYYMMDD') +1))) AS term 

           , ROUND(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{lastEndDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{lastEndDate},'YYYYMMDD') + 7,'YYYYMMDD') 
             AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{lastEndDate},'YYYYMMDD') from tbcom_stdr) >= 7
             THEN SALE_AMT ELSE NULL END) / 7) AS AW1 
           , ROUND(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{lastEndDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{lastEndDate},'YYYYMMDD') + 14,'YYYYMMDD') 
             AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{lastEndDate},'YYYYMMDD') from tbcom_stdr) >= 14 
             THEN SALE_AMT ELSE NULL END) / 7) AS AW2
        FROM TBADMI_UPJONG_INFO_D A
       WHERE 1=1
         AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{lastStartDate},'YYYYMMDD') -21,'YYYYMMDD') 
         AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{lastEndDate},'YYYYMMDD') +14,'YYYYMMDD')
         AND ADMI_CD = #{admiCd}
         AND SALE_AMT > 0
         AND SALE_CNT > 0           
       
  ]]>
  </select>   

  <!-- 전년도 이벤트기간 금액 표 -->
  <select id="rpt-evntEff-005-009" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
      	SELECT (CASE WHEN LW5 IS NULL THEN '-' ELSE CAST(ROUND(LW5/1000000,1) AS TEXT) END) AS LW3    
		     , (CASE WHEN LW4 IS NULL THEN '-' ELSE CAST(ROUND(LW4/1000000,1) AS TEXT) END) AS LW2     
		     , (CASE WHEN LW3 IS NULL THEN '-' ELSE CAST(ROUND(LW3/1000000,1) AS TEXT) END) AS LW1     
		     , (CASE WHEN TERM IS NULL THEN '-' ELSE CAST(ROUND(TERM/1000000,1) AS TEXT) END) AS TERM     
		     , (CASE WHEN LW2 IS NULL THEN '-' ELSE CAST(ROUND(LW2/1000000,1) AS TEXT) END) AS AW1     
		     , (CASE WHEN LW1 IS NULL THEN '-' ELSE CAST(ROUND(LW1/1000000,1) AS TEXT) END) AS AW2    
  		     , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{lastEndDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13
                                 THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4000000,1)
                             WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{lastEndDate},'YYYYMMDD') from tbcom_stdr) <= 0
                                 THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3000000,1)     
                             WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{lastEndDate},'YYYYMMDD') from tbcom_stdr) >= 14
                                 THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0) )/5000000,1)        
                             ELSE 0 END ) AS avg
  		     , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{lastEndDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13 and ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0)) != 0
                     THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) )/4) * 100,1)
                     WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{lastEndDate},'YYYYMMDD') from tbcom_stdr) < 7  and  ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0)) != 0
                     THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0))/3) * 100,1)
                     WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{lastEndDate},'YYYYMMDD') from tbcom_stdr) >= 14  AND ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) !=0
                     THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) * 100,1)
                     ELSE 0 
                END ) AS RATE
		  FROM
		      (   SELECT ROUND(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{lastStartDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{lastStartDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END) / 7) AS LW5  
			           , ROUND(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{lastStartDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{lastStartDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END) / 7) AS LW4   
			           , ROUND(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{lastStartDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{lastStartDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END) / 7) AS LW3  
			           , ROUND(SUM(CASE WHEN STDR_DATE BETWEEN  #{lastStartDate} AND #{lastEndDate} THEN SALE_AMT END)/((TO_DATE(#{lastEndDate},'YYYYMMDD') - TO_DATE(#{lastStartDate},'YYYYMMDD') +1))) AS TERM 
		               , ROUND(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{lastEndDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{lastEndDate},'YYYYMMDD') + 7,'YYYYMMDD') THEN SALE_AMT / 7 END)) AS LW2 
		               , ROUND(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{lastEndDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{lastEndDate},'YYYYMMDD') + 14,'YYYYMMDD') THEN SALE_AMT / 7 END)) AS LW1
			        FROM TBADMI_UPJONG_INFO_D A
			       WHERE 1=1
			         AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{lastStartDate},'YYYYMMDD') -21,'YYYYMMDD') 
			         AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{lastEndDate},'YYYYMMDD') +14,'YYYYMMDD')
			         AND ADMI_CD = #{admiCd}
			         AND SALE_AMT > 0
			         AND SALE_CNT > 0			         
		      ) t 
  ]]>
  </select>
  
  
  <!-- 이벤트기간 대비 금액 표 -->
  <select id="rpt-evntEff-005-010" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
      	SELECT (CASE WHEN LW5 IS NULL THEN '-' ELSE CAST(ROUND(LW5/1000000,1) AS TEXT) END) AS LW3    
		     , (CASE WHEN LW4 IS NULL THEN '-' ELSE CAST(ROUND(LW4/1000000,1) AS TEXT) END) AS LW2     
		     , (CASE WHEN LW3 IS NULL THEN '-' ELSE CAST(ROUND(LW3/1000000,1) AS TEXT) END) AS LW1     
		     , (CASE WHEN TERM IS NULL THEN '-' ELSE CAST(ROUND(TERM/1000000,1) AS TEXT) END) AS TERM     
		     , (CASE WHEN LW2 IS NULL THEN '-' ELSE CAST(ROUND(LW2/1000000,1) AS TEXT) END) AS AW1     
		     , (CASE WHEN LW1 IS NULL THEN '-' ELSE CAST(ROUND(LW1/1000000,1) AS TEXT) END) AS AW2    
  		     , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13
                                 THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4000000,1)
                             WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7
                                 THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3000000,1)     
                             WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
                                 THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0) )/5000000,1)        
                             ELSE 0 END ) AS avg
  		     , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13 and ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0)) != 0
                     THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) )/4) * 100,1)
                     WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7  and  ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0)) != 0
                     THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0))/3) * 100,1)
                     WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14  AND ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) !=0
                     THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) * 100,1)
                     ELSE 0 
                END ) AS RATE                          
		  FROM
		      (
		         SELECT ROUND(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END)/7) AS lw5  
		                 , ROUND(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END)/7) AS lw4  
		                 , ROUND(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END)/7) AS lw3 
		               , ROUND(SUM(CASE 
                                WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
		                        AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
		                        THEN SALE_AMT / 7
		               ELSE NULL END)) AS LW2 
		              , ROUND(SUM(CASE 
                                WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
		                        AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
		                        THEN SALE_AMT/ 7
		                ELSE NULL END)) AS LW1
		                 , COALESCE(ROUND(SUM(CASE WHEN STDR_DATE BETWEEN  #{startDate} AND #{endDate} THEN SALE_AMT END)/ (TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1)),0) AS TERM  
		             FROM TBADMI_UPJONG_INFO_D A
		            WHERE 1=1
		              AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') 
		              AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
		              AND ADMI_CD = #{admiCd}
		              AND SALE_AMT > 0
		              AND SALE_CNT > 0 		              
		      ) t 
  ]]>
  </select>
    
  <!-- 6page text01 업종별 -->
  <select id="rpt-evntEff-006-001" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
       SELECT T.CODE
             , T.CD_NM    
  		     , ROUND(CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13
                     THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0)),1)
                     WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7
                     THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) ),1)     
                     WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
                     THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0) ),1)        
                     ELSE 0 
                END ) AS AVG_AMT
  		     , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13 and ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0)) != 0
                     THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) )/4) * 100,1)
                     WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7 and (COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0)) != 0
                     THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0))/3) * 100,1)
                     WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14  AND ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) !=0
                     THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) * 100,1)
                     ELSE 0 
                END ) AS RATE  
         , ROUND(TERM) AS AMT    
		  FROM
		      (
		        SELECT B.CD_NM
                 , B.CODE  
		             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END)/7 AS LW5  
		             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END)/7 AS LW4  
		             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END)/7 AS LW3 
		             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
		                        AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
		                        THEN SALE_AMT / 7		              
		               ELSE NULL END) AS LW2 
		             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
		                        AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
		                        THEN SALE_AMT/ 7		                        
		                ELSE NULL END) AS LW1  
		             , COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  #{startDate} AND #{endDate} THEN SALE_AMT END)/ (TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1),0) AS TERM  
		         FROM TBADMI_UPJONG_INFO_D A
		            , TBCOMM_CODE B
		        WHERE 1=1
		          AND A.UPJONG2_CD = B.CODE
		          AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') 
		          AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
		          AND ADMI_CD = #{admiCd}
			        AND SALE_AMT > 0
			        AND SALE_CNT > 0
		          AND UPJONG2_CD NOT IN (SELECT DISTINCT UPJONG2_CD
		                                   FROM TBADMI_UPJONG_INFO_D a
		                                   WHERE 1=1
		                                     AND ADMI_CD = #{admiCd}
                                             AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') 
                                             AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
		                                     AND STORE_CNT_FLG = 'N'
		                                )  
			    GROUP BY B.CODE,B.CD_NM			        
		      ) T
		 WHERE 1=1
           AND (COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) > 0 
     ORDER BY 4 DESC
     LIMIT 10
     
  ]]>
  </select>
  
  <!-- 6page text02 -->
  <select id="rpt-evntEff-006-002" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
       SELECT T.CODE
             , T.CD_NM    
  		     , ROUND(CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13
                     THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0)),1)
                     WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7
                     THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) ),1)     
                     WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
                     THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0) ),1)        
                     ELSE 0 
                END ) AS AVG_AMT
  		     , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13 and ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0)) != 0
                     THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) )/4) * 100,1)
                     WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7 and (COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0)) != 0
                     THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0))/3) * 100,1)
                     WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14  AND ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) !=0
                     THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) * 100,1)
                     ELSE 0 
                END ) AS RATE  
         , ROUND(TERM) AS AMT    
		  FROM
		      (
		        SELECT B.CD_NM
                 , B.CODE  
		             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_CNT END)/7 AS LW5  
		             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_CNT END)/7 AS LW4  
		             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_CNT END)/7 AS LW3 
		             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
		                        AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
		                        THEN SALE_CNT / 7		              
		               ELSE NULL END) AS LW2 
		             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
		                        AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
		                        THEN SALE_CNT/ 7		                        
		                ELSE NULL END) AS LW1  
		             , COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  #{startDate} AND #{endDate} THEN SALE_CNT END)/ (TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1),0) AS TERM  
		         FROM TBADMI_UPJONG_INFO_D A
		            , TBCOMM_CODE B
		        WHERE 1=1
		          AND A.UPJONG2_CD = B.CODE
		          AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') 
		          AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
		          AND ADMI_CD = #{admiCd}
			        AND SALE_AMT > 0
			        AND SALE_CNT > 0
		          AND UPJONG2_CD NOT IN (SELECT DISTINCT UPJONG2_CD
		                                   FROM TBADMI_UPJONG_INFO_D a
		                                   WHERE 1=1
		                                     AND ADMI_CD = #{admiCd}
                                             AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') 
                                             AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
		                                     AND STORE_CNT_FLG = 'N'
		                                )  
			    GROUP BY B.CODE,B.CD_NM			        
		      ) T
		 WHERE 1=1
           AND (COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) > 0 
     ORDER BY 4 DESC
     LIMIT 10
  ]]>
  </select>
 
  <!-- 7page   text1 주변지역 매출액 변화  -->
  <select id="rpt-evntEff-007-001" parameterType="java.util.HashMap" resultType="java.util.HashMap">
<![CDATA[     
SELECT T1.NM 
          , ROUND((T1.AVG_AMT - T2.AVG_AMT) / T2.AVG_AMT *100,1) AS RATE
          , ROUND((T1.AVG_AMT - T2.AVG_AMT)) AS AMT
      FROM
          (
          SELECT B.NM
               , (SUM(SALE_AMT) /  (#{endDate}::date - #{startDate}::date  +1 )) AS AVG_AMT     
            FROM TBADMI_UPJONG_INFO_D A
               , TBREGION B
           WHERE 1=1
             AND A.ADMI_CD = B.ID
             AND A.STDR_DATE >= #{startDate}
             AND A.STDR_DATE <= #{endDate}
             AND SALE_AMT > 0
             AND SALE_CNT > 0               
  ]]>              
	<!-- ROW COUNT(1) 3이상 일때 -->
    <if test='admiAround != null and admiAround != ""'>  
		    		 AND ADMI_CD IN (${admiAround})
    </if>
    <!-- ROW COUNT(1) 3 미만 일때 -->
	<if test='admiAround == null or admiAround == ""'> 
		    		 AND ADMI_CD IN (SELECT B.ID  
		    		    			   FROM TBREGION A
		    		    			      , TBREGION B 
		    		    			  WHERE A.ID = #{admiCd} 
		    		    			    AND B.ID like #{ctyCd}||'%'
		    		    			    AND B.ID != #{admiCd}
		    		    			    AND B.RGN_CLSS ='H4' 
		    		    			  ORDER BY ST_Distance(A.SHAPE,B.SHAPE) LIMIT 3)
	</if>  
  <![CDATA[
        GROUP BY B.NM   
          ) T1
        ,(
          SELECT B.NM      
               ,(case
               when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7
                  THEN   (COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END)/7 ,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END)/7,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END)/7,0))/3 
               when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) between  7 and 13 
                then (
               COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END)/7 ,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END)/7,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END)/7,0) 
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
	                       AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
		             THEN SALE_AMT/7		             
		             ELSE 0 END),0) 
		             )/4
		             when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14 
		         then (
               COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END)/7 ,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END)/7,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END)/7,0) 
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
	                       AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
		             THEN SALE_AMT/7		             
		             ELSE 0 END),0) 
		       + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
		                   AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
		                   THEN SALE_AMT/7
		             ELSE 0 END),0)
		             )/5     
		          END    
		         ) as AVG_AMT
            FROM TBADMI_UPJONG_INFO_D A
               , TBREGION B    
           WHERE 1=1
             AND A.ADMI_CD = B.ID
             AND ( A.STDR_DATE BETWEEN TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD')
              OR A.STDR_DATE BETWEEN TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 14,'YYYYMMDD'))
             AND SALE_AMT > 0
             AND SALE_CNT > 0            
  ]]>              
	<!-- ROW COUNT(1) 3이상 일때 -->
    <if test='admiAround != null and admiAround != ""'>  
		    		 AND ADMI_CD IN (${admiAround})
    </if>
    <!-- ROW COUNT(1) 3 미만 일때 -->
	<if test='admiAround == null or admiAround == ""'> 
		    		 AND ADMI_CD IN (SELECT B.ID  
		    		    			   FROM TBREGION A
		    		    			      , TBREGION B 
		    		    			  WHERE A.ID = #{admiCd} 
		    		    			    AND B.ID like #{ctyCd}||'%'
		    		    			    AND B.ID != #{admiCd}
		    		    			    AND B.RGN_CLSS ='H4' 
		    		    			  ORDER BY ST_Distance(A.SHAPE,B.SHAPE) LIMIT 3)
	</if>  
  <![CDATA[
        GROUP BY B.NM   
         ) T2
         WHERE 1=1
           AND T1.NM = T2.NM
    ORDER BY 2 DESC
    LIMIT 3 
  ]]> 
  </select>
     


  <!-- 7page   text2 주변지역 거래량 변화  -->
  <select id="rpt-evntEff-007-002" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
     SELECT T1.NM 
          , ROUND((T1.AVG_CNT - T2.AVG_CNT) / T2.AVG_CNT *100,1) AS RATE
          , ROUND((T1.AVG_CNT - T2.AVG_CNT)) AS CNT
      FROM
          (
          SELECT B.NM
               , (SUM(SALE_CNT) /  (#{endDate}::date - #{startDate}::date +1)) AS AVG_CNT     
            FROM TBADMI_UPJONG_INFO_D A
               , TBREGION B
           WHERE 1=1
             AND A.ADMI_CD = B.ID
             AND A.STDR_DATE >= #{startDate}
             AND A.STDR_DATE <= #{endDate}
             AND SALE_AMT > 0
             AND SALE_CNT > 0  
  ]]>              
	<!-- ROW COUNT(1) 3이상 일때 -->
    <if test='admiAround != null and admiAround != ""'>  
		    		 AND ADMI_CD IN (${admiAround})
    </if>
    <!-- ROW COUNT(1) 3 미만 일때 -->
	<if test='admiAround == null or admiAround == ""'> 
		    		 AND ADMI_CD IN (SELECT B.ID  
		    		    			   FROM TBREGION A
		    		    			      , TBREGION B 
		    		    			  WHERE A.ID = #{admiCd} 
		    		    			    AND B.ID like #{ctyCd}||'%'
		    		    			    AND B.ID != #{admiCd}
		    		    			    AND B.RGN_CLSS ='H4' 
		    		    			  ORDER BY ST_Distance(A.SHAPE,B.SHAPE) LIMIT 3)
	</if> 
  <![CDATA[
        GROUP BY B.NM   
          ) T1
        ,(
          SELECT B.NM      
               ,(case
               when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7
                  THEN   (COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_CNT END)/7 ,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_CNT END)/7,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_CNT END)/7,0))/3 
               when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) between  7 and 13 
                then (
               COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_CNT END)/7 ,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_CNT END)/7,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_CNT END)/7,0) 
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
	                       AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
		             THEN SALE_CNT/7		             
		             ELSE 0 END),0) 
		             )/4
		             when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14 
		         then (
               COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_CNT END)/7 ,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_CNT END)/7,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_CNT END)/7,0) 
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
	                               AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
		                       THEN SALE_CNT/7		             
		                       ELSE 0 END),0) 
		       + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
		                   AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
		                   THEN SALE_CNT/7
		             ELSE 0 END),0)
		             )/5     
		          END    
		         ) as AVG_CNT
            FROM TBADMI_UPJONG_INFO_D A
               , TBREGION B    
           WHERE 1=1
             AND A.ADMI_CD = B.ID
             AND ( A.STDR_DATE BETWEEN TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD')
              OR A.STDR_DATE BETWEEN TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 14,'YYYYMMDD'))
             AND SALE_AMT > 0
             AND SALE_CNT > 0               
  ]]>              
	<!-- ROW COUNT(1) 3이상 일때 -->
    <if test='admiAround != null and admiAround != ""'>  
		    		 AND ADMI_CD IN (${admiAround})
    </if>
    <!-- ROW COUNT(1) 3 미만 일때 -->
	<if test='admiAround == null or admiAround == ""'> 
		    		 AND ADMI_CD IN (SELECT B.ID  
		    		    			   FROM TBREGION A
		    		    			      , TBREGION B 
		    		    			  WHERE A.ID = #{admiCd} 
		    		    			    AND B.ID like #{ctyCd}||'%'
		    		    			    AND B.ID != #{admiCd}
		    		    			    AND B.RGN_CLSS ='H4' 
		    		    			  ORDER BY ST_Distance(A.SHAPE,B.SHAPE) LIMIT 3)
	</if>  
  <![CDATA[
        GROUP BY B.NM   
         ) T2
         WHERE 1=1
           AND T1.NM = T2.NM
    ORDER BY 2 DESC
    LIMIT 3 
  ]]> 
  </select>    

  <!-- 7page   주제도2 주변지역 매출액 변화  -->
  <select id="rpt-evntEff-007-003" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    <![CDATA[
     SELECT T1.NM 
     	  , T1.ID 
          , ROUND((T1.AVG_AMT - T2.AVG_AMT)) AS AMT
          , ROUND((T1.AVG_AMT - T2.AVG_AMT)/T2.AVG_AMT *100 , 1) AS RATE
      FROM
          (
          SELECT B.NM
          	   , B.ID
               , (SUM(SALE_AMT) /  (#{endDate}::date - #{startDate}::date +1)) AS AVG_AMT     
            FROM TBADMI_UPJONG_INFO_D A
               , TBREGION B
           WHERE 1=1
             AND A.ADMI_CD = B.ID
             AND A.STDR_DATE >= #{startDate}
             AND A.STDR_DATE <= #{endDate}
             AND SALE_AMT > 0
             AND SALE_CNT > 0
             AND ADMI_CD = #{admiCd} 
        GROUP BY B.NM   , B.ID
          ) T1
        ,(
          SELECT B.NM      
               , B.ID
               ,(case
               when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7
                  THEN   (COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END)/7 ,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END)/7,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END)/7,0))/3 
               when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) between  7 and 13 
                then (
               COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END)/7 ,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END)/7,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END)/7,0) 
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
	                       AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
		             THEN SALE_AMT/7		             
		             ELSE 0 END),0) 
		             )/4
		             when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14 
		         then (
               COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END)/7 ,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END)/7,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END)/7,0) 
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
	                               AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
		                       THEN SALE_AMT/7 ELSE 0 END),0) 
		       + COALESCE(SUM(CASE  WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
		                            AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
		                        THEN SALE_AMT/7 ELSE 0 END),0)
		             )/5     
		          END    
		         ) as AVG_AMT
            FROM TBADMI_UPJONG_INFO_D A
               , TBREGION B    
           WHERE 1=1
             AND A.ADMI_CD = B.ID
             AND ( A.STDR_DATE BETWEEN TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD')
              OR A.STDR_DATE BETWEEN TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 14,'YYYYMMDD'))
             AND SALE_AMT > 0
             AND SALE_CNT > 0
             AND ADMI_CD = #{admiCd}             
         GROUP BY B.NM   , B.ID
         ) T2
         WHERE 1=1
           AND T1.NM = T2.NM
  ]]>            
  UNION ALL
  <![CDATA[
     SELECT T1.NM 
          , T1.ID 
          , ROUND((T1.AVG_AMT - T2.AVG_AMT)) AS AMT
          , ROUND((T1.AVG_AMT - T2.AVG_AMT)/T2.AVG_AMT *100 , 1) AS AMT
      FROM
          (
          SELECT B.NM
               , B.ID
               , (SUM(SALE_AMT) /  (#{endDate}::date - #{startDate}::date +1)) AS AVG_AMT     
            FROM TBADMI_UPJONG_INFO_D A
               , TBREGION B
           WHERE 1=1
             AND A.ADMI_CD = B.ID
             AND A.STDR_DATE >= #{startDate}
             AND A.STDR_DATE <= #{endDate}
             AND SALE_AMT > 0
             AND SALE_CNT > 0              
  ]]>              
	<!-- ROW COUNT(1) 3이상 일때 -->
    <if test='admiAround != null and admiAround != ""'>  
		    		 AND ADMI_CD IN (${admiAround})
    </if>
    <!-- ROW COUNT(1) 3 미만 일때 -->
	<if test='admiAround == null or admiAround == ""'> 
		    		 AND ADMI_CD IN (SELECT B.ID  
		    		    			   FROM TBREGION A
		    		    			      , TBREGION B 
		    		    			  WHERE A.ID = #{admiCd} 
		    		    			    AND B.ID like #{ctyCd}||'%'
		    		    			    AND B.ID != #{admiCd}
		    		    			    AND B.RGN_CLSS ='H4' 
		    		    			  ORDER BY ST_Distance(A.SHAPE,B.SHAPE) LIMIT 3)
	</if> 
  <![CDATA[
        GROUP BY B.NM   , B.ID
          ) T1
        ,(
          SELECT B.NM  
               , B.ID    
               ,(case
               when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7
                  THEN   (COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END)/7 ,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END)/7,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END)/7,0))/3 
               when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) between  7 and 13 
                then (
               COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END)/7 ,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END)/7,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END)/7,0) 
	           + COALESCE(SUM(CASE  
                           WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
	                       AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
		             THEN SALE_AMT/7		             
		             ELSE 0 END),0) 
		             )/4
		             when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14 
		         then (
               COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END)/7 ,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END)/7,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END)/7,0) 
	           + COALESCE(SUM(CASE  
                           WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
	                       AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
		             THEN SALE_AMT/7		             
		             ELSE 0 END),0) 
		       + COALESCE(SUM(CASE 
                           WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
		                   AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
		                   THEN SALE_AMT/7
		             ELSE 0 END),0)
		             )/5     
		          END    
		         ) as AVG_AMT
            FROM TBADMI_UPJONG_INFO_D A
               , TBREGION B    
           WHERE 1=1
             AND A.ADMI_CD = B.ID
             AND ( A.STDR_DATE BETWEEN TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD')
              OR A.STDR_DATE BETWEEN TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 14,'YYYYMMDD'))
             AND SALE_AMT > 0
             AND SALE_CNT > 0              
  ]]>              
	<!-- ROW COUNT(1) 3이상 일때 -->
    <if test='admiAround != null and admiAround != ""'>  
		    		 AND ADMI_CD IN (${admiAround})
    </if>
    <!-- ROW COUNT(1) 3 미만 일때 -->
	<if test='admiAround == null or admiAround == ""'> 
		    		 AND ADMI_CD IN (SELECT B.ID  
		    		    			   FROM TBREGION A
		    		    			      , TBREGION B 
		    		    			  WHERE A.ID = #{admiCd} 
		    		    			    AND B.ID like #{ctyCd}||'%'
		    		    			    AND B.ID != #{admiCd}
		    		    			    AND B.RGN_CLSS ='H4' 
		    		    			  ORDER BY ST_Distance(A.SHAPE,B.SHAPE) LIMIT 3)
	</if> 
  <![CDATA[
        GROUP BY B.NM   , B.ID
         ) T2
         WHERE 1=1
           AND T1.NM = T2.NM
    ORDER BY 2 DESC
  ]]> 
  </select> 


  <!-- 7page   주제도2 주변지역 거래량 변화  -->
  <select id="rpt-evntEff-007-004" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    <![CDATA[
     SELECT T1.NM 
      	  , T1.ID
          , ROUND((T1.AVG_CNT - T2.AVG_CNT) / T2.AVG_CNT *100,1) AS RATE
          , ROUND((T1.AVG_CNT - T2.AVG_CNT)) AS CNT
      FROM
          (
          SELECT B.NM
               , B.ID
               , (SUM(SALE_CNT) /  (#{endDate}::date - #{startDate}::date +1)) AS AVG_CNT    
            FROM TBADMI_UPJONG_INFO_D A
               , TBREGION B
           WHERE 1=1
             AND A.ADMI_CD = B.ID
             AND A.STDR_DATE >= #{startDate}
             AND A.STDR_DATE <= #{endDate}
             AND SALE_AMT > 0
             AND SALE_CNT > 0
             AND ADMI_CD = #{admiCd}             
        GROUP BY B.NM   , B.ID
          ) T1
        ,(
          SELECT B.NM   
               , B.ID   
               ,(case
               when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7
                  THEN   (COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_CNT END)/7 ,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_CNT END)/7,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_CNT END)/7,0))/3 
               when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) between  7 and 13 
                then (
               COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_CNT END)/7 ,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_CNT END)/7,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_CNT END)/7,0) 
	           + COALESCE(SUM(CASE  
                           WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
	                       AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
		             THEN SALE_CNT/7		             
		             ELSE 0 END),0) 
		             )/4
		             when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14 
		         then (
               COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_CNT END)/7 ,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_CNT END)/7,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_CNT END)/7,0) 
	           + COALESCE(SUM(CASE  
                           WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
	                       AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
		             THEN SALE_CNT/7		             
		             ELSE 0 END),0) 
		       + COALESCE(SUM(CASE 
                           WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
		                   AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
		                   THEN SALE_CNT/7
		             ELSE 0 END),0)
		             )/5     
		          END    
		         ) as AVG_CNT
            FROM TBADMI_UPJONG_INFO_D A
               , TBREGION B    
           WHERE 1=1
             AND A.ADMI_CD = B.ID
             AND ( A.STDR_DATE BETWEEN TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD')
              OR A.STDR_DATE BETWEEN TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 14,'YYYYMMDD'))
             AND SALE_AMT > 0
             AND SALE_CNT > 0
             AND ADMI_CD = #{admiCd}            
         GROUP BY B.NM   , B.ID
         ) T2
         WHERE 1=1
           AND T1.NM = T2.NM
  ]]>            
  UNION ALL
    
  <![CDATA[
     SELECT T1.NM 
          , T1.ID
          , ROUND((T1.AVG_CNT - T2.AVG_CNT) / T2.AVG_CNT *100,1) AS RATE
          , ROUND((T1.AVG_CNT - T2.AVG_CNT)) AS CNT
      FROM
          (
          SELECT B.NM
               , B.ID
               , (SUM(SALE_CNT) /  (#{endDate}::date - #{startDate}::date +1)) AS AVG_CNT     
            FROM TBADMI_UPJONG_INFO_D A
               , TBREGION B
           WHERE 1=1
             AND A.ADMI_CD = B.ID
             AND A.STDR_DATE >= #{startDate}
             AND A.STDR_DATE <= #{endDate}
             AND SALE_AMT > 0
             AND SALE_CNT > 0               
  ]]>              
	<!-- ROW COUNT(1) 3이상 일때 -->
    <if test='admiAround != null and admiAround != ""'>  
		    		 AND ADMI_CD IN (${admiAround})
    </if>
    <!-- ROW COUNT(1) 3 미만 일때 -->
	<if test='admiAround == null or admiAround == ""'> 
		    		 AND ADMI_CD IN (SELECT B.ID  
		    		    			   FROM TBREGION A
		    		    			      , TBREGION B 
		    		    			  WHERE A.ID = #{admiCd} 
		    		    			    AND B.ID like #{ctyCd}||'%'
		    		    			    AND B.ID != #{admiCd}
		    		    			    AND B.RGN_CLSS ='H4' 
		    		    			  ORDER BY ST_Distance(A.SHAPE,B.SHAPE) LIMIT 3)
	</if> 
  <![CDATA[
        GROUP BY B.NM   , B.ID
          ) T1
        ,(
          SELECT B.NM   
               , B.ID   
               ,(case
               when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7
                  THEN   (COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_CNT END)/7 ,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_CNT END)/7,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_CNT END)/7,0))/3 
               when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) between  7 and 13 
                then (
               COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_CNT END)/7 ,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_CNT END)/7,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_CNT END)/7,0) 
	           + COALESCE(SUM(CASE  
                           WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
	                       AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
		             THEN SALE_CNT/7		             
		             ELSE 0 END),0) 
		             )/4
		             when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14 
		         then (
               COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_CNT END)/7 ,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_CNT END)/7,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_CNT END)/7,0) 
	           + COALESCE(SUM(CASE  
                           WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
	                       AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
		             THEN SALE_CNT/7		             
		             ELSE 0 END),0) 
		       + COALESCE(SUM(CASE 
                           WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
		                   AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
		                   THEN SALE_CNT/7
		             ELSE 0 END),0)
		             )/5     
		          END    
		         ) as AVG_CNT
            FROM TBADMI_UPJONG_INFO_D A
               , TBREGION B    
           WHERE 1=1
             AND A.ADMI_CD = B.ID
             AND ( A.STDR_DATE BETWEEN TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD')
              OR A.STDR_DATE BETWEEN TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 14,'YYYYMMDD'))
             AND SALE_AMT > 0
             AND SALE_CNT > 0             
  ]]>              
	<!-- ROW COUNT(1) 3이상 일때 -->
    <if test='admiAround != null and admiAround != ""'>  
		    		 AND ADMI_CD IN (${admiAround})
    </if>
    <!-- ROW COUNT(1) 3 미만 일때 -->
	<if test='admiAround == null or admiAround == ""'> 
		    		 AND ADMI_CD IN (SELECT B.ID  
		    		    			   FROM TBREGION A
		    		    			      , TBREGION B 
		    		    			  WHERE A.ID = #{admiCd} 
		    		    			    AND B.ID like #{ctyCd}||'%'
		    		    			    AND B.ID != #{admiCd}
		    		    			    AND B.RGN_CLSS ='H4' 
		    		    			  ORDER BY ST_Distance(A.SHAPE,B.SHAPE) LIMIT 3)
	</if>  
  <![CDATA[
        GROUP BY B.NM   , B.ID
         ) T2
         WHERE 1=1
           AND T1.NM = T2.NM
    ORDER BY 2 DESC

  ]]> 
  </select>
  
  <!-- 9page를 위한 집계 테이블 추가 해야 됨 -->
  <!-- 9page TEXT-01 -->
  <select id="rpt-evntEff-009-001" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
          SELECT SUM(TOTAL_CNT) AS TOTAL_CNT
            FROM TBADMI_UPJONG_INFO_D A
           WHERE 1=1
             AND A.STDR_DATE BETWEEN #{startDate} AND #{endDate}
             AND SALE_AMT > 0
             AND SALE_CNT > 0
             AND ADMI_CD  =#{admiCd}
		               
  ]]>
  </select>

  <!-- 9page TEXT-02 -->
  <select id="rpt-evntEff-009-002" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
          SELECT (CASE WHEN b.CODE ='E' THEN 'E'
                      WHEN b.CODE = 'R' THEN 'R'
                 END ) AS code      
                ,  COALESCE(SUM(TOTAL_CNT),0) AS TOTAL_CNT
                , COALESCE(ROUND(SUM(TOTAL_CNT) / (SUM(SUM(TOTAL_CNT)) OVER()) * 100, 1),0) RATE
            FROM  tbcomm_code B
                left outer join tbadmi_info_d4 A
          on 1=1
             and b.cd_id ='LOC_CLSS_CD'
             and b.CODE = a.LOC_CLSS_CD
             AND A.STDR_DATE BETWEEN #{startDate} AND #{endDate}
             AND SALE_AMT > 0
             AND SALE_CNT > 0
             AND ADMI_CD  =#{admiCd}
                      
             where  b.CODE  in ('E', 'R')
         GROUP BY (CASE WHEN CODE ='E' THEN 'E'
                      WHEN CODE = 'R' THEN 'R'
                 END )   
         ORDER BY code
  ]]>
  </select>
 
  <!-- 9page TEXT-03 -->
  <select id="rpt-evntEff-009-003" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[  
	         SELECT T1.NM 
			 	  , T1.ID
			      , ROUND((T1.AVG_TCNT - T2.AVG_TCNT) / T2.AVG_TCNT *100,1) AS RATE
			      , ROUND(T1.AVG_TCNT) AS AVG_TCNT
			  FROM
			      (
			      SELECT B.NM  
			      	   , B.ID   
			           , (SUM(total_cnt) / (#{endDate}::date - #{startDate}::date + 1)) AS AVG_TCNT
			        FROM tbadmi_visit_upjong_info_d A
			           , TBREGION B    
			       WHERE 1=1
			         AND A.ADMI_CD = B.ID
			         AND A.STDR_DATE BETWEEN #{startDate} AND #{endDate}
 			         AND SALE_AMT > 0
			         AND SALE_CNT > 0
                     AND ADMI_CD = #{admiCd}
			    GROUP BY B.NM , B.ID 
			      ) T1
			    ,(
			      SELECT B.NM      
                  ,(case
               when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7
                  THEN   (COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN total_cnt END)/7 ,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN total_cnt END)/7,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN total_cnt END)/7,0))/3 
               when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) between  7 and 13 
                then (
               COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN total_cnt END)/7 ,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN total_cnt END)/7,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN total_cnt END)/7,0) 
	           + COALESCE(SUM(CASE  
                           WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
	                       AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
		             THEN total_cnt/7		             
		             ELSE 0 END),0) 
		             )/4
		             when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
		         then (
               COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN total_cnt END)/7 ,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN total_cnt END)/7,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN total_cnt END)/7,0) 
	           + COALESCE(SUM(CASE  
                           WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
	                       AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
		             THEN total_cnt/7		             
		             ELSE 0 END),0) 
		       + COALESCE(SUM(CASE 
                           WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
		                   AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
		                   THEN total_cnt/7
		             ELSE 0 END),0)
		             )/5     
		          END    
		         ) as AVG_TCNT
			        FROM tbadmi_visit_upjong_info_d A
			           , TBREGION B    
			       WHERE 1=1
			         AND A.ADMI_CD = B.ID
			         AND ( A.STDR_DATE BETWEEN TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD')
			         	OR A.STDR_DATE BETWEEN TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 14,'YYYYMMDD'))
 			         AND SALE_AMT > 0
			         AND SALE_CNT > 0
	                 AND ADMI_CD = #{admiCd}	                 
			    GROUP BY B.NM   
			     ) T2
			     WHERE 1=1
			       AND T1.NM = T2.NM
		    
  ]]>
  </select>	  
  
  
  <!-- 9page TEXT-04 -->
  <select id="rpt-evntEff-009-004" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	<![CDATA[	    
	   	     SELECT T1.NM 
			 	  , T1.ID
			      , ROUND((T1.AVG_TCNT - T2.AVG_TCNT) / T2.AVG_TCNT *100,1) AS RATE
			      , ROUND(T1.AVG_TCNT) AS AVG_TCNT
			      , ROUND(T1.TOTAL_TCNT) AS TOTAL_TCNT
			  FROM
			      (
			      SELECT B.NM  
			      	   , B.ID   
			           , (SUM(total_cnt) / (#{endDate}::date - #{startDate}::date + 1)) AS AVG_TCNT
			           , SUM(total_cnt) AS TOTAL_TCNT
			        FROM tbadmi_visit_upjong_info_d A
			           , TBREGION B    
			       WHERE 1=1
			         AND A.ADMI_CD = B.ID
			         AND A.STDR_DATE BETWEEN #{startDate} AND #{endDate}
 			         AND SALE_AMT > 0
			         AND SALE_CNT > 0
	]]>
	<!-- ROW COUNT(1) 3이상 일때 -->
    <if test='admiAround != null and admiAround != ""'>   
    <![CDATA[		       
		    		 AND ADMI_CD IN (${admiAround})
	]]>			 
    </if>
    <!-- ROW COUNT(1) 3 미만 일때 -->
	<if test='admiAround == null or admiAround == ""'> 
		    		 AND ADMI_CD IN (SELECT B.ID  
		    		    			   FROM TBREGION A
		    		    			      , TBREGION B 
		    		    			  WHERE A.ID = #{admiCd} 
		    		    			    AND B.ID like #{ctyCd}||'%'
		    		    			    AND B.ID != #{admiCd}
		    		    			    AND B.RGN_CLSS ='H4' 
		    		    			  ORDER BY ST_Distance(A.SHAPE,B.SHAPE) LIMIT 3)
	</if>   
    <![CDATA[
			    GROUP BY B.NM , B.ID 
			      ) T1
			    , (
			      SELECT B.NM      
                       ,(case
				               when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7
				               THEN (    COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN total_cnt END)/7 ,0)  
							           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN total_cnt END)/7,0)  
							           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN total_cnt END)/7,0))/3 
				               when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) between  7 and 13 
				               then (
						                 COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN total_cnt END)/7 ,0)  
							           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN total_cnt END)/7,0)  
							           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN total_cnt END)/7,0) 
							           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
							                       AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
								             	   THEN total_cnt/7		             
								             	   ELSE 0 END),0)
								    )/4
						       when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14 
						       then (    COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN total_cnt END)/7 ,0)  
							           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN total_cnt END)/7,0)  
							           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN total_cnt END)/7,0) 
							           + COALESCE(SUM(CASE  
						                           WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
							                       AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
								             THEN total_cnt/7		             
								             ELSE 0 END),0) 
						       		   + COALESCE(SUM(CASE 
						                           WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
								                   AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
								                   THEN total_cnt/7
						             			   ELSE 0 END),0)
						             )/5     
				         END ) as AVG_TCNT
			        FROM tbadmi_visit_upjong_info_d A
			           , TBREGION B    
			       WHERE 1=1
			         AND A.ADMI_CD = B.ID
			         AND ( A.STDR_DATE BETWEEN TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD')
			         	   OR A.STDR_DATE BETWEEN TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 14,'YYYYMMDD'))
 			         AND SALE_AMT > 0
			         AND SALE_CNT > 0 			         
	]]>
	<!-- ROW COUNT(1) 3이상 일때 -->
    <if test='admiAround != null and admiAround != ""'>   
    <![CDATA[		       
		    		 AND ADMI_CD IN (${admiAround})
	]]>			 
    </if>
    <!-- ROW COUNT(1) 3 미만 일때 -->
	<if test='admiAround == null or admiAround == ""'> 
		    		 AND ADMI_CD IN (SELECT B.ID  
		    		    			   FROM TBREGION A
		    		    			      , TBREGION B 
		    		    			  WHERE A.ID = #{admiCd} 
		    		    			    AND B.ID like #{ctyCd}||'%'
		    		    			    AND B.ID != #{admiCd}
		    		    			    AND B.RGN_CLSS ='H4' 
		    		    			  ORDER BY ST_Distance(A.SHAPE,B.SHAPE) LIMIT 3)
	</if>
    <![CDATA[
			    GROUP BY B.NM   
			     ) T2
			     WHERE 1=1
			       AND T1.NM = T2.NM
			       ORDER BY 3 DESC
	]]>
  </select>

  <!-- 9page 주제도 -->
  <select id="rpt-evntEff-009-006" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	<![CDATA[

	    	      SELECT T1.NM 
			 	  , T1.ID
			      , ROUND((T1.AVG_TCNT - T2.AVG_TCNT) / T2.AVG_TCNT *100,1) AS RATE
			      , T1.AVG_TCNT
			      , T1.TOTAL_TCNT
			  FROM
			      (
			      SELECT B.NM  
			      	   , B.ID   
			           , (SUM(total_cnt) / (#{endDate}::date - #{startDate}::date + 1)) AS AVG_TCNT
			           , SUM(total_cnt) AS TOTAL_TCNT
			        FROM tbadmi_visit_upjong_info_d A
			           , TBREGION B    
			       WHERE 1=1
			         AND A.ADMI_CD = B.ID
			         AND A.STDR_DATE BETWEEN #{startDate} AND #{endDate}
 			         AND SALE_AMT > 0
			         AND SALE_CNT > 0
                     AND ADMI_CD = #{admiCd}                      
			    GROUP BY B.NM , B.ID 
			      ) T1
			    ,(
			      SELECT B.NM      
               ,(case
               when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7
                  THEN   (COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN total_cnt END)/7 ,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN total_cnt END)/7,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN total_cnt END)/7,0))/3 
               when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) between  7 and 13 
                then (
               COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN total_cnt END)/7 ,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN total_cnt END)/7,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN total_cnt END)/7,0) 
	           + COALESCE(SUM(CASE  
                           WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
	                       AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
		             THEN total_cnt/7		             
		             ELSE 0 END),0) 
		             )/4
		             when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14 
		         then (
               COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN total_cnt END)/7 ,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN total_cnt END)/7,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN total_cnt END)/7,0) 
	           + COALESCE(SUM(CASE  
                           WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
	                       AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
		             THEN total_cnt/7		             
		             ELSE 0 END),0) 
		       + COALESCE(SUM(CASE 
                           WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
		                   AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
		                   THEN total_cnt/7
		             ELSE 0 END),0)
		             )/5     
		          END    
		         ) as AVG_TCNT
			        FROM tbadmi_visit_upjong_info_d A
			           , TBREGION B    
			       WHERE 1=1
			         AND A.ADMI_CD = B.ID
			         AND ( A.STDR_DATE BETWEEN TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD')
			         	OR A.STDR_DATE BETWEEN TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 14,'YYYYMMDD'))
 			         AND SALE_AMT > 0
			         AND SALE_CNT > 0
	                 AND ADMI_CD = #{admiCd}               
			    GROUP BY B.NM   
			     ) T2
			     WHERE 1=1
			       AND T1.NM = T2.NM

			       UNION ALL	
     
	    	      SELECT T1.NM 
			 	  , T1.ID
			      , ROUND((T1.AVG_TCNT - T2.AVG_TCNT) / T2.AVG_TCNT *100,1) AS RATE
			      , T1.AVG_TCNT
			      , T1.TOTAL_TCNT
			  FROM
			      (
			      SELECT B.NM  
			      	   , B.ID   
			           , (SUM(total_cnt) / (#{endDate}::date - #{startDate}::date + 1)) AS AVG_TCNT
			           , SUM(total_cnt) AS TOTAL_TCNT
			        FROM tbadmi_visit_upjong_info_d A
			           , TBREGION B    
			       WHERE 1=1
			         AND A.ADMI_CD = B.ID
			         AND A.STDR_DATE BETWEEN #{startDate} AND #{endDate}
 			         AND SALE_AMT > 0
			         AND SALE_CNT > 0		         
	]]>
	<!-- ROW COUNT(1) 3이상 일때 -->
    <if test='admiAround != null and admiAround != ""'>   
    <![CDATA[		       
		    		 AND ADMI_CD IN (${admiAround})
	]]>			 
    </if>
    <!-- ROW COUNT(1) 3 미만 일때 -->
	<if test='admiAround == null or admiAround == ""'> 
		    		 AND ADMI_CD IN (SELECT B.ID  
		    		    			   FROM TBREGION A
		    		    			      , TBREGION B 
		    		    			  WHERE A.ID = #{admiCd} 
		    		    			    AND B.ID like #{ctyCd}||'%'
		    		    			    AND B.ID != #{admiCd}
		    		    			    AND B.RGN_CLSS ='H4' 
		    		    			  ORDER BY ST_Distance(A.SHAPE,B.SHAPE) LIMIT 3)
	</if>   
    <![CDATA[
			    GROUP BY B.NM , B.ID 
			      ) T1
			    ,(
			      SELECT B.NM      
               ,(case
               when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7
                  THEN   (COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN total_cnt END)/7 ,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN total_cnt END)/7,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN total_cnt END)/7,0))/3 
               when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) between  7 and 13 
                then (
               COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN total_cnt END)/7 ,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN total_cnt END)/7,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN total_cnt END)/7,0) 
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
	                       AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
		             THEN total_cnt/7		             
		             ELSE 0 END),0) 
		             )/4
		             when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14 
		         then (
               COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN total_cnt END)/7 ,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN total_cnt END)/7,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN total_cnt END)/7,0) 
	           + COALESCE(SUM(CASE  
                           WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
	                       AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
		             THEN total_cnt/7		             
		             ELSE 0 END),0) 
		       + COALESCE(SUM(CASE 
                           WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
		                   AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
		                   THEN total_cnt/7
		             ELSE 0 END),0)
		             )/5     
		          END    
		         ) as AVG_TCNT
			        FROM tbadmi_visit_upjong_info_d A
			           , TBREGION B    
			       WHERE 1=1
			         AND A.ADMI_CD = B.ID
			         AND ( A.STDR_DATE BETWEEN TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD')
			         	OR A.STDR_DATE BETWEEN TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 14,'YYYYMMDD'))
 			         AND SALE_AMT > 0
			         AND SALE_CNT > 0		         
	]]>
	<!-- ROW COUNT(1) 3이상 일때 -->
    <if test='admiAround != null and admiAround != ""'>   
    <![CDATA[		       
		    		 AND ADMI_CD IN (${admiAround})
	]]>			 
    </if>
    <!-- ROW COUNT(1) 3 미만 일때 -->
	<if test='admiAround == null or admiAround == ""'> 
		    		 AND ADMI_CD IN (SELECT B.ID  
		    		    			   FROM TBREGION A
		    		    			      , TBREGION B 
		    		    			  WHERE A.ID = #{admiCd} 
		    		    			    AND B.ID like #{ctyCd}||'%'
		    		    			    AND B.ID != #{admiCd}
		    		    			    AND B.RGN_CLSS ='H4' 
		    		    			  ORDER BY ST_Distance(A.SHAPE,B.SHAPE) LIMIT 3)
	</if>
    <![CDATA[
			    GROUP BY B.NM   
			     ) T2
			     WHERE 1=1
			       AND T1.NM = T2.NM
			       ORDER BY 3 DESC
	]]>
	</select>
	
	
  
  <!-- 10page  TEXT-01 -->
  <select id="rpt-evntEff-010-001" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
          SELECT B.FULL_NAME AS NM
             , SUM(IN_CNT) AS IN_CNT 
             , ROUND(SUM(IN_CNT) / (SUM(SUM(IN_CNT)) OVER())*100,1) RATE
          FROM TBADMI_INFLOW_INFO_D_U2 A
             , TBREGION B
         WHERE 1=1
           AND A.IN_CTY_CD = B.ID
           AND A.IN_CTY_CD <> SUBSTR(#{h3Cd},1,4)
           AND A.STDR_DATE between #{startDate} AND  #{endDate}
           AND admi_cd = #{admiCd}
           AND B.RGN_CLSS ='H2'
        GROUP BY B.FULL_NAME
        ORDER BY 2 DESC
        LIMIT 3
  ]]>    
  </select>
  
      <!-- 10page text02 -->
  <select id="rpt-evntEff-010-005" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
    SELECT   B.FULL_NAME AS NM
           , ROUND(SUM(IN_CNT) / (SUM(SUM(IN_CNT)) OVER())*100,1) RATE
        FROM TBADMI_INFLOW_INFO_D_U2 A
           , TBREGION B 
       WHERE 1=1
         AND admi_cd = #{admiCd}
         AND SUBSTR(A.IN_CTY_CD,1,2) = B.ID
         AND A.IN_CTY_CD <> SUBSTR(#{admiCd},1,4)
         AND B.RGN_CLSS ='H1'
         AND A.STDR_DATE between #{startDate} AND  #{endDate}
      GROUP BY B.FULL_NAME 
      ORDER BY 2 DESC
      LIMIT 3  
  ]]>
  </select>
  
  <!-- 10page  표 1 ~ 10 -->
  <select id="rpt-evntEff-010-002" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
      SELECT B.FULL_NAME AS NM
           , SUM(IN_CNT) AS IN_CNT 
           , ROUND(SUM(IN_CNT) / (SUM(SUM(IN_CNT)) OVER())*100,1) RATE
           , RANK() OVER( ORDER BY SUM(IN_CNT) DESC) RNK
        FROM TBADMI_INFLOW_INFO_D_U2 A
           , TBREGION B
       WHERE 1=1
         AND A.IN_CTY_CD = B.ID
         AND A.IN_CTY_CD <> SUBSTR(#{h3Cd},1,4)
         AND A.STDR_DATE between #{startDate} AND  #{endDate}
         AND admi_cd = #{admiCd}
         AND B.RGN_CLSS ='H2'
      GROUP BY B.FULL_NAME
      ORDER BY 2 DESC
      LIMIT 10   
    ]]>    
  </select>
  
  <!-- 10page  표 11 ~ 20 -->
  <select id="rpt-evntEff-010-004" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
    SELECT B.FULL_NAME AS NM
           , SUM(IN_CNT) AS IN_CNT 
           , ROUND(SUM(IN_CNT) / (SUM(SUM(IN_CNT)) OVER())*100,1) RATE
           , RANK() OVER( ORDER BY SUM(IN_CNT) DESC) RNK
        FROM TBADMI_INFLOW_INFO_D_U2 A
           , TBREGION B
       WHERE 1=1
         AND A.IN_CTY_CD = B.ID
         AND A.IN_CTY_CD <> SUBSTR(#{h3Cd},1,4)
         AND A.STDR_DATE between #{startDate} AND  #{endDate}
         AND admi_cd = #{admiCd}
         AND B.RGN_CLSS ='H2'
       GROUP BY B.FULL_NAME
       ORDER BY 2 DESC
       LIMIT 10 offset 10 
    ]]>      
  </select>
  
  <!-- 10page 주제도 전국 -->
  <select id="rpt-evntEff-010-003" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
    SELECT B.ID 
         , B.NM
           , SUM(IN_CNT) AS IN_CNT 
           , ROUND(SUM(IN_CNT) / (SUM(SUM(IN_CNT)) OVER())*100,1) RATE   
        FROM TBADMI_INFLOW_INFO_D_U2 A
           , TBREGION_S B
       WHERE 1=1
         AND A.IN_CTY_CD = B.ID
         AND A.IN_CTY_CD <> SUBSTR(#{h3Cd},1,4)
         AND A.STDR_DATE between #{startDate} AND  #{endDate}
         AND admi_cd = #{admiCd}
         AND B.RGN_CLSS ='H2'
      GROUP BY B.NM, B.ID
      ORDER BY 2 DESC
  ]]>      
  </select>
  
  <!-- 11page  TEXT-01 -->
  <select id="rpt-evntEff-011-001" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
     SELECT A.SALE_AMT AS SALE_AMT  
          , A.SALE_CNT AS SALE_CNT  
          , B.SALE_AMT AS TOT_SALE_AMT 
          , B.SALE_CNT AS TOT_SALE_CNT
          , ROUND(A.SALE_AMT/B.SALE_AMT*100,1) AS RATE_AMT
          , ROUND(A.SALE_CNT/B.SALE_CNT*100,1) AS RATE_CNT
       FROM ( SELECT 
                     SUM(A.SALE_AMT) AS SALE_AMT  
                   , SUM(A.SALE_CNT) AS SALE_CNT
                FROM      
                     TBADMI_VISIT_UPJONG_INFO_D A
                WHERE 1=1
                  AND A.STDR_DATE between #{startDate} AND  #{endDate}
                  AND A.ADMI_CD = #{admiCd}              
            ) A
          , ( SELECT 
                     SUM(A.SALE_AMT) AS SALE_AMT  
                   , SUM(A.SALE_CNT) AS SALE_CNT
                FROM      
                     TBADMI_UPJONG_INFO_D A
                WHERE 1=1
                AND A.STDR_DATE between #{startDate} AND  #{endDate}
                AND A.ADMI_CD = #{admiCd}               
             )B  
  ]]>    
  </select>
  
  <!-- 11page  그래프01 -->
  <select id="rpt-evntEff-011-003" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
     SELECT SUM(A.SALE_AMT) AS SALE_AMT 
          , SUM(B.SALE_AMT) AS TOT_SALE_AMT 
          , ROUND(SUM(A.SALE_AMT) / SUM(B.SALE_AMT) * 100,1) AS RATE1 
          , 100 - ROUND(SUM(A.SALE_AMT) / SUM(B.SALE_AMT) * 100,1) AS RATE2 
          , SUM(A.SALE_CNT) AS SALE_CNT  
          , SUM(B.SALE_CNT) AS TOT_SALE_CNT  
          , ROUND(SUM(A.SALE_CNT) / SUM(B.SALE_CNT) * 100,1) AS RATE3  
          , 100 - ROUND(SUM(A.SALE_CNT) / SUM(B.SALE_CNT) * 100,1) AS RATE4 
       FROM ( SELECT SUM(A.SALE_AMT) AS SALE_AMT  
                   , SUM(A.SALE_CNT) AS SALE_CNT
                FROM TBADMI_VISIT_UPJONG_INFO_D A
               WHERE 1=1
                 AND A.STDR_DATE between #{startDate} AND  #{endDate}
                 AND A.ADMI_CD = #{admiCd}                
            ) A
          , ( SELECT SUM(A.SALE_AMT) AS SALE_AMT  
                   , SUM(A.SALE_CNT) AS SALE_CNT
                FROM TBADMI_UPJONG_INFO_D A
                WHERE 1=1
                  AND A.STDR_DATE between #{startDate} AND  #{endDate}
                  AND A.ADMI_CD = #{admiCd}                     
             )B  
  ]]>
  </select>

  <!-- 11page  TEXT-3 방문객 소비단가 -->
  <select id="rpt-evntEff-011-002" parameterType="java.util.HashMap" resultType="java.util.HashMap"> 
  <![CDATA[
     SELECT B.SALE_CNT                                                   AS TOT_SALE_CNT       --전체 거래량
          , B.SALE_AMT_CNT                                               AS TOT_SALE_AMT_CNT   --전체 소비단가
          , A.SALE_CNT                                                   AS VISIT_SALE_CNT     --방문객 거래량
          , A.SALE_AMT_CNT                                               AS VISIT_SALE_AMT_CNT --방문객 소비단가
          , ROUND(A.SALE_CNT/B.SALE_CNT*100,1)                           AS VISIT_RATE         --방분객 비율
          , B.SALE_CNT - A.SALE_CNT                                      AS H_SALE_CNT         --지역주민 거래량
          , (CASE WHEN (B.SALE_CNT - A.SALE_CNT) = 0 THEN 0 ELSE
            ROUND((B.SALE_AMT - A.SALE_AMT) / (B.SALE_CNT - A.SALE_CNT)) END) AS H_SALE_AMT_CNT     --지역주민  소비단가
          , 100 - ROUND(A.SALE_CNT/B.SALE_CNT*100,1)                     AS H_RATE             --지역주민 비율
          , ( COALESCE((CASE WHEN (B.SALE_CNT - A.SALE_CNT) = 0 THEN 0 ELSE
            ROUND((B.SALE_AMT - A.SALE_AMT) / (B.SALE_CNT - A.SALE_CNT)) END),0) - COALESCE(A.SALE_AMT_CNT,0) ) AS H_VISIT --지역주민과 방문객 소비단가 차이
       FROM ( SELECT 
                     SUM(A.SALE_AMT) AS SALE_AMT  
                   , SUM(A.SALE_CNT) AS SALE_CNT
                   , ROUND(SUM(A.SALE_AMT)/SUM(A.SALE_CNT)) AS SALE_AMT_CNT
                FROM      
                     TBADMI_VISIT_UPJONG_INFO_D A
                WHERE 1=1
                  AND A.STDR_DATE between #{startDate} AND  #{endDate}
                  AND A.ADMI_CD = #{admiCd}               
            ) A
          , ( SELECT 
                     SUM(A.SALE_AMT) AS SALE_AMT  
                   , SUM(A.SALE_CNT) AS SALE_CNT
                   , ROUND(SUM(A.SALE_AMT)/SUM(A.SALE_CNT)) AS SALE_AMT_CNT
                FROM      
                     TBADMI_UPJONG_INFO_D A
                WHERE 1=1
                AND A.STDR_DATE between #{startDate} AND  #{endDate}
                AND A.ADMI_CD = #{admiCd}                 
             )B  
  ]]>    
  </select>
  

  
  <!-- 12page  TEXT 1 -->
  <select id="rpt-evntEff-012-001" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
     SELECT T1.NM
          , ROUND(T1.AVG_AMT,1) AS AVG_AMT
          , ROUND((T1.AVG_AMT - T2.AVG_AMT) / T2.AVG_AMT *100,1) AS RATE
      FROM
          (
          SELECT B.NM
               ,(SUM(SALE_AMT) /  (#{endDate}::date - #{startDate}::date + 1)) AS AVG_AMT     
            FROM TBADMI_VISIT_UPJONG_INFO_D A
               , TBREGION B
           WHERE 1=1
             AND A.ADMI_CD = B.ID
             AND A.STDR_DATE >= #{startDate}
             AND A.STDR_DATE <= #{endDate}
             AND SALE_AMT > 0
             AND SALE_CNT > 0
             AND ADMI_CD    =#{admiCd}           
           GROUP BY B.NM                 
          ) T1
        ,(
          SELECT B.NM
               ,(case
               when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7
                  THEN   (COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END)/7 ,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END)/7,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END)/7,0))/3 
               when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) between  7 and 13 
                then (
               COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END)/7 ,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END)/7,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END)/7,0) 
	           + COALESCE(SUM(CASE  
                           WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
	                       AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
		             THEN SALE_AMT/7		             
		             ELSE 0 END)) 
		             )/4
		             when (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14 
		         then (
               COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END)/7 ,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END)/7,0)  
	           + COALESCE(SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END)/7,0) 
	           + COALESCE(SUM(CASE  
                           WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
	                       AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
		             THEN SALE_AMT/7		             
		             ELSE 0 END),0) 
		       + COALESCE(SUM(CASE 
                           WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
		                   AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
		                   THEN SALE_AMT/7
		             ELSE 0 END),0)
		             )/5     
		          END    
		         ) as AVG_AMT
            FROM TBADMI_VISIT_UPJONG_INFO_D A
               , TBREGION B    
           WHERE 1=1
             AND A.ADMI_CD = B.ID
             AND ( A.STDR_DATE BETWEEN TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD')
              OR A.STDR_DATE BETWEEN TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 14,'YYYYMMDD'))
             AND SALE_AMT > 0
             AND SALE_CNT > 0
             AND ADMI_CD    =#{admiCd}            
         GROUP BY B.NM    
         ) T2
         WHERE 1=1
    ]]>
   </select>
  
  <!-- 12page  TEXT 2 -->
  <select id="rpt-evntEff-012-002" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[   
     SELECT T11.NM 
          , T11.ID
          , T11.RATE
      FROM
          (
select
        nm
      ,id  
      ,RATE
      ,CNT_RATE
from (
			SELECT NM 
			     , ID 
  	  		     , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13
	                     THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) )/4) * 100,1)
	                     WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7
	                     THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0))/3) * 100,1)
	                     WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
	                     THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) * 100,1)
	                     ELSE 0 
	                END ) AS RATE  
			     , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13
	                     THEN ROUND((CNT_TERM - ( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0) + COALESCE(CNT_LW2,0))/4) /(( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0) + COALESCE(CNT_LW2,0) )/4) * 100,1)
	                     WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7
	                     THEN ROUND((CNT_TERM - ( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0) )/3) /(( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0))/3) * 100,1)
	                     WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
	                     THEN ROUND((CNT_TERM - ( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0) + COALESCE(CNT_LW2,0) + COALESCE(CNT_LW1,0))/5) /(( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0) + COALESCE(CNT_LW2,0) + COALESCE(CNT_LW1,0))/5) * 100,1)
	                     ELSE 0 
	                END ) AS CNT_RATE  
			  FROM
			      (
			        SELECT SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END)/7 AS LW5  
			             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END)/7 AS LW4  
			             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END)/7 AS LW3 
		                 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +7,'YYYYMMDD')
		                            AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr)  >= 7
		                            THEN SALE_AMT/7
		                   ELSE NULL END) AS LW2 
		                 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
		                            AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr)  >= 14
		                            THEN SALE_AMT/7		                   
		                   ELSE NULL END) AS LW1 
			             , SUM(CASE WHEN STDR_DATE BETWEEN  #{startDate} AND #{endDate} THEN SALE_AMT END)/ (TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1) AS TERM 
				     	 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_CNT END)/7 AS CNT_LW5  
			             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_CNT END)/7 AS CNT_LW4  
			             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_CNT END)/7 AS CNT_LW3 
		                 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +7,'YYYYMMDD')
		                            AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr)  >= 7
		                            THEN SALE_CNT/7
		                   ELSE NULL END) AS CNT_LW2 
		                 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
		                            AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr)  >= 14
		                            THEN SALE_CNT/7
		                   ELSE NULL END) AS CNT_LW1  
			             , SUM(CASE WHEN STDR_DATE BETWEEN  #{startDate} AND #{endDate} THEN SALE_CNT END)/ (TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1) AS CNT_TERM  
					     , B.ID 
					     , B.NM 
					 FROM TBADMI_VISIT_UPJONG_INFO_D A
					    , TBREGION B 
				        WHERE 1=1
					  AND A.ADMI_CD = B.ID
				          AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') 
				          AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
					  AND SALE_AMT > 0
					  AND SALE_CNT > 0				  
	]]>
	<!-- ROW COUNT(1) 3이상 일때 -->
    <if test='admiAround != null and admiAround != ""'>  
	<![CDATA[		       
					  AND ADMI_CD IN (${admiAround})
	]]>			 
    </if>
    <!-- ROW COUNT(1) 3 미만 일때 -->
	<if test='admiAround == null or admiAround == ""'> 
			    	  AND ADMI_CD IN (SELECT B.ID  
			    		    		    FROM TBREGION A
			    		    			   , TBREGION B 
			    		    		   WHERE A.ID = #{admiCd} 
			    		    			 AND B.ID like #{ctyCd}||'%'
			    		    			 AND B.ID != #{admiCd}
			    		    			 AND B.RGN_CLSS ='H4' 
			    		    		   ORDER BY ST_Distance(A.SHAPE,B.SHAPE) LIMIT 3)
	</if> 
	<![CDATA[
				    GROUP BY ID, NM
			      ) T2
			  WHERE 1=1
	            AND (COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) > 0 
	                ORDER BY  3 DESC
	                ) T
	                union all          
			SELECT NM 
			     , ID 
  		     , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13 and ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0)) != 0
                     THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) )/4) * 100,1)
                     WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7  and  ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0)) != 0
                     THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0))/3) * 100,1)
                     WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14  AND ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) !=0
                     THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) * 100,1)
                     ELSE 0 
                END ) AS RATE 
						     , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13 AND ( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0) + COALESCE(CNT_LW2,0) ) !=0
				                     THEN ROUND((CNT_TERM - ( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0) + COALESCE(CNT_LW2,0))/4) /(( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0) + COALESCE(CNT_LW2,0) )/4) * 100,1)
				                     WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7 AND ( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0)) !=0
				                     THEN ROUND((CNT_TERM - ( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0) )/3) /(( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0))/3) * 100,1)
				                     WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14 AND ( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0) + COALESCE(CNT_LW2,0) + COALESCE(CNT_LW1,0)) !=0
				                     THEN ROUND((CNT_TERM - ( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0) + COALESCE(CNT_LW2,0) + COALESCE(CNT_LW1,0))/5) /(( COALESCE(CNT_LW5,0) + COALESCE(CNT_LW4,0) + COALESCE(CNT_LW3,0) + COALESCE(CNT_LW2,0) + COALESCE(CNT_LW1,0))/5) * 100,1)
				                     ELSE 0 
				                END ) AS CNT_RATE  	                  
			  FROM
			      (
			        SELECT SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END)/7 AS LW5  
			             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END)/7 AS LW4  
			             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END)/7 AS LW3 
		                 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +7,'YYYYMMDD')
		                            AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr)  >= 7
		                            THEN SALE_AMT/7
		                   ELSE NULL END) AS LW2 
		                 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
		                            AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr)  >= 14
		                            THEN SALE_AMT/7		                   
		                   ELSE NULL END) AS LW1 
			             , SUM(CASE WHEN STDR_DATE BETWEEN  #{startDate} AND #{endDate} THEN SALE_AMT END)/ (TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1) AS TERM 
				     	 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_CNT END)/7 AS CNT_LW5  
			             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_CNT END)/7 AS CNT_LW4  
			             , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_CNT END)/7 AS CNT_LW3 
		                 , SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +7,'YYYYMMDD')
		                            AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr)  >= 7
		                            THEN SALE_CNT/7
		                   ELSE NULL END) AS CNT_LW2 
		                 , SUM(CASE 
		                   WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
		                   AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr)  >= 14
		                   THEN SALE_CNT/7
		                   ELSE NULL END) AS CNT_LW1  
			             , SUM(CASE WHEN STDR_DATE BETWEEN  #{startDate} AND #{endDate} THEN SALE_CNT END)/ (TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1) AS CNT_TERM  
					     , B.ID 
					     , B.NM 
					 FROM TBADMI_VISIT_UPJONG_INFO_D A
					    , TBREGION B 
				        WHERE 1=1
					  AND A.ADMI_CD = B.ID
				          AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') 
				          AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
				          AND ADMI_CD = #{admiCd}
					  AND SALE_AMT > 0
					  AND SALE_CNT > 0						   
					GROUP BY ID, NM
			     ) T1
			 WHERE 1=1
	           AND (COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) > 0  
		) T11

  ]]>
  
  </select>

  <!-- 12page  TEXT 3 -->
  <select id="rpt-evntEff-012-003" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
    	 SELECT CHR
	      , SUM_CNT
	      , ROUND((SUM_CNT /TOTAL_CNT)*100,1) AS RATE
	  FROM      
	      (
		    SELECT (CASE GREATEST(SUM(M_20_CNT), SUM(M_30_CNT), SUM(M_40_CNT), SUM(M_50_CNT), SUM(M_60_CNT)
		                , SUM(F_20_CNT), SUM(F_30_CNT), SUM(F_40_CNT), SUM(F_50_CNT), SUM(F_60_CNT)) 
		                WHEN SUM(M_20_CNT) THEN '20대 남성'
		                WHEN SUM(M_30_CNT) THEN '30대 남성'
		                WHEN SUM(M_40_CNT) THEN '40대 남성' 
		                WHEN SUM(M_50_CNT) THEN '50대 남성' 
		                WHEN SUM(M_60_CNT) THEN '60대 남성' 
		                WHEN SUM(F_20_CNT) THEN '20대 여성' 
		                WHEN SUM(F_30_CNT) THEN '30대 여성' 
		                WHEN SUM(F_40_CNT) THEN '40대 여성' 
		                WHEN SUM(F_50_CNT) THEN '50대 여성' 
		                WHEN SUM(F_60_CNT) THEN '60대 여성' 
		          END) CHR,
		          GREATEST(SUM(M_20_CNT), SUM(M_30_CNT), SUM(M_40_CNT), SUM(M_50_CNT), SUM(M_60_CNT), SUM(F_20_CNT), SUM(F_30_CNT), SUM(F_40_CNT), SUM(F_50_CNT), SUM(F_60_CNT)) AS SUM_CNT
		     FROM TBADMI_VISIT_INFO_D_NEW
		     WHERE 1=1
		       AND STDR_DATE between #{startDate} AND  #{endDate}
		       AND ADMI_CD = #{admiCd}
		       AND LOC_CLSS_CD ='E'
		       
    	  ) T1
	      ,(
		      SELECT SUM(TOTAL_CNT) AS  TOTAL_CNT
		     FROM TBADMI_VISIT_INFO_D_NEW
		     WHERE 1=1
		       AND STDR_DATE between #{startDate} AND #{endDate}
		       AND ADMI_CD = #{admiCd}
		      
	      )T2
  ]]>
  </select>
  

  <!-- 12page  TEXT 4 -->
  <select id="rpt-evntEff-012-004" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
    	 SELECT CHR
	      , SUM_CNT
	      , ROUND((SUM_CNT /TOTAL_CNT)*100,1) AS RATE
	  FROM      
	      (
		    SELECT (CASE GREATEST(SUM(M_20_CNT), SUM(M_30_CNT), SUM(M_40_CNT), SUM(M_50_CNT), SUM(M_60_CNT)
		                , SUM(F_20_CNT), SUM(F_30_CNT), SUM(F_40_CNT), SUM(F_50_CNT), SUM(F_60_CNT)) 
		                WHEN SUM(M_20_CNT) THEN '20대 남성'
		                WHEN SUM(M_30_CNT) THEN '30대 남성'
		                WHEN SUM(M_40_CNT) THEN '40대 남성' 
		                WHEN SUM(M_50_CNT) THEN '50대 남성' 
		                WHEN SUM(M_60_CNT) THEN '60대 남성' 
		                WHEN SUM(F_20_CNT) THEN '20대 여성' 
		                WHEN SUM(F_30_CNT) THEN '30대 여성' 
		                WHEN SUM(F_40_CNT) THEN '40대 여성' 
		                WHEN SUM(F_50_CNT) THEN '50대 여성' 
		                WHEN SUM(F_60_CNT) THEN '60대 여성' 
		          END) CHR,
		          GREATEST(SUM(M_20_CNT), SUM(M_30_CNT), SUM(M_40_CNT), SUM(M_50_CNT), SUM(M_60_CNT), SUM(F_20_CNT), SUM(F_30_CNT), SUM(F_40_CNT), SUM(F_50_CNT), SUM(F_60_CNT)) AS SUM_CNT
		     FROM TBADMI_VISIT_INFO_D_NEW
		     WHERE 1=1
		       AND STDR_DATE between #{startDate} AND  #{endDate}
		       AND ADMI_CD = #{admiCd}
		       AND LOC_CLSS_CD = 'R'     
		  ) T1
	      ,(
		      SELECT SUM(TOTAL_CNT) AS  TOTAL_CNT
		     FROM TBADMI_VISIT_INFO_D_NEW
		     WHERE 1=1
		       AND STDR_DATE between #{startDate} AND #{endDate}
		       AND ADMI_CD = #{admiCd}   
	      )T2
  ]]>
  </select>
    
  <select id="rpt-evntEff-012-005" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
       SELECT ROUND(SUM(CASE  WHEN LOC_CLSS_CD ='E' THEN         M_20_CNT END)/SUM(total_cnt)*100,1) AS E_M_20_CNT  
            , ROUND(SUM(CASE  WHEN LOC_CLSS_CD ='E' THEN         M_30_CNT END)/SUM(total_cnt)*100,1) AS E_M_30_CNT
            , ROUND(SUM(CASE  WHEN LOC_CLSS_CD ='E' THEN         M_40_CNT END)/SUM(total_cnt)*100,1) AS E_M_40_CNT
            , ROUND(SUM(CASE  WHEN LOC_CLSS_CD ='E' THEN         M_50_CNT END)/SUM(total_cnt)*100,1) AS E_M_50_CNT
            , ROUND(SUM(CASE  WHEN LOC_CLSS_CD ='E' THEN         M_60_CNT END)/SUM(total_cnt)*100,1) AS E_M_60_CNT
            , ROUND(SUM(CASE  WHEN LOC_CLSS_CD ='E' THEN         F_20_CNT END)/SUM(total_cnt)*100,1) AS E_F_20_CNT
            , ROUND(SUM(CASE  WHEN LOC_CLSS_CD ='E' THEN         F_30_CNT END)/SUM(total_cnt)*100,1) AS E_F_30_CNT
            , ROUND(SUM(CASE  WHEN LOC_CLSS_CD ='E' THEN         F_40_CNT END)/SUM(total_cnt)*100,1) AS E_F_40_CNT
            , ROUND(SUM(CASE  WHEN LOC_CLSS_CD ='E' THEN         F_50_CNT END)/SUM(total_cnt)*100,1) AS E_F_50_CNT
            , ROUND(SUM(CASE  WHEN LOC_CLSS_CD ='E' THEN         F_60_CNT END)/SUM(total_cnt)*100,1) AS E_F_60_CNT  
            , ROUND(SUM(CASE  WHEN LOC_CLSS_CD = 'R' THEN        M_20_CNT END)/SUM(total_cnt)*100,1) AS H_M_20_CNT  
            , ROUND(SUM(CASE  WHEN LOC_CLSS_CD = 'R' THEN        M_30_CNT END)/SUM(total_cnt)*100,1) AS H_M_30_CNT
            , ROUND(SUM(CASE  WHEN LOC_CLSS_CD = 'R' THEN        M_40_CNT END)/SUM(total_cnt)*100,1) AS H_M_40_CNT
            , ROUND(SUM(CASE  WHEN LOC_CLSS_CD = 'R' THEN        M_50_CNT END)/SUM(total_cnt)*100,1) AS H_M_50_CNT
            , ROUND(SUM(CASE  WHEN LOC_CLSS_CD = 'R' THEN        M_60_CNT END)/SUM(total_cnt)*100,1) AS H_M_60_CNT
            , ROUND(SUM(CASE  WHEN LOC_CLSS_CD = 'R' THEN        F_20_CNT END)/SUM(total_cnt)*100,1) AS H_F_20_CNT
            , ROUND(SUM(CASE  WHEN LOC_CLSS_CD = 'R' THEN        F_30_CNT END)/SUM(total_cnt)*100,1) AS H_F_30_CNT
            , ROUND(SUM(CASE  WHEN LOC_CLSS_CD = 'R' THEN        F_40_CNT END)/SUM(total_cnt)*100,1) AS H_F_40_CNT
            , ROUND(SUM(CASE  WHEN LOC_CLSS_CD = 'R' THEN        F_50_CNT END)/SUM(total_cnt)*100,1) AS H_F_50_CNT
            , ROUND(SUM(CASE  WHEN LOC_CLSS_CD = 'R' THEN        F_60_CNT END)/SUM(total_cnt)*100,1) AS H_F_60_CNT 
         FROM TBADMI_VISIT_INFO_D_NEW
        WHERE 1=1
          AND ADMI_CD = #{admiCd}
          AND STDR_DATE >= #{startDate} 
          AND STDR_DATE <=#{endDate}
      ]]> 
  </select>
  
  
  <!-- 12page text01 -->
  <select id="rpt-evntEff-013-001" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[    
      with tmp as (
       SELECT
              (case when loc_clss_cd = 'E' then 'E'
                    when loc_clss_cd = 'R' then 'R' end) as loc_clss_cd
            , round(sum(case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 1 then total_cnt end)
                   /count(distinct case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 1 then stdr_date end)) as mon_cnt
            , round(sum(case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 2 then total_cnt end)
                   /count(distinct case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 2 then stdr_date end)) as tue_cnt
            , round(sum(case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 3 then total_cnt end)
                   /count(distinct case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 3 then stdr_date end)) as wed_cnt
            , round(sum(case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 4 then total_cnt end)
                   /count(distinct case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 4 then stdr_date end)) as thu_cnt
            , round(sum(case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 5 then total_cnt end)
                   /count(distinct case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 5 then stdr_date end)) as fri_cnt
            , round(sum(case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 6 then total_cnt end)
                   /count(distinct case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 6 then stdr_date end)) as sat_cnt
            , round(sum(case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 0 then total_cnt end) 
                   /count(distinct case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 0 then stdr_date end)) as sun_cnt
         FROM tbadmi_info_d4
        WHERE 1=1
          AND ADMI_CD = #{admiCd}
          AND STDR_DATE >= #{startDate} 
          AND STDR_DATE <= #{endDate}
          GROUP BY  (case when loc_clss_cd = 'E' then 'E'
                   when loc_clss_cd = 'R' then 'R'  end) 
       ) 
  select DIV_CD
      , DOW
      , RATE  
    from 
      (
       SELECT  'E'    AS DIV_CD
              ,'월요일' AS DOW
              ,round(coalesce(mon_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
         FROM tmp
         WHERE loc_clss_cd ='E'
       UNION ALL
       SELECT 'E'    AS DIV_CD
              ,'화요일'
            , round(coalesce(tue_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
         FROM tmp
         WHERE loc_clss_cd ='E'
       UNION ALL
       SELECT 'E'    AS DIV_CD
              ,'수요일'
            , round(coalesce(wed_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
         FROM tmp
         WHERE loc_clss_cd ='E'
       UNION ALL
       SELECT 'E'    AS DIV_CD
              ,'목요일'
            , round(coalesce(thu_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
         FROM tmp
         WHERE loc_clss_cd ='E'
       UNION ALL
       SELECT 'E'    AS DIV_CD
              ,'금요일'
            , round(coalesce(fri_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
         FROM tmp
         WHERE loc_clss_cd ='E'
       UNION ALL
       SELECT 'E'    AS DIV_CD
              ,'토요일'
            ,round(coalesce(sat_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
         FROM tmp
         WHERE loc_clss_cd ='E'
       UNION ALL
       SELECT 'E'    AS DIV_CD
              ,'일요일'
            ,round(coalesce(sun_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
         FROM tmp
         WHERE loc_clss_cd ='E'
       UNION ALL 
       SELECT  'R'    AS DIV_CD
              ,'월요일' AS DOW
              ,round(coalesce(mon_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
         FROM tmp
         WHERE loc_clss_cd = 'R'
       UNION ALL
       SELECT 'R'    AS DIV_CD
              ,'화요일'
            , round(coalesce(tue_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
         FROM tmp
         WHERE loc_clss_cd = 'R'
       UNION ALL
       SELECT 'R'    AS DIV_CD
              ,'수요일'
            , round(coalesce(wed_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
         FROM tmp
         WHERE loc_clss_cd = 'R'
       UNION ALL
       SELECT 'R'    AS DIV_CD
              ,'목요일'
            , round(coalesce(thu_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
         FROM tmp
         WHERE loc_clss_cd = 'R'
       UNION ALL
       SELECT 'R'    AS DIV_CD
              ,'금요일'
            , round(coalesce(fri_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
         FROM tmp
         WHERE loc_clss_cd = 'R'
       UNION ALL
       SELECT 'R'    AS DIV_CD
              ,'토요일'
            ,round(coalesce(sat_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
         FROM tmp
         WHERE loc_clss_cd = 'R'
       UNION ALL
       SELECT 'R'    AS DIV_CD
              ,'일요일'
            ,round(coalesce(sun_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp ) * 100,1) as RATE
         FROM tmp
         WHERE loc_clss_cd ='R'
       ) t1
   order by DIV_CD ASC, RATE DESC
  ]]>
  </select>     
     
  <!-- 12page text02 -->
  <select id="rpt-evntEff-013-002" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[   
		with tmp as (
		       SELECT
		              b.CODE  as loc_clss_cd
		            , round(sum(case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 1 then total_cnt end)
		                   /count(distinct case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 1 then stdr_date end)) as mon_cnt
		            , round(sum(case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 2 then total_cnt end)
		                   /count(distinct case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 2 then stdr_date end)) as tue_cnt
		            , round(sum(case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 3 then total_cnt end)
		                   /count(distinct case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 3 then stdr_date end)) as wed_cnt
		            , round(sum(case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 4 then total_cnt end)
		                   /count(distinct case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 4 then stdr_date end)) as thu_cnt
		            , round(sum(case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 5 then total_cnt end)
		                   /count(distinct case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 5 then stdr_date end)) as fri_cnt
		            , round(sum(case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 6 then total_cnt end)
		                   /count(distinct case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 6 then stdr_date end)) as sat_cnt
		            , round(sum(case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 0 then total_cnt end)
		                   /count(distinct case when EXTRACT(DOW FROM to_date(stdr_date,'YYYYMMDD'))= 0 then stdr_date end)) as sun_cnt
		         FROM tbcomm_code B
                left outer join tbadmi_info_d4 A
                 on 1=1
                  and b.CODE = a.LOC_CLSS_CD
		          AND ADMI_CD = #{admiCd}
		          AND STDR_DATE >= #{startDate}
		          AND STDR_DATE <= #{endDate}  
		          WHERE b.cd_id ='LOC_CLSS_CD'                         
                GROUP BY b.CODE  
		)
		SELECT ABS(T11.RATE - T22.RATE) AS DIFF_RATE,
		       T11.DOW
		 FROM 
		 (SELECT T1.DIV_CD
		     , T1.DOW
		     , T1.RATE
		   FROM 
		     (
		      SELECT  'E'    AS DIV_CD
		             ,'월요일' AS DOW
		             ,round(coalesce(mon_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
		        FROM tmp
		        WHERE loc_clss_cd ='E'
		      UNION ALL
		      SELECT 'E'    AS DIV_CD
		             ,'화요일'
		           , round(coalesce(tue_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
		        FROM tmp
		        WHERE loc_clss_cd ='E'
		      UNION ALL
		      SELECT 'E'    AS DIV_CD
		             ,'수요일'
		           , round(coalesce(wed_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
		        FROM tmp
		        WHERE loc_clss_cd ='E'
		      UNION ALL
		      SELECT 'E'    AS DIV_CD
		             ,'목요일'
		           , round(coalesce(thu_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
		        FROM tmp
		        WHERE loc_clss_cd ='E'
		      UNION ALL
		      SELECT 'E'    AS DIV_CD
		             ,'금요일'
		           , round(coalesce(fri_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
		        FROM tmp
		        WHERE loc_clss_cd ='E'
		      UNION ALL
		      SELECT 'E'    AS DIV_CD
		             ,'토요일'
		           ,round(coalesce(sat_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
		        FROM tmp
		        WHERE loc_clss_cd ='E'
		      UNION ALL
		      SELECT 'E'    AS DIV_CD
		             ,'일요일'
		           ,round(coalesce(sun_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
		        FROM tmp
		        WHERE loc_clss_cd ='E'
		      ) T1
		      
		GROUP BY (T1.DOW, T1.DIV_CD, T1.RATE) ) T11,
		(SELECT T2.DIV_CD
		     , T2.DOW
		     , T2.RATE
		   FROM 
		      (
		      SELECT  'R'    AS DIV_CD
		             ,'월요일' AS DOW
		             ,round(coalesce(mon_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
		        FROM tmp
		        WHERE loc_clss_cd ='R'
		      UNION ALL
		      SELECT 'R'    AS DIV_CD
		             ,'화요일'
		           , round(coalesce(tue_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
		        FROM tmp
		        WHERE loc_clss_cd ='R'
		      UNION ALL
		      SELECT 'R'    AS DIV_CD
		             ,'수요일'
		           , round(coalesce(wed_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
		        FROM tmp
		        WHERE loc_clss_cd ='R'
		      UNION ALL
		      SELECT 'R'    AS DIV_CD
		             ,'목요일'
		           , round(coalesce(thu_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
		        FROM tmp
		        WHERE loc_clss_cd ='R'
		      UNION ALL
		      SELECT 'R'   AS DIV_CD
		             ,'금요일'
		           , round(coalesce(fri_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
		        FROM tmp
		        WHERE loc_clss_cd ='R'
		      UNION ALL
		      SELECT 'R'    AS DIV_CD
		             ,'토요일'
		           ,round(coalesce(sat_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp) * 100,1) as RATE
		        FROM tmp
		        WHERE loc_clss_cd ='R'
		      UNION ALL
		      SELECT 'R'    AS DIV_CD
		             ,'일요일'
		           ,round(coalesce(sun_cnt,0) / (select  sum(coalesce(mon_cnt,0) + coalesce(tue_cnt,0) + coalesce(wed_cnt,0) + coalesce(thu_cnt,0) + coalesce(fri_cnt,0) +coalesce(sat_cnt,0) +coalesce(sun_cnt,0)) total_cnt from  tmp ) * 100,1) as RATE
		        FROM tmp
		        WHERE loc_clss_cd ='R'
		      ) T2
		GROUP BY (T2.DOW, T2.DIV_CD, T2.RATE) ) T22
		WHERE T11.DOW = T22.DOW
		ORDER BY DIFF_RATE DESC 
  ]]>
  </select>
  
  <!-- 12page text04 -->
  <select id="rpt-evntEff-013-004" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
	SELECT T.CD_NM
	     , ABS(T.E_TOTAL_CNT - T.H_TOTAL_CNT) AS GAP
	  FROM (
        SELECT B.CD_NM      
	           , ROUND(SUM(CASE WHEN LOC_CLSS_CD = 'E' THEN  TOTAL_CNT END)/SUM(SUM(TOTAL_CNT)) OVER() * 100,1) AS E_TOTAL_CNT
			   , ROUND(SUM(CASE WHEN LOC_CLSS_CD = 'R' THEN  TOTAL_CNT END)/SUM(SUM(TOTAL_CNT)) OVER() * 100,1) AS H_TOTAL_CNT  
	        FROM TBCOMM_CODE B
	        LEFT OUTER JOIN 
	             (SELECT 
  	                     '1' as TIMEZON_CD
  	                   , LOC_CLSS_CD  
  	                   , sum(timezon_cd_1_cnt) as TOTAL_CNT
  	                   , COUNT(DISTINCT STDR_DATE) STDR_DATE
	                FROM
	                TBADMI_TIMEZON_INFO_D_U2
	             WHERE 1=1   
	        	   AND STDR_DATE BETWEEN #{startDate} AND #{endDate}
	               AND ADMI_CD = #{admiCd}
	             group by LOC_CLSS_CD  
	               UNION ALL
                  SELECT 
  	                     '2' as TIMEZON_CD
  	                     ,LOC_CLSS_CD
  	                   , sum(timezon_cd_2_cnt) as TOTAL_CNT
  	                   , COUNT(DISTINCT STDR_DATE) STDR_DATE
	                FROM
	                TBADMI_TIMEZON_INFO_D_U2
	             WHERE 1=1   
	        	   AND STDR_DATE BETWEEN #{startDate} AND #{endDate}
	               AND ADMI_CD = #{admiCd}
	               group by LOC_CLSS_CD  
	               UNION ALL
                  SELECT 
  	                     '3' as TIMEZON_CD
  	                     ,LOC_CLSS_CD
  	                   , sum(timezon_cd_3_cnt) as TOTAL_CNT
  	                   , COUNT(DISTINCT STDR_DATE) STDR_DATE
	                FROM
	                TBADMI_TIMEZON_INFO_D_U2
	             WHERE 1=1   
	        	   AND STDR_DATE BETWEEN #{startDate} AND #{endDate}
	               AND ADMI_CD = #{admiCd}	               
	               group by LOC_CLSS_CD  
	               UNION ALL
                  SELECT 
  	                     '4' as TIMEZON_CD
  	                     ,LOC_CLSS_CD
  	                   , sum(timezon_cd_4_cnt) as TOTAL_CNT
  	                   , COUNT(DISTINCT STDR_DATE) STDR_DATE
	                FROM
	                TBADMI_TIMEZON_INFO_D_U2
	             WHERE 1=1   
	        	   AND STDR_DATE BETWEEN #{startDate} AND #{endDate}
	               AND ADMI_CD = #{admiCd}	               
	               group by LOC_CLSS_CD  
	               UNION ALL
                  SELECT 
  	                     '5' as TIMEZON_CD
  	                     ,LOC_CLSS_CD
  	                   , sum(timezon_cd_5_cnt) as TOTAL_CNT
  	                   , COUNT(DISTINCT STDR_DATE) STDR_DATE
	                FROM
	                TBADMI_TIMEZON_INFO_D_U2
	             WHERE 1=1   
	        	   AND STDR_DATE BETWEEN #{startDate} AND #{endDate}
	               AND ADMI_CD = #{admiCd}	               
	               group by LOC_CLSS_CD  
	               UNION ALL
                  SELECT 
  	                     '6' as TIMEZON_CD
  	                     ,LOC_CLSS_CD
  	                   , sum(timezon_cd_6_cnt) as TOTAL_CNT
  	                   , COUNT(DISTINCT STDR_DATE) STDR_DATE
	                FROM
	                TBADMI_TIMEZON_INFO_D_U2
	             WHERE 1=1   
	        	   AND STDR_DATE BETWEEN #{startDate} AND #{endDate}
	               AND ADMI_CD = #{admiCd}	
	               group by LOC_CLSS_CD 
	               union ALL
                  SELECT 
  	                     '7' as TIMEZON_CD
  	                     ,LOC_CLSS_CD
  	                   , sum(timezon_cd_7_cnt) as TOTAL_CNT
  	                   , COUNT(DISTINCT STDR_DATE) STDR_DATE
	                FROM
	                TBADMI_TIMEZON_INFO_D_U2
	             WHERE 1=1   
	        	   AND STDR_DATE BETWEEN #{startDate} AND #{endDate}
	               AND ADMI_CD = #{admiCd}	
	               group by LOC_CLSS_CD 
 	             )A
	          ON A.TIMEZON_CD = B.CODE
	       WHERE   CD_ID = 'TIMEZON_CD'
	    GROUP BY B.CD_NM
	    ) AS T
	ORDER BY 2 DESC
	LIMIT 1
  ]]>
  </select>
  
  <!-- 12page graph04 -->
  <select id="rpt-evntEff-013-005" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  <![CDATA[
        SELECT B.CD_NM      
	           , ROUND(SUM(CASE WHEN LOC_CLSS_CD ='E' THEN TOTAL_CNT END)/SUM(SUM(TOTAL_CNT)) OVER() * 100,1) AS E_TOTAL_CNT
			   , ROUND(SUM(CASE WHEN LOC_CLSS_CD = 'R' THEN  TOTAL_CNT END)/SUM(SUM(TOTAL_CNT)) OVER() * 100,1) AS H_TOTAL_CNT  
	        FROM TBCOMM_CODE B
	        LEFT OUTER JOIN 
	             (SELECT 
  	                     '1' as TIMEZON_CD
  	                   , LOC_CLSS_CD  
  	                   , sum(timezon_cd_1_cnt) as TOTAL_CNT
  	                   , COUNT(DISTINCT STDR_DATE) STDR_DATE
	                FROM
	                TBADMI_TIMEZON_INFO_D_U2
	             WHERE 1=1   
	        	   AND STDR_DATE BETWEEN #{startDate} AND #{endDate}
	               AND ADMI_CD = #{admiCd}
	             group by LOC_CLSS_CD  
	               UNION ALL
                  SELECT 
  	                     '2' as TIMEZON_CD
  	                     ,LOC_CLSS_CD
  	                   , sum(timezon_cd_2_cnt) as TOTAL_CNT
  	                   , COUNT(DISTINCT STDR_DATE) STDR_DATE
	                FROM
	                TBADMI_TIMEZON_INFO_D_U2
	             WHERE 1=1   
	        	   AND STDR_DATE BETWEEN #{startDate} AND #{endDate}
	               AND ADMI_CD = #{admiCd}
	               group by LOC_CLSS_CD  
	               UNION ALL
                  SELECT 
  	                     '3' as TIMEZON_CD
  	                     ,LOC_CLSS_CD
  	                   , sum(timezon_cd_3_cnt) as TOTAL_CNT
  	                   , COUNT(DISTINCT STDR_DATE) STDR_DATE
	                FROM
	                TBADMI_TIMEZON_INFO_D_U2
	             WHERE 1=1   
	        	   AND STDR_DATE BETWEEN #{startDate} AND #{endDate}
	               AND ADMI_CD = #{admiCd}	               
	               group by LOC_CLSS_CD  
	               UNION ALL
                  SELECT 
  	                     '4' as TIMEZON_CD
  	                     ,LOC_CLSS_CD
  	                   , sum(timezon_cd_4_cnt) as TOTAL_CNT
  	                   , COUNT(DISTINCT STDR_DATE) STDR_DATE
	                FROM
	                TBADMI_TIMEZON_INFO_D_U2
	             WHERE 1=1   
	        	   AND STDR_DATE BETWEEN #{startDate} AND #{endDate}
	               AND ADMI_CD = #{admiCd}	               
	               group by LOC_CLSS_CD  
	               UNION ALL
                  SELECT 
  	                     '5' as TIMEZON_CD
  	                     ,LOC_CLSS_CD
  	                   , sum(timezon_cd_5_cnt) as TOTAL_CNT
  	                   , COUNT(DISTINCT STDR_DATE) STDR_DATE
	                FROM
	                TBADMI_TIMEZON_INFO_D_U2
	             WHERE 1=1   
	        	   AND STDR_DATE BETWEEN #{startDate} AND #{endDate}
	               AND ADMI_CD = #{admiCd}	               
	               group by LOC_CLSS_CD  
	               UNION ALL
                  SELECT 
  	                     '6' as TIMEZON_CD
  	                     ,LOC_CLSS_CD
  	                   , sum(timezon_cd_6_cnt) as TOTAL_CNT
  	                   , COUNT(DISTINCT STDR_DATE) STDR_DATE
	                FROM
	                TBADMI_TIMEZON_INFO_D_U2
	             WHERE 1=1   
	        	   AND STDR_DATE BETWEEN #{startDate} AND #{endDate}
	               AND ADMI_CD = #{admiCd}	
	               group by LOC_CLSS_CD 
	               union ALL
                  SELECT 
  	                     '7' as TIMEZON_CD
  	                     ,LOC_CLSS_CD
  	                   , sum(timezon_cd_7_cnt) as TOTAL_CNT
  	                   , COUNT(DISTINCT STDR_DATE) STDR_DATE
	                FROM
	                TBADMI_TIMEZON_INFO_D_U2
	             WHERE 1=1   
	        	   AND STDR_DATE BETWEEN #{startDate} AND #{endDate}
	               AND ADMI_CD = #{admiCd}	
	               group by LOC_CLSS_CD 
 	             )A
	          ON A.TIMEZON_CD = B.CODE
	         WHERE CD_ID = 'TIMEZON_CD'
	    GROUP BY B.CD_NM   
    ORDER BY 2 DESC
  ]]>
  </select>
  
  
  
    <!-- 15page  부록  -->
  <select id="rpt-evntEff-015-001" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	<![CDATA[
		SELECT CD_NM 
		     , (CASE WHEN LW5 IS NULL THEN '-' ELSE CAST(ROUND(LW5/1000000,1) AS TEXT) END) AS LW5    
		     , (CASE WHEN LW4 IS NULL THEN '-' ELSE CAST(ROUND(LW4/1000000,1) AS TEXT) END) AS LW4     
		     , (CASE WHEN LW3 IS NULL THEN '-' ELSE CAST(ROUND(LW3/1000000,1) AS TEXT) END) AS LW3     
		     , (CASE WHEN TERM IS NULL THEN '-' ELSE CAST(ROUND(TERM/1000000,1) AS TEXT) END) AS TERM     
		     , (CASE WHEN LW2 IS NULL THEN '-' ELSE CAST(ROUND(LW2/1000000,1) AS TEXT) END) AS LW2     
		     , (CASE WHEN LW1 IS NULL THEN '-' ELSE CAST(ROUND(LW1/1000000,1) AS TEXT) END) AS LW1    
  		       		     , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13
                                 THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4000000,1)
                             WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7
                                 THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3000000,1)     
                             WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
                                 THEN ROUND(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0) )/5000000,1)        
                             ELSE 0 END ) AS DAYS_RATE
  		     , (CASE WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) BETWEEN 7 AND 13 and ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0)) != 0
                     THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0))/4) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) )/4) * 100,1)
                     WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) < 7  and  ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0)) != 0
                     THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) )/3) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0))/3) * 100,1)
                     WHEN (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14  AND ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0)) !=0
                     THEN ROUND((TERM - ( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) /(( COALESCE(LW5,0) + COALESCE(LW4,0) + COALESCE(LW3,0) + COALESCE(LW2,0) + COALESCE(LW1,0))/5) * 100,1)
                     ELSE 0 
                END ) AS RATE    
		  FROM
		      (
		        SELECT UPJONG2_CD
		             , (SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -15,'YYYYMMDD') THEN SALE_AMT END)/7) AS LW5  
		             , (SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -14,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 8,'YYYYMMDD') THEN SALE_AMT END)/7) AS LW4  
		             , (SUM(CASE WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 7,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') - 1,'YYYYMMDD') THEN SALE_AMT END)/7) AS LW3 
		             , ROUND(SUM(CASE 
                                WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 1,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 7,'YYYYMMDD')
		                        AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 7
		                        THEN SALE_AMT / 7
		               ELSE NULL END)) AS LW2 
		              , ROUND(SUM(CASE 
                                WHEN STDR_DATE BETWEEN  TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') + 8,'YYYYMMDD') AND TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
		                        AND (select (to_date(stdr_ym,'YYYYMM') + INTERVAL '1 MONTH - 1 day')::date  -  TO_DATE(#{endDate},'YYYYMMDD') from tbcom_stdr) >= 14
		                        THEN SALE_AMT/ 7
		                ELSE NULL END)) AS LW1
		             , (SUM(CASE WHEN STDR_DATE BETWEEN  #{startDate} AND #{endDate} THEN SALE_AMT END)/ (TO_DATE(#{endDate},'YYYYMMDD') - TO_DATE(#{startDate},'YYYYMMDD') +1)) AS TERM  
		         FROM TBADMI_UPJONG_INFO_D A
		        WHERE 1=1
		          AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') 
		          AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
		          AND ADMI_CD = #{admiCd}
			        AND SALE_AMT > 0
			        AND SALE_CNT > 0
		          AND UPJONG2_CD NOT IN (SELECT DISTINCT UPJONG2_CD
		                                   FROM TBADMI_UPJONG_INFO_D a
		                                   WHERE 1=1
		                                     AND ADMI_CD = #{admiCd}
                                             AND A.STDR_DATE >= TO_CHAR(TO_DATE(#{startDate},'YYYYMMDD') -21,'YYYYMMDD') 
                                             AND A.STDR_DATE <= TO_CHAR(TO_DATE(#{endDate},'YYYYMMDD') +14,'YYYYMMDD')
		                                     AND STORE_CNT_FLG = 'N'
		                                )  			        
			 GROUP BY UPJONG2_CD     
		      ) T1
		      , TBCOMM_CODE T2
		  WHERE 1=1
		  AND T1.UPJONG2_CD = T2.CODE
          ORDER BY 9 desc nulls last
	]]>
	
	</select>
  
  
  <!-- 이벤트 효과 보고서 끝 ///// -->
  
</mapper>
